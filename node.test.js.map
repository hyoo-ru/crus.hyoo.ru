{"version":3,"sources":["../../../../../mam.ts","../../../../../mol/fail/fail.ts","../../../../../mol/wire/cursor/cursor.ts","../../../../../mol/wire/pub/pub.ts","../../../../../mol/wire/wire.ts","../../../../../mol/func/name/name.ts","../../../../../mol/dev/format/format.ts","../../../../../mol/wire/pub/sub/sub.ts","../../../../../mol/ambient/ambient.ts","../../../../../mol/delegate/delegate.ts","../../../../../mol/owning/owning.ts","../../../../../mol/fail/hidden/hidden.ts","../../../../../mol/object2/object2.ts","../../../../../mol/after/tick/tick.ts","../../../../../mol/promise/like/like.ts","../../../../../mol/wire/fiber/fiber.ts","../../../../../mol/compare/deep/deep.ts","../../../../../mol/log3/log3.ts","../../../../../mol/span/span.ts","../../../../../mol/tree2/to/string/string.ts","../../../../../mol/maybe/maybe.ts","../../../../../mol/tree2/tree2.ts","../../../../../mol/error/syntax/syntax.ts","../../../../../mol/tree2/from/string/string.ts","../../../../../mol/tree2/from/json/json.ts","../../../../../mol/term/color/color.ts","../../../../../mol/log3/log3.node.ts","../../../../../mol/wire/task/task.ts","../../../../../mol/wire/sync/sync.ts","../../../../../mol/object/object.ts","../../../../../mol/wire/method/method.ts","../../../../../mol/action/action.ts","../../../../../mol/rest/code/code.ts","../../../../../mol/dom/context/context.ts","../../../../../mol/fail/catch/catch.ts","../../../../../mol/fail/log/log.ts","../../../../../node/node.node.ts","../../../../../mol/error/mix/mix.ts","../../../../../mol/env/env.ts","../../../../../mol/env/env.node.ts","../../../../../mol/run/run.node.ts","../../../../../mol/exec/exec.node.ts","../../../../../mol/dom/context/context.node.ts","../../../../../mol/charset/encode/encode.ts","../../../../../mol/dom/dom.ts","../../../../../mol/dom/serialize/serialize.ts","../../../../../mol/rest/port/port.ts","../../../../../mol/guid/guid.ts","../../../../../mol/key/key.ts","../../../../../mol/after/timeout/timeout.ts","../../../../../mol/after/frame/frame.node.ts","../../../../../mol/wire/atom/atom.ts","../../../../../mol/wire/solo/solo.ts","../../../../../mol/wire/plex/plex.ts","../../../../../mol/mem/mem.ts","../../../../../mol/charset/decode/decode.ts","../../../../../mol/const/const.ts","../../../../../mol/rest/message/message.node.ts","../../../../../mol/rest/port/webrtc/webrtc.node.ts","../../../../../mol/wire/async/async.ts","../../../../../mol/state/arg/arg.node.ts","../../../../../mol/rest/resource/resource.node.ts","../../../../../mol/dom/render/children/children.ts","../../../../../mol/jsx/jsx.ts","../../../../../mol/wrapper/wrapper.ts","../../../../../mol/memo/memo.ts","../../../../../mol/wire/probe/probe.ts","../../../../../mol/lock/lock.ts","../../../../../mol/mem/cached/cached.ts","../../../../../mol/compare/array/array.ts","../../../../../mol/file/transaction/transaction.ts","../../../../../mol/wire/solid/solid.ts","../../../../../mol/file/transaction/transaction.node.ts","../../../../../mol/file/base/base.ts","../../../../../mol/file/file.ts","../../../../../mol/file/file.node.ts","../../../../../mol/file/extensions/extensions.ts","../../../../../mol/rest/port/http/http.node.ts","../../../../../mol/dom/parse/parse.ts","../../../../../mol/rest/message/http/http.node.ts","../../../../../mol/rest/port/ws/ws.ts","../../../../../mol/base64/encode/encode.ts","../../../../../mol/base64/encode/encode.node.ts","../../../../../mol/base64/decode/decode.ts","../../../../../mol/base64/decode/decode.node.ts","../../../../../mol/base64/ae/ae.ts","../../../../../mol/buffer/buffer.ts","../../../../../mol/websocket/frame/frame.ts","../../../../../mol/rest/port/ws/ws_std.ts","../../../../../mol/rest/port/ws/ws.node.ts","../../../../../mol/crypto/hash/hash.ts","../../../../../mol/rest/server/server.node.ts","../../../../../mol/rest/resource/fs/fs.node.tsx","../../../../../mol/wire/set/set.ts","../../../../../mol/data/tagged/tagged.ts","../../../../../hyoo/crus/ref/ref.ts","../../../../../mol/guard/defined.ts","../../../../../mol/time/base/base.ts","../../../../../mol/time/duration/duration.ts","../../../../../mol/time/moment/moment.ts","../../../../../hyoo/crus/time/time.ts","../../../../../hyoo/crus/face/face.ts","../../../../../hyoo/crus/part/part.ts","../../../../../mol/data/setup/setup.ts","../../../../../mol/func/is/class/class.ts","../../../../../mol/data/pipe/pipe.ts","../../../../../mol/data/error/error.ts","../../../../../mol/data/number/number.ts","../../../../../mol/data/integer/integer.ts","../../../../../hyoo/crus/rank/rank.ts","../../../../../mol/base64/url/url.ts","../../../../../mol/crypto/native/native.node.ts","../../../../../mol/crypto/restack/restack.ts","../../../../../mol/crypto/key/key.ts","../../../../../mol/mem/persist/persist.ts","../../../../../mol/storage/storage.ts","../../../../../mol/state/local/local.ts","../../../../../mol/state/local/local.node.ts","../../../../../mol/crypto/salt/salt.ts","../../../../../mol/crypto/sacred/sacred.ts","../../../../../mol/crypto/secret/secret.ts","../../../../../hyoo/crus/auth/auth.ts","../../../../../mol/wire/dict/dict.ts","../../../../../hyoo/crus/node/node.ts","../../../../../hyoo/crus/fund/fund.ts","../../../../../mol/graph/graph.ts","../../../../../mol/time/interval/interval.ts","../../../../../hyoo/crus/vary/vary.ts","../../../../../mol/tree2/bin/bin.ts","../../../../../mol/tree2/xml/from/dom/dom.ts","../../../../../hyoo/crus/vary/cast/cast.tsx","../../../../../mol/bus/bus.ts","../../../../../hyoo/crus/log/log.ts","../../../../../mol/wire/race/race.ts","../../../../../hyoo/crus/land/land.ts","../../../../../hyoo/crus/unit/unit.ts","../../../../../hyoo/crus/pass/pass.ts","../../../../../hyoo/crus/gift/gift.ts","../../../../../hyoo/crus/sand/sand.ts","../../../../../mol/reconcile/reconcile.ts","../../../../../hyoo/crus/list/list.ts","../../../../../hyoo/crus/dict/dict.ts","../../../../../mol/hash/string/string.ts","../../../../../hyoo/crus/atom/atom.ts","../../../../../hyoo/crus/entity/entity.ts","../../../../../hyoo/crus/home/home.ts","../../../../../hyoo/crus/mine/mine.ts","../../../../../hyoo/crus/mine/pg/pg.node.ts","../../../../../hyoo/crus/mine/fs/fs.ts","../../../../../hyoo/crus/mine/mine.node.ts","../../../../../hyoo/crus/pack/pack.ts","../../../../../hyoo/crus/yard/yard.ts","../../../../../hyoo/crus/glob/glob.ts","../../../../../hyoo/crus/stat/series/series.ts","../../../../../hyoo/crus/stat/ranges/ranges.ts","../../../../../mol/state/time/time.ts","../../../../../hyoo/crus/app/stat/stat.ts","../../../../../hyoo/crus/app/home/home.ts","../../../../../hyoo/crus/app/home/home.node.ts","../../../../../hyoo/crus/app/app.node.ts","../../../../../hyoo/crus/app/run/run.node.ts","../../../../../mol/test/test.test.ts","../../../../../mol/test/test.node.test.ts","../../../../../mol/fail/log/log.test.ts","../../../../../mol/jsx/jsx.test.tsx","../../../../../mol/range2/range2.ts","../../../../../mol/range2/range2.test.ts","../../../../../mol/compare/deep/deep.test.tsx","../../../../../mol/assert/assert.ts","../../../../../mol/assert/assert.test.ts","../../../../../mol/log3/log3.test.ts","../../../../../mol/delegate/delegate.test.ts","../../../../../mol/span/span.test.ts","../../../../../mol/maybe/maybe.test.ts","../../../../../mol/tree2/tree2.test.ts","../../../../../mol/tree2/from/string/string.test.ts","../../../../../mol/tree2/from/json/json.test.ts","../../../../../mol/func/name/name.test.ts","../../../../../mol/wire/pub/sub/sub.test.ts","../../../../../mol/after/mock/mock.test.ts","../../../../../mol/after/tick/tick.test.ts","../../../../../mol/wire/fiber/fiber.test.ts","../../../../../mol/wire/async/async.test.ts","../../../../../mol/error/mix/mix.test.ts","../../../../../mol/object/object.test.ts","../../../../../mol/run/run.node.test.ts","../../../../../mol/wire/sync/sync.test.ts","../../../../../mol/charset/encode/encode.test.ts","../../../../../mol/promise/promise/promise.ts","../../../../../mol/after/timeout/timeout.test.ts","../../../../../mol/after/work/work.ts","../../../../../mol/after/work/work.test.ts","../../../../../mol/wait/rest/rest.ts","../../../../../mol/wait/rest/rest.test.ts","../../../../../mol/wait/timeout/timeout.ts","../../../../../mol/wait/timeout/timeout.test.ts","../../../../../mol/wire/solo/solo.test.ts","../../../../../mol/wire/plex/plex.test.ts","../../../../../mol/wire/probe/probe.test.ts","../../../../../mol/charset/decode/decode.test.ts","../../../../../mol/const/const.test.ts","../../../../../mol/key/key.test.tsx","../../../../../mol/after/frame/frame.test.ts","../../../../../mol/wire/log/log.ts","../../../../../mol/wire/atom/atom.test.ts","../../../../../mol/state/arg/arg.node.test.ts","../../../../../mol/wrapper/wrapper.test.ts","../../../../../mol/memo/memo.test.ts","../../../../../mol/compare/array/array.test.ts","../../../../../mol/base64/encode/encode.test.ts","../../../../../mol/base64/decode/decode.test.ts","../../../../../mol/crypto/hash/hash.test.ts","../../../../../mol/wire/set/set.test.ts","../../../../../mol/data/number/number.test.ts","../../../../../mol/data/integer/integer.test.ts","../../../../../mol/data/tagged/tagged.test.ts","../../../../../hyoo/crus/ref/ref.test.ts","../../../../../mol/time/duration/duration.test.ts","../../../../../mol/time/moment/moment.test.ts","../../../../../mol/data/setup/setup.test.ts","../../../../../mol/func/is/class/class.test.ts","../../../../../mol/data/pipe/pipe.test.ts","../../../../../mol/state/local/local.test.ts","../../../../../mol/state/local/local.mock.test.ts","../../../../../mol/crypto/sacred/sacred.test.ts","../../../../../mol/crypto/secret/secret.test.ts","../../../../../hyoo/crus/auth/auth.test.ts","../../../../../mol/wire/dict/dict.test.ts","../../../../../mol/graph/graph.test.ts","../../../../../mol/time/interval/interval.test.ts","../../../../../hyoo/crus/vary/vary.test.tsx","../../../../../hyoo/crus/vary/cast/cast.test.ts","../../../../../mol/bus/bus.test.ts","../../../../../hyoo/crus/land/land.test.ts","../../../../../mol/crypto/auditor/auditor.ts","../../../../../hyoo/crus/unit/unit.test.ts","../../../../../mol/reconcile/reconcile.test.tsx","../../../../../hyoo/crus/list/list.test.ts","../../../../../hyoo/crus/dict/dict.test.ts","../../../../../mol/data/string/string.ts","../../../../../mol/data/string/string.test.ts","../../../../../mol/data/pattern/pattern.ts","../../../../../mol/data/pattern/pattern.test.ts","../../../../../mol/data/email/email.ts","../../../../../mol/data/email/email.test.ts","../../../../../hyoo/crus/atom/atom.test.ts","../../../../../hyoo/crus/home/home.test.ts","../../../../../hyoo/crus/mine/mine.test.ts","../../../../../hyoo/crus/pack/pack.test.ts","../../../../../hyoo/crus/yard/yard.test.ts","../../../../../hyoo/crus/glob/glob.test.ts"],"names":[],"mappings":"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","sourcesContent":["Error.stackTraceLimit = 50;\n\ndeclare let _$_: { new(): {} } & typeof globalThis\ndeclare class $ extends _$_ {}\n\nnamespace $ {\n\texport type $ = typeof $$\n\texport declare class $$ extends $ {}\n\tnamespace $$ {\n\t\texport type $$ = $\n\t}\n}\n\nmodule.exports = $\n","namespace $ {\n\n\texport function $mol_fail( error : any ) : never {\n\t\tthrow error\n\t}\n\n}\n","namespace $ {\n\t\n\t/** Special status statuses. */\n\texport enum $mol_wire_cursor {\n\t\t\n\t\t/** Update required. */\n\t\tstale = -1,\n\t\t\n\t\t/** Some of (transitive) pub update required. */\n\t\tdoubt = -2,\n\t\t\n\t\t/** Actual state but may be dropped. */\n\t\tfresh = -3,\n\t\t\n\t\t/** State will never be changed. */\n\t\tfinal = -4,\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\t/**\n\t * Collects subscribers in compact array. 28B\n\t */\n\texport class $mol_wire_pub extends Object {\n\t\t\n\t\tdata = [] as unknown[]\n\t\t\n\t\t// Derived objects should be Arrays.\n\t\tstatic get [ Symbol.species ]() {\n\t\t\treturn Array\n\t\t}\n\t\t\n\t\t/**\n\t\t * Index of first subscriber.\n\t\t */\n\t\tprotected sub_from = 0 // 4B\n\t\t\n\t\t/**\n\t\t * All current subscribers.\n\t\t */\n\t\tget sub_list() {\n\t\t\tconst res = [] as $mol_wire_sub[]\n\t\t\tfor( let i = this.sub_from; i < this.data.length; i += 2 ) {\n\t\t\t\tres.push( this.data[i] as $mol_wire_sub )\n\t\t\t}\n\t\t\treturn res as readonly $mol_wire_sub[]\n\t\t}\n\t\t\n\t\t/**\n\t\t * Has any subscribers or not.\n\t\t */\n\t\tget sub_empty() {\n\t\t\treturn this.sub_from === this.data.length\n\t\t}\n\t\t\n\t\t/**\n\t\t * Subscribe subscriber to this publisher events and return position of subscriber that required to unsubscribe.\n\t\t */\n\t\tsub_on( sub: $mol_wire_pub, pub_pos: number ) {\n\t\t\tconst pos = this.data.length\n\t\t\tthis.data.push( sub, pub_pos )\n\t\t\treturn pos\n\t\t}\n\t\t\n\t\t/**\n\t\t * Unsubscribe subscriber from this publisher events by subscriber position provided by `on(pub)`.\n\t\t */\n\t\tsub_off( sub_pos: number ) {\n\t\t\t\n\t\t\tif(!( sub_pos < this.data.length )) {\n\t\t\t\t$mol_fail( new Error( `Wrong pos ${ sub_pos }` ) )\n\t\t\t}\n\t\t\t\n\t\t\tconst end = this.data.length - 2\n\t\t\tif( sub_pos !== end ) {\n\t\t\t\tthis.peer_move( end, sub_pos )\n\t\t\t}\n\t\t\t\n\t\t\tthis.data.length = end\n\t\t\t\n\t\t\tif( end === this.sub_from ) this.reap()\n\t\t\t\n\t\t}\n\t\t\n\t\t/**\n\t\t * Called when last sub was unsubscribed.\n\t\t **/\n\t\treap() { }\n\t\t\n\t\t/**\n\t\t * Autowire this publisher with current subscriber.\n\t\t **/\n\t\tpromote() {\n\t\t\t$mol_wire_auto()?.track_next( this )\n\t\t}\n\t\t\n\t\t/**\n\t\t * Enforce actualization. Should not throw errors.\n\t\t */\n\t\tfresh() {}\n\t\t\n\t\t/**\n\t\t * Allow to put data to caches in the subtree.\n\t\t */\n\t\tcomplete() {}\n\t\t\n\t\tget incompleted() {\n\t\t\treturn false\n\t\t}\n\t\t\n\t\t/**\n\t\t * Notify subscribers about self changes.\n\t\t */\n\t\temit( quant = $mol_wire_cursor.stale ) {\n\t\t\tfor( let i = this.sub_from; i < this.data.length; i += 2 ) {\n\t\t\t\t;( this.data[i] as $mol_wire_sub ).absorb( quant, this.data[ i + 1 ] as number )\n\t\t\t}\n\t\t}\n\t\t\n\t\t/**\n\t\t * Moves peer from one position to another. Doesn't clear data at old position!\n\t\t */\n\t\tpeer_move( from_pos: number, to_pos: number ) {\n\t\t\t\n\t\t\tconst peer = this.data[ from_pos ] as $mol_wire_pub\n\t\t\tconst self_pos = this.data[ from_pos + 1 ] as number\n\t\t\t\n\t\t\tthis.data[ to_pos ] = peer\n\t\t\tthis.data[ to_pos + 1 ] = self_pos\n\t\t\t\n\t\t\tpeer.peer_repos( self_pos, to_pos )\n\t\t}\n\t\t\n\t\t/**\n\t\t * Updates self position in the peer.\n\t\t */\n\t\tpeer_repos( peer_pos: number, self_pos: number ) {\n\t\t\tthis.data[ peer_pos + 1 ] = self_pos\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport let $mol_wire_auto_sub: $mol_wire_sub | null = null\n\t\n\t/**\n\t * When fulfilled, all publishers are promoted to this subscriber on access to its.\n\t */\n\texport function $mol_wire_auto( next = $mol_wire_auto_sub ) {\n\t\treturn $mol_wire_auto_sub = next\n\t}\n\t\n\t/**\n\t * Affection queue. Used to prevent accidental stack overflow on emit.\n\t */\n\texport const $mol_wire_affected = [] as ( $mol_wire_sub | number )[]\n\t\n}\n","namespace $ {\n\t\n\tconst named = new WeakSet< Function >()\n\t\n\texport function $mol_func_name( this : $ , func : Function ) : string {\n\t\t\n\t\tlet name = func.name\n\t\tif( name?.length > 1 ) return name\n\t\tif( named.has( func ) ) return name\n\n\t\tfor( let key in this ) {\n\t\t\ttry {\n\t\t\t\tif( (this as any)[ key ] !== func ) continue\n\t\t\t\tname = key\n\t\t\t\tObject.defineProperty( func , 'name' , { value : name } )\n\t\t\t\tbreak\n\t\t\t} catch {}\n\t\t}\n\n\t\tnamed.add( func )\n\t\treturn name\n\t\t\n\t}\n\n\texport function $mol_func_name_from< Target extends Function >( target : Target , source : Function ) {\n\t\tObject.defineProperty( target , 'name' , { value : source.name } )\n\t\treturn target\n\t}\n\n}\n","namespace $ {\n\n\t// https://docs.google.com/document/d/1FTascZXT9cxfetuPRT2eXPQKXui4nWFivUnS_335T3U/preview#\n\t($ as any)['devtoolsFormatters'] ||= []\n\n\texport function $mol_dev_format_register( config : {\n\t\theader : ( val : any , config : any )=> any\n\t\thasBody : ( val : any , config : any )=> false\n\t} | {\n\t\theader : ( val : any , config : any )=> any\n\t\thasBody : ( val : any , config : any )=> boolean\n\t\tbody : ( val : any , config : any )=> any\n\t} ) {\n\t\t($ as any)['devtoolsFormatters'].push( config )\n\t}\n\n\texport const $mol_dev_format_head = Symbol( '$mol_dev_format_head' )\n\texport const $mol_dev_format_body = Symbol( '$mol_dev_format_body' )\n\n\t$mol_dev_format_register({\n\n\t\theader : ( val : any , config = false ) => {\n\t\t\t\n\t\t\tif( config ) return null\n\n\t\t\tif( !val ) return null\n\t\t\t\n\t\t\tif( $mol_dev_format_head in val ) {\n\t\t\t\ttry {\n\t\t\t\t\treturn val[ $mol_dev_format_head ]()\n\t\t\t\t} catch( error ) {\n\t\t\t\t\treturn $mol_dev_format_accent( $mol_dev_format_native( val ), '💨', $mol_dev_format_native( error ), '' )\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif( typeof val === 'function' ) {\n\t\t\t\treturn $mol_dev_format_native( val )\n\t\t\t}\n\t\t\t\n\t\t\tif( Symbol.toStringTag in val ) {\n\t\t\t\treturn $mol_dev_format_native( val )\n\t\t\t}\n\t\t\t\n\t\t\treturn null\n\t\t\t\n\t\t} ,\n\t\t\n\t\thasBody : val => val[ $mol_dev_format_body ] ,\n\n\t\tbody : val => val[ $mol_dev_format_body ]() ,\n\n\t})\n\n\texport function $mol_dev_format_native( obj : any ) {\n\t\t\n\t\tif( typeof obj === 'undefined' ) return $mol_dev_format_shade( 'undefined' )\n\t\t\n\t\t// if( ![ 'object', 'function', 'symbol' ].includes( typeof obj )  ) return obj\n\n\t\treturn [\n\t\t\t'object' ,\n\t\t\t{\n\t\t\t\tobject : obj ,\n\t\t\t\tconfig : true ,\n\t\t\t} ,\n\t\t]\n\n\t}\n\n\texport function $mol_dev_format_auto( obj : any ) {\n\t\t\n\t\tif( obj == null ) return $mol_dev_format_shade( String( obj ) )\n\n\t\treturn [\n\t\t\t'object' ,\n\t\t\t{\n\t\t\t\tobject : obj ,\n\t\t\t\tconfig : false ,\n\t\t\t} ,\n\t\t]\n\n\t}\n\n\texport function $mol_dev_format_element( element : string , style : object , ...content : any[] ) {\n\t\t\t\n\t\tconst styles = [] as string[]\n\t\t\n\t\tfor( let key in style ) styles.push( `${ key } : ${ (style as any)[key] }` )\n\t\t\n\t\treturn [\n\t\t\telement ,\n\t\t\t{\n\t\t\t\tstyle : styles.join( ' ; ' ) ,\n\t\t\t} ,\n\t\t\t... content ,\n\t\t]\n\n\t}\n\n\texport function $mol_dev_format_span( style : object , ...content : any[] ) {\n\t\treturn $mol_dev_format_element(\n\t\t\t'span' ,\n\t\t\t{\n\t\t\t\t// 'vertical-align' : '8%',\n\t\t\t\t... style ,\n\t\t\t} ,\n\t\t\t... content ,\n\t\t)\n\t}\n\n\texport let $mol_dev_format_div = $mol_dev_format_element.bind( null , 'div' )\n\texport let $mol_dev_format_ol = $mol_dev_format_element.bind( null , 'ol' )\n\texport let $mol_dev_format_li = $mol_dev_format_element.bind( null , 'li' )\n\texport let $mol_dev_format_table = $mol_dev_format_element.bind( null , 'table' )\n\texport let $mol_dev_format_tr = $mol_dev_format_element.bind( null , 'tr' )\n\texport let $mol_dev_format_td = $mol_dev_format_element.bind( null , 'td' )\n\n\texport let $mol_dev_format_accent = $mol_dev_format_span.bind( null , {\n\t\t'color' : 'magenta' ,\n\t} )\n\n\texport let $mol_dev_format_strong = $mol_dev_format_span.bind( null , {\n\t\t'font-weight' : 'bold' ,\n\t} )\n\n\texport let $mol_dev_format_string = $mol_dev_format_span.bind( null , {\n\t\t'color' : 'green',\n\t} )\n\n\texport let $mol_dev_format_shade = $mol_dev_format_span.bind( null , {\n\t\t'color' : 'gray',\n\t} )\n\n\texport let $mol_dev_format_indent = $mol_dev_format_div.bind( null , {\n\t\t'margin-left': '13px'\n\t} )\n\n}\n","namespace $ {\n\t\n\t/**\n\t * Publisher that can auto collect other publishers. 32B\n\t * \n\t * \tP1 P2 P3 P4 S1 S2 S3\n\t * \t^           ^\n\t * \tpubs_from   subs_from\n\t */\n\texport class $mol_wire_pub_sub extends $mol_wire_pub implements $mol_wire_sub {\n\t\t\n\t\tprotected pub_from = 0 // 4B\n\t\tprotected cursor = $mol_wire_cursor.stale // 4B\n\t\t\n\t\tget temp() {\n\t\t\treturn false\n\t\t}\n\t\t\n\t\tget pub_list() {\n\t\t\tconst res = [] as $mol_wire_pub[]\n\t\t\tconst max = this.cursor >=0 ? this.cursor : this.sub_from\n\t\t\tfor( let i = this.pub_from; i < max; i += 2 ) {\n\t\t\t\tif( this.data[i] ) res.push( this.data[i] as $mol_wire_pub )\n\t\t\t}\n\t\t\treturn res\n\t\t}\n\t\t\n\t\ttrack_on() {\n\t\t\tthis.cursor = this.pub_from\n\t\t\tconst sub = $mol_wire_auto()\n\t\t\t$mol_wire_auto( this )\n\t\t\treturn sub\n\t\t}\n\t\t\n\t\tpromote() {\n\t\t\t\n\t\t\tif( this.cursor >= this.pub_from ) {\n\t\t\t\t$mol_fail( new Error( 'Circular subscription' ) )\n\t\t\t}\n\t\t\t\n\t\t\tsuper.promote()\n\t\t}\n\t\t\n\t\ttrack_next( pub?: $mol_wire_pub ): $mol_wire_pub | null {\n\t\t\t\n\t\t\tif( this.cursor < 0 ) $mol_fail( new Error( 'Promo to non begun sub' ) )\n\t\t\t\n\t\t\tif( this.cursor < this.sub_from ) {\n\t\t\t\n \t\t\t\tconst next = this.data[ this.cursor ] as $mol_wire_pub | undefined\n\t\t\t\tif( pub === undefined ) return next ?? null\n\t\t\t\t\n\t\t\t\tif( next === pub ) {\n\t\t\t\t\tthis.cursor += 2\n\t\t\t\t\treturn next\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( next ) {\n\t\t\t\t\t\n\t\t\t\t\tif( this.sub_from < this.data.length ) {\n\t\t\t\t\t\tthis.peer_move( this.sub_from, this.data.length )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tthis.peer_move( this.cursor, this.sub_from )\n\t\t\t\t\tthis.sub_from += 2\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tif( pub === undefined ) return null\n\t\t\t\t\n\t\t\t\tif( this.sub_from < this.data.length ) {\n\t\t\t\t\tthis.peer_move( this.sub_from, this.data.length )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.sub_from += 2\n\t\t\t\t\n\t\t\t}\t\t\t\n\t\t\t\n\t\t\tthis.data[ this.cursor ] = pub\n\t\t\tthis.data[ this.cursor + 1 ] = pub.sub_on( this, this.cursor )\n\t\t\t\n\t\t\tthis.cursor += 2\n\t\t\t\n\t\t\treturn pub\n\t\t}\n\t\t\n\t\ttrack_off( sub: $mol_wire_sub | null ) {\n\t\t\t\n\t\t\t$mol_wire_auto( sub )\n\t\t\t\n\t\t\tif( this.cursor < 0 ) {\n\t\t\t\t$mol_fail( new Error( 'End of non begun sub' ) )\n\t\t\t}\n\t\t\t\n\t\t\tfor(\n\t\t\t\tlet cursor = this.pub_from;\n\t\t\t\tcursor < this.cursor;\n\t\t\t\tcursor += 2\n\t\t\t) {\n\t\t\t\tconst pub = this.data[ cursor ] as $mol_wire_pub\n\t\t\t\tpub.fresh()\n\t\t\t}\n\t\t\t\n\t\t\tthis.cursor = $mol_wire_cursor.fresh\n\t\t\t\n\t\t}\n\t\t\n\t\tpub_off( sub_pos: number ) {\n\t\t\tthis.data[ sub_pos ] = undefined as any\n\t\t\tthis.data[ sub_pos + 1 ] = undefined as any \n\t\t}\n\t\t\n\t\tdestructor() {\n\t\t\t\n\t\t\tfor(\n\t\t\t\tlet cursor = this.data.length - 2;\n\t\t\t\tcursor >= this.sub_from;\n\t\t\t\tcursor -= 2\n\t\t\t) {\n\t\t\t\tconst sub = this.data[ cursor ] as $mol_wire_sub\n\t\t\t\tconst pos = this.data[ cursor + 1 ] as number\n\t\t\t\tsub.pub_off( pos )\n\t\t\t}\n\t\t\t\n\t\t\tthis.data.length = this.sub_from \n\t\t\tthis.cursor = this.pub_from\n\t\t\tthis.track_cut()\n\t\t\tthis.cursor = $mol_wire_cursor.final\n\t\t\t\n\t\t}\n\t\t\n\t\ttrack_cut() {\n\t\t\t\n\t\t\tif( this.cursor < this.pub_from ) {\n\t\t\t\t$mol_fail( new Error( 'Cut of non begun sub' ) )\n\t\t\t}\n\t\t\t\n\t\t\tlet end = this.data.length\n\t\t\t\n\t\t\tfor(\n\t\t\t\tlet cursor = this.cursor;\n\t\t\t\tcursor < this.sub_from;\n\t\t\t\tcursor += 2\n\t\t\t) {\n\t\t\t\t\n\t\t\t\tconst pub = this.data[ cursor ] as $mol_wire_pub | undefined\n\t\t\t\tpub?.sub_off( this.data[ cursor + 1 ] as number )\n\t\t\t\t\n\t\t\t\tend -= 2\n\t\t\t\tif( this.sub_from <= end ) this.peer_move( end, cursor )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tthis.data.length = end\n\t\t\t\n\t\t\tthis.sub_from = this.cursor\n\t\t\t\n\t\t}\n\t\t\n\t\tcomplete() { }\n\t\t\n\t\tcomplete_pubs() {\n\t\t\t\n\t\t\tconst limit = this.cursor < 0 ? this.sub_from : this.cursor \n\t\t\t\n\t\t\tfor(\n\t\t\t\tlet cursor = this.pub_from;\n\t\t\t\tcursor < limit;\n\t\t\t\tcursor += 2\n\t\t\t) {\n\t\t\t\tconst pub = this.data[ cursor ] as $mol_wire_pub\n\t\t\t\tif( pub?.incompleted ) return \n\t\t\t}\n\t\t\t\n\t\t\tfor(\n\t\t\t\tlet cursor = this.pub_from;\n\t\t\t\tcursor < limit;\n\t\t\t\tcursor += 2\n\t\t\t) {\n\t\t\t\tconst pub = this.data[ cursor ] as $mol_wire_pub\n\t\t\t\tpub?.complete()\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tabsorb( quant = $mol_wire_cursor.stale, pos = -1 ) {\n\t\t\t\n\t\t\tif( this.cursor === $mol_wire_cursor.final ) return\n\t\t\tif( this.cursor >= quant ) return\n\t\t\t\n\t\t\tthis.cursor = quant\n\t\t\tthis.emit( $mol_wire_cursor.doubt )\n\t\t\t\n\t\t\tif( pos >= 0 && pos < this.sub_from - 2 ) {\n\t\t\t\t\n\t\t\t\tconst pub = this.data[ pos ] as $mol_wire_pub\n\t\t\t\tif( pub instanceof $mol_wire_task ) return\n\t\t\t\t\n\t\t\t\tfor(\n\t\t\t\t\tlet cursor = this.pub_from;\n\t\t\t\t\tcursor < this.sub_from;\n\t\t\t\t\tcursor += 2\n\t\t\t\t) {\n\t\t\t\t\t\n\t\t\t\t\tconst pub = this.data[ cursor ] as $mol_wire_pub\n\t\t\t\t\t\n\t\t\t\t\tif( pub instanceof $mol_wire_task ) {\n\t\t\t\t\t\tpub.destructor()\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t[ $mol_dev_format_head ]() {\n\t\t\treturn $mol_dev_format_native( this )\n\t\t}\n\t\t\n\t\t/**\n\t\t * Is subscribed to any publisher or not.\n\t\t */\n\t\tget pub_empty() {\n\t\t\treturn this.sub_from === this.pub_from\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\n\texport const $mol_ambient_ref : unique symbol = Symbol( '$mol_ambient_ref' )\n\n\t/** @deprecated use $ instead */\n\texport type $mol_ambient_context = $\n\n\texport function $mol_ambient( this : $ | void , overrides : Partial< $ > ) : $ {\n\t\treturn Object.setPrototypeOf( overrides , this || $ )\n\t}\n\n}\n","namespace $ {\n\n\tconst instances = new WeakSet< any >()\n\n\t/**\n\t * Proxy that delegates all to lazy returned target.\n\t * \n\t * \t$mol_delegate( Array.prototype , ()=> fetch_array() )\n\t */\n    export function $mol_delegate< Value extends object >(\n\t\tproto : Value ,\n\t\ttarget : ()=> Value ,\n\t) {\n\n\t\tconst proxy = new Proxy( proto , {\n\n\t\t\tget: ( _ , field )=> {\n\t\t\t\tconst obj = target()\n\t\t\t\tlet val = Reflect.get( obj , field )\n\t\t\t\tif( typeof val === 'function' ) {\n\t\t\t\t\tval = val.bind( obj )\n\t\t\t\t} \n\t\t\t\treturn val\n\t\t\t},\n\t\t\thas: ( _ , field )=> Reflect.has( target(), field ),\n\t\t\tset: ( _ , field , value )=> Reflect.set( target() , field , value ),\n\t\t\t\n\t\t\tgetOwnPropertyDescriptor: ( _ , field )=> Reflect.getOwnPropertyDescriptor( target() , field ),\n\t\t\townKeys: ()=> Reflect.ownKeys( target() ),\n\t\t\t\n\t\t\tgetPrototypeOf: ()=> Reflect.getPrototypeOf( target() ),\n\t\t\tsetPrototypeOf: ( _ , donor )=> Reflect.setPrototypeOf( target() , donor ),\n\t\t\t\n\t\t\tisExtensible: ()=> Reflect.isExtensible( target() ),\n\t\t\tpreventExtensions: ()=> Reflect.preventExtensions( target() ),\n\t\t\t\n\t\t\tapply: ( _ , self , args )=> Reflect.apply( target() as Function , self , args ),\n\t\t\tconstruct: ( _ , args , retarget )=> Reflect.construct( target() as Function , args , retarget ),\n\t\t\t\n\t\t\tdefineProperty: ( _ , field , descr )=> Reflect.defineProperty( target() , field , descr ),\n\t\t\tdeleteProperty: ( _ , field )=> Reflect.deleteProperty( target() , field ),\n\n\t\t} )\n\n\t\tinstances.add( proxy )\n\n\t\treturn proxy\n\n\t}\n\n\tReflect.defineProperty(\n\t\t$mol_delegate ,\n\t\tSymbol.hasInstance ,\n\t\t{\n\t\t\tvalue : ( obj : object )=> instances.has( obj ),\n\t\t},\n\t)\n\n}\n","namespace $ {\n\n\texport const $mol_owning_map = new WeakMap< any , any >()\n\n\texport function $mol_owning_allow< Having >(\n\t\thaving : Having ,\n\t) : having is Having & {\n\t\tdestructor() : void\n\t} {\n\t\ttry {\n\t\t\tif( !having ) return false\n\t\t\tif( typeof having !== 'object' && typeof having !== 'function' ) return false\n\t\t\tif( having instanceof $mol_delegate ) return false\n\t\t\tif( typeof (having as any)['destructor'] !== 'function' ) return false\n\t\t\treturn true\n\t\t} catch {\n\t\t\treturn false\n\t\t}\n\t}\n\n\texport function $mol_owning_get< Having , Owner extends object >( having : Having , Owner? : { new() : Owner } ) : Owner | null {\n\t\n\t\tif( !$mol_owning_allow( having ) ) return null\n\n\t\twhile( true ) {\n\n\t\t\tconst owner = $mol_owning_map.get( having )\n\t\t\tif( !owner ) return owner\n\t\t\tif( !Owner ) return owner\n\t\t\t\n\t\t\tif( owner instanceof Owner ) return owner\n\n\t\t\thaving = owner\n\t\t}\n\n\t}\n\t\n\texport function $mol_owning_check< Owner , Having >(\n\t\towner : Owner ,\n\t\thaving : Having ,\n\t) : having is Having & { destructor() : void } {\n\t\tif( !$mol_owning_allow( having ) ) return false\n\t\tif( $mol_owning_map.get( having ) !== owner ) return false\n\t\treturn true\n\t}\n\t\n\texport function $mol_owning_catch< Owner , Having >(\n\t\towner : Owner ,\n\t\thaving : Having ,\n\t) {\n\t\tif( !$mol_owning_allow( having ) ) return false\n\t\tif( $mol_owning_map.get( having ) ) return false\n\n\t\t$mol_owning_map.set( having , owner )\n\t\treturn true\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_fail_hidden( error : any ) : never {\n\t\tthrow error /// Use 'Never Pause Here' breakpoint in DevTools or simply blackbox this script\n\t}\n\n}\n","namespace $ {\n\n\texport class $mol_object2 {\n\t\t\n\t\tstatic $ = $ as any as $\n\t\t\n\t\t[Symbol.toStringTag]!: string\n\n\t\t[ $mol_ambient_ref ] = null as any as $\n\t\tget $() {\n\t\t\tif( this[ $mol_ambient_ref ] ) return this[ $mol_ambient_ref ]\n\t\t\tconst owner = $mol_owning_get( this ) as any\n\t\t\treturn this[ $mol_ambient_ref ] = owner?.$ || $mol_object2.$ as $\n\t\t}\n\t\tset $( next : $ ) {\n\t\t\tif( this[ $mol_ambient_ref ] ) $mol_fail_hidden( new Error( 'Context already defined' ) )\n\t\t\tthis[ $mol_ambient_ref ] = next\n\t\t}\n\n\t\tpublic static create< Instance >(\n\t\t\tthis : new( init? : ( instance : any )=> void )=> Instance ,\n\t\t\tinit? : ( instance : $mol_type_writable<Instance> )=> void\n\t\t) : Instance {\n\t\t\tconst obj = new this\n\t\t\tif( init ) init( obj )\n\t\t\treturn obj\n\t\t}\n\t\t\n\t\tstatic [ Symbol.toPrimitive ]() {\n\t\t\treturn this.toString()\n\t\t}\n\t\t\n\t\tstatic toString() {\n\t\t\treturn ( this as any )[ Symbol.toStringTag ] || this.$.$mol_func_name( this )\n\t\t}\n\t\t\n\t\tstatic toJSON() {\n\t\t\treturn this.toString()\n\t\t}\n\t\t\n\t\tdestructor() { }\n\t\tstatic destructor() { }\n\t\t\n\t\t//[ Symbol.toPrimitive ]( hint: string ) {\n\t\t//\treturn hint === 'number' ? this.valueOf() : this.toString()\n\t\t//}\n\t\t\n\t\ttoString(): string {\n\t\t\treturn this[ Symbol.toStringTag ] || this.constructor.name + '<>'\n\t\t}\n\t\t\n\t\t// toJSON(): any {\n\t\t// \treturn this.toString()\n\t\t// }\n\n\t}\n}\n","namespace $ {\n\n\texport class $mol_after_tick extends $mol_object2 {\n\n\t\tstatic promise = null as Promise<void> | null\n\t\tcancelled = false\n\n\t\tconstructor(\n\t\t\tpublic task : ()=> void ,\n\t\t) {\n\t\t\tsuper()\n\t\t\t\n\t\t\tif( !$mol_after_tick.promise ) $mol_after_tick.promise = Promise.resolve().then( ()=> {\n\t\t\t\t$mol_after_tick.promise = null\n\t\t\t} )\n\t\t\t\n\t\t\t$mol_after_tick.promise.then( ()=> {\n\t\t\t\tif( this.cancelled ) return\n\t\t\t\ttask()\n\t\t\t} )\n\t\t\t\n\t\t}\n\n\t\tdestructor() {\n\t\t\tthis.cancelled = true\n\t\t}\n\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport function $mol_promise_like( val: any ): val is Promise<any> {\n\t\ttry {\n\t\t\treturn val && typeof val === 'object' && 'then' in val && typeof val.then === 'function'\n\t\t} catch {\n\t\t\treturn false\n\t\t}\n\t}\n\n}\n","namespace $ {\n\t\n\tconst wrappers = new WeakMap< Promise< unknown >, Promise< any > >()\n\t\n\t/**\n\t * Suspendable task with support both sync/async api.\n\t * \n\t * \tA1 A2 A3 A4 P1 P2 P3 P4 S1 S2 S3\n\t * \t^           ^           ^\n\t * \targs_from   pubs_from   subs_from\n\t **/\n\texport abstract class $mol_wire_fiber<\n\t\tHost,\n\t\tArgs extends readonly unknown[],\n\t\tResult,\n\t> extends $mol_wire_pub_sub {\n\t\n\t\tstatic warm = true\n\t\t\n\t\tstatic planning = new Set< $mol_wire_fiber< any, any, any > >()\n\t\tstatic reaping = new Set< $mol_wire_fiber< any, any, any > >()\n\t\t\n\t\tstatic plan_task: $mol_after_tick | null = null\n\t\tstatic plan() {\n\t\t\t\n\t\t\tif( this.plan_task ) return\n\t\t\t\n\t\t\tthis.plan_task = new $mol_after_tick( ()=> {\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\tthis.sync()\n\t\t\t\t} finally {\n\t\t\t\t\t$mol_wire_fiber.plan_task = null\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t\n\t\t}\n\t\t\n\t\tstatic sync() {\n\t\t\t\n\t\t\t// Sync whole fiber graph\n\t\t\twhile( this.planning.size ) {\n\t\t\t\tfor( const fiber of this.planning ) {\n\t\t\t\t\tthis.planning.delete( fiber )\n\t\t\t\t\tif( fiber.cursor >= 0 ) continue\n\t\t\t\t\tif( fiber.cursor === $mol_wire_cursor.final ) continue\n\t\t\t\t\tfiber.fresh()\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t// Collect garbage\n\t\t\twhile( this.reaping.size ) {\n\t\t\t\t\n\t\t\t\tconst fibers = this.reaping\n\t\t\t\tthis.reaping = new Set\n\t\t\t\t\n\t\t\t\tfor( const fiber of fibers ) {\n\t\t\t\t\tif( !fiber.sub_empty ) continue\n\t\t\t\t\tfiber.destructor()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t[Symbol.toStringTag]!: string\n\n\t\tpublic cache: Result | Error | Promise< Result | Error > = undefined as any\n\t\t\n\t\tget args() {\n\t\t\treturn this.data.slice( 0 , this.pub_from ) as any as Args\n\t\t}\n\t\t\n\t\tresult() {\n\t\t\tif( $mol_promise_like( this.cache ) ) return\n\t\t\tif( this.cache instanceof Error ) return\n\t\t\treturn this.cache\n\t\t}\n\t\t\n\t\tget incompleted() {\n\t\t\treturn $mol_promise_like( this.cache )\n\t\t}\n\t\t\n\t\tfield() {\n\t\t\treturn this.task.name + '()'\n\t\t}\n\t\t\n\t\tconstructor(\n\t\t\tid: string,\n\t\t\treadonly task: ( this : Host , ... args : Args )=> Result,\n\t\t\treadonly host?: Host,\n\t\t\targs?: Args\n\t\t) {\n\t\t\t\n\t\t\tsuper()\n\t\t\tif( args ) this.data.push( ... args )\n\t\t\tthis.pub_from = this.sub_from = args?.length ?? 0\n\t\t\tthis[ Symbol.toStringTag ] = id\n\t\t\t\n\t\t}\n\t\t\n\t\tplan() {\n\t\t\t$mol_wire_fiber.planning.add( this )\n\t\t\t$mol_wire_fiber.plan()\n\t\t\treturn this\n\t\t}\n\t\t\n\t\treap() {\n\t\t\t$mol_wire_fiber.reaping.add( this )\n\t\t\t$mol_wire_fiber.plan()\n\t\t}\n\t\t\n\t\ttoString() {\n\t\t\treturn this[ Symbol.toStringTag ]\n\t\t}\n\t\t\n\t\ttoJSON() {\n\t\t\treturn this[ Symbol.toStringTag ]\n\t\t}\n\n\t\t[ $mol_dev_format_head ]() {\n\t\t\t\n\t\t\tconst cursor = {\n\t\t\t\t[ $mol_wire_cursor.stale ]: '🔴',\n\t\t\t\t[ $mol_wire_cursor.doubt ]: '🟡',\n\t\t\t\t[ $mol_wire_cursor.fresh ]: '🟢',\n\t\t\t\t[ $mol_wire_cursor.final ]: '🔵',\n\t\t\t}[ this.cursor ] ?? this.cursor.toString()\n\t\t\t\n\t\t\treturn $mol_dev_format_div( {},\n\t\t\t\t$mol_owning_check( this, this.cache )\n\t\t\t\t\t? $mol_dev_format_auto({\n\t\t\t\t\t\t[ $mol_dev_format_head ]: ()=> $mol_dev_format_shade( cursor ),\n\t\t\t\t\t\t[ $mol_dev_format_body ]: ()=> $mol_dev_format_native( this ),\n\t\t\t\t\t})\n\t\t\t\t\t: $mol_dev_format_shade( $mol_dev_format_native( this ), cursor ),\n\t\t\t\t$mol_dev_format_auto( this.cache ),\n\t\t\t)\n\t\t\t\n\t\t}\n\t\t\n\t\tget $() {\n\t\t\treturn ( this.host ?? this.task as any )['$']\n\t\t}\n\t\t\n\t\temit( quant = $mol_wire_cursor.stale ) {\n\t\t\tif( this.sub_empty ) this.plan()\n\t\t\telse super.emit( quant )\n\t\t}\n\t\t\n\t\tfresh() {\n\n\t\t\ttype Result = typeof this.cache\n\t\t\t\n\t\t\tif( this.cursor === $mol_wire_cursor.fresh ) return\n\t\t\tif( this.cursor === $mol_wire_cursor.final ) return\n\t\t\t\n\t\t\tcheck: if( this.cursor === $mol_wire_cursor.doubt ) {\n\t\t\t\t\n\t\t\t\tfor( let i = this.pub_from ; i < this.sub_from; i += 2 ) {\n\t\t\t\t\t;( this.data[i] as $mol_wire_pub )?.fresh()\n\t\t\t\t\tif( this.cursor !== $mol_wire_cursor.doubt ) break check\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tthis.cursor = $mol_wire_cursor.fresh\n\t\t\t\treturn\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tconst bu = this.track_on()\n\t\t\tlet result: typeof this.cache\n\n\t\t\ttry {\n\n\t\t\t\tswitch( this.pub_from ) {\n\t\t\t\t\tcase 0: result = (this.task as any).call( this.host! ); break\n\t\t\t\t\tcase 1: result = (this.task as any).call( this.host!, this.data[0] ); break\n\t\t\t\t\tdefault: result = (this.task as any).call( this.host!, ... this.args ); break\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( $mol_promise_like( result ) ) {\n\n\t\t\t\t\tif( wrappers.has( result ) ) {\n\t\t\t\t\t\tresult = wrappers.get( result )!.then(a=>a)\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst put = ( res: Result )=> {\n\t\t\t\t\t\t\tif( this.cache === result ) this.put( res )\n\t\t\t\t\t\t\treturn res\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twrappers.set( result, result = Object.assign(\n\t\t\t\t\t\t\tresult.then( put, put ),\n\t\t\t\t\t\t\t{ destructor: ( result as any ).destructor || (()=> {}) }\n\t\t\t\t\t\t) )\n\t\t\t\t\t\twrappers.set( result, result )\n\n\t\t\t\t\t\tconst error = new Error( `Promise in ${ this }` )\n\t\t\t\t\t\tObject.defineProperty( result, 'stack', { get: ()=> error.stack } )\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} catch( error: any ) {\n\t\t\t\t\n\t\t\t\tif( error instanceof Error || $mol_promise_like( error ) ) {\n\t\t\t\t\tresult = error\n\t\t\t\t} else {\n\t\t\t\t\tresult = new Error( String( error ), { cause: error } )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( $mol_promise_like( result ) ) {\n\t\t\t\t\t\n\t\t\t\t\tif( wrappers.has( result ) ) {\n\t\t\t\t\t\tresult = wrappers.get( result )!\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\twrappers.set( result, result = Object.assign(\n\t\t\t\t\t\t\tresult.finally( ()=> {\n\t\t\t\t\t\t\t\tif( this.cache === result ) this.absorb()\n\t\t\t\t\t\t\t} ),\n\t\t\t\t\t\t\t{ destructor: ( result as any ).destructor || (()=> {}) }\n\t\t\t\t\t\t) )\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst error = new Error( `Promise in ${ this }` )\n\t\t\t\t\t\tObject.defineProperty( result, 'stack', { get: ()=> error.stack } )\n\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif( ! $mol_promise_like( result ) ) {\n\t\t\t\tthis.track_cut()\n\t\t\t}\n\t\t\t\n\t\t\tthis.track_off( bu )\n\t\t\tthis.put( result )\n\t\t\t\n\t\t\treturn this\n\t\t}\n\t\t\n\t\trefresh() {\n\t\t\tthis.cursor = $mol_wire_cursor.stale\n\t\t\tthis.fresh()\n\t\t}\n\t\t\n\t\tabstract put( next: Result | Error | Promise< Result | Error > ): Result | Error | Promise< Result | Error >\n\t\t\n\t\t/**\n\t\t * Synchronous execution. Throws Promise when waits async task (SuspenseAPI provider).\n\t\t * Should be called inside SuspenseAPI consumer (ie fiber).\n\t\t */\n\t\tsync() {\n\t\t\t\n\t\t\tif( !$mol_wire_fiber.warm ) {\n\t\t\t\treturn this.result() as Awaited< Result >\n\t\t\t}\n\t\t\t\n\t\t\tthis.promote()\n\t\t\tthis.fresh()\n\t\t\t\n\t\t\tif( this.cache instanceof Error ) {\n\t\t\t\treturn $mol_fail_hidden( this.cache )\n\t\t\t}\n\t\t\t\n\t\t\tif( $mol_promise_like( this.cache ) ) {\n\t\t\t\treturn $mol_fail_hidden( this.cache )\n\t\t\t}\n\t\t\t\n\t\t\treturn this.cache as Awaited< Result >\n\t\t}\n\n\t\t/**\n\t\t * Asynchronous execution.\n\t\t * It's SuspenseAPI consumer. So SuspenseAPI providers can be called inside.\n\t\t */\n\t\tasync async_raw() {\n\t\t\t\n\t\t\twhile( true ) {\n\t\t\t\t\n\t\t\t\tthis.fresh()\n\t\t\t\t\n\t\t\t\tif( this.cache instanceof Error ) {\n\t\t\t\t\t$mol_fail_hidden( this.cache )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( ! $mol_promise_like( this.cache ) ) return this.cache\n\t\t\t\t\t\n\t\t\t\tawait Promise.race([ this.cache, this.step() ])\n\t\t\t\tif( ! $mol_promise_like( this.cache ) ) return this.cache\n\t\t\t\t\t\n\t\t\t\tif( this.cursor === $mol_wire_cursor.final ) {\n\t\t\t\t\t// never ends on destructed fiber\n\t\t\t\t\tawait new Promise( ()=> {} )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tasync() {\n\t\t\tconst promise = this.async_raw() as Promise<Result> & { destructor(): void }\n\n\t\t\tif (! promise.destructor) promise.destructor = () => this.destructor()\n\n\t\t\treturn promise\n\t\t}\n\t\t\n\t\tstep() {\n\t\t\treturn new Promise< null >( done => {\n\t\t\t\tconst sub = new $mol_wire_pub_sub\n\t\t\t\tconst prev = sub.track_on()\n\t\t\t\tsub.track_next( this )\n\t\t\t\tsub.track_off( prev )\n\t\t\t\tsub.absorb = ()=> {\n\t\t\t\t\tdone( null )\n\t\t\t\t\tsetTimeout( ()=> sub.destructor() )\n\t\t\t\t}\n\t\t\t} )\n\t\t}\n\n\t\tdestructor() {\n\t\t\t\n\t\t\tsuper.destructor()\n\t\t\t\n\t\t\tif( ! $mol_owning_check( this, this.cache ) ) return\n\n\t\t\ttry {\n\t\t\t\tthis.cache.destructor()\n\t\t\t} catch (result) {\n\t\t\t\tif ($mol_promise_like(result)) {\n\t\t\t\t\tconst error = new Error( `Promise in ${ this }.destructor()` )\n\t\t\t\t\tObject.defineProperty( result, 'stack', { get: ()=> error.stack } )\n\t\t\t\t}\n\n\t\t\t\t$mol_fail_hidden(result)\n\t\t\t}\n\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\n\texport let $mol_compare_deep_cache = new WeakMap< any , WeakMap< any , boolean > >()\n\t\n\t/**\n\t * Deeply compares two values. Returns true if equal.\n\t * Define `Symbol.toPrimitive` to customize.\n\t */\n\texport function $mol_compare_deep< Value >( left: Value, right: Value ): boolean {\n\n\t\tif( Object.is( left , right ) ) return true\n\n\t\tif( left === null ) return false\n\t\tif( right === null ) return false\n\n\t\tif( typeof left !== 'object' ) return false\n\t\tif( typeof right !== 'object' ) return false\n\n\t\tconst left_proto = Reflect.getPrototypeOf( left as any )\n\t\tconst right_proto = Reflect.getPrototypeOf( right as any )\n\t\t\n\t\tif( left_proto !== right_proto ) return false\n\n\t\tif( left instanceof Boolean ) return Object.is( left.valueOf(), ( right as any )['valueOf']() )\n\t\tif( left instanceof Number ) return Object.is( left.valueOf(), ( right as any )['valueOf']() )\n\t\tif( left instanceof String ) return Object.is( left.valueOf(), ( right as any )['valueOf']() )\n\t\tif( left instanceof Date ) return Object.is( left.valueOf(), ( right as any )['valueOf']() )\n\t\tif( left instanceof RegExp ) return left.source === (right as any).source && left.flags === (right as any).flags\n\t\tif( left instanceof Error ) return left.message === (right as any).message && left.stack === (right as any).stack\n\n\t\tlet left_cache = $mol_compare_deep_cache.get( left )\n\t\tif( left_cache ) {\n\n\t\t\tconst right_cache = left_cache.get( right )\n\t\t\tif( typeof right_cache === 'boolean' ) return right_cache\n\n\t\t} else {\n\t\t\t\n\t\t\tleft_cache = new WeakMap< any , boolean >()\n\t\t\t$mol_compare_deep_cache.set( left , left_cache )\n\n\t\t}\n\n\t\tleft_cache.set(right, true);\n\n\t\tlet result!: boolean\n\n\t\ttry {\n\t\t\t\n\t\t\tif( !left_proto ) result = compare_pojo( left, right as any )\n\t\t\telse if( !Reflect.getPrototypeOf( left_proto ) ) result = compare_pojo( left, right as any )\n\t\t\telse if( Symbol.toPrimitive in left ) result = compare_primitive( left, right )\n\t\t\telse if( Array.isArray( left ) ) result = compare_array( left, right as any )\n\t\t\telse if( left instanceof Set ) result = compare_set( left, right as any )\n\t\t\telse if( left instanceof Map ) result = compare_map( left, right as any )\n\t\t\telse if( ArrayBuffer.isView( left ) ) result = compare_buffer( left, right as any )\n\t\t\telse if( Symbol.iterator in left ) result = compare_iterator( ( left as any )[ Symbol.iterator ](), ( right as any )[ Symbol.iterator ]() )\n\t\t\telse result = false\n\n\t\t} finally {\n\t\t\tleft_cache.set( right , result )\n\t\t}\n\t\t\n\t\treturn result\n\t}\n\n\tfunction compare_array< Value extends any[] >( left: Value, right: Value ): boolean {\n\t\t\n\t\tconst len = left.length\n\t\tif( len !== right.length ) return false\n\t\t\n\t\tfor( let i = 0; i < len; ++i ) {\n\t\t\tif( !$mol_compare_deep( left[i] , right[i] ) ) return false\n\t\t}\n\t\t\n\t\treturn true\n\t}\n\t\n\tfunction compare_buffer( left: ArrayBufferView, right: ArrayBufferView ): boolean {\n\t\t\n\t\tconst len = left.byteLength\n\t\tif( len !== right.byteLength ) return false\n\t\t\n\t\tif( left instanceof DataView ) return compare_buffer(\n\t\t\tnew Uint8Array( left.buffer, left.byteOffset, left.byteLength ),\n\t\t\tnew Uint8Array( right.buffer, right.byteOffset, right.byteLength ),\n\t\t)\n\t\t\n\t\tfor( let i = 0; i < len; ++i ) {\n\t\t\tif( (left as any)[i] !== (right as any)[i] ) return false\n\t\t}\n\t\t\n\t\treturn true\n\t}\n\t\n\tfunction compare_iterator< Value extends IterableIterator<any> >(\n\t\tleft: Value,\n\t\tright: Value,\n\t): boolean {\n\t\t\n\t\twhile( true ) {\n\n\t\t\tconst left_next = left.next()\n\t\t\tconst right_next = right.next()\n\n\t\t\tif( left_next.done !== right_next.done ) return false\n\t\t\tif( left_next.done ) break\n\n\t\t\tif( !$mol_compare_deep( left_next.value , right_next.value ) ) return false\n\n\t\t}\n\n\t\treturn true\n\n\t}\n\t\n\tfunction compare_set< Value extends Set<any> >( left: Value, right: Value ): boolean {\n\t\tif( left.size !== right.size ) return false\n\t\treturn compare_iterator( left.values(), right.values() )\n\t}\n\t\n\tfunction compare_map< Key, Value >( left: Map< Key, Value > , right: Map< Key, Value > ): boolean {\n\t\tif( left.size !== right.size ) return false\n\t\treturn compare_iterator( left.keys(), right.keys() )\n\t\t\t&& compare_iterator( left.values(), right.values() )\n\t}\n\t\n\tfunction compare_pojo( left: {}, right: {} ): boolean {\n\t\t\n\t\tconst left_keys = Object.getOwnPropertyNames( left )\n\t\tconst right_keys = Object.getOwnPropertyNames( right )\n\t\t\n\t\tif( !compare_array( left_keys, right_keys ) ) return false\n\n\t\tfor( let key of left_keys ) {\n\t\t\tif( !$mol_compare_deep( ( left as any )[ key ], ( right as any )[ key ] ) ) return false\n\t\t}\n\n\t\tconst left_syms = Object.getOwnPropertySymbols( left )\n\t\tconst right_syms = Object.getOwnPropertySymbols( right )\n\t\t\n\t\tif( !compare_array( left_syms, right_syms ) ) return false\n\n\t\tfor( let key of left_syms ) {\n\t\t\tif( !$mol_compare_deep( ( left as any )[ key ], ( right as any )[ key ] ) ) return false\n\t\t}\n\n\t\treturn true\n\t}\n\t\n\tfunction compare_primitive( left: {}, right: {} ): boolean {\n\t\treturn Object.is(\n\t\t\t(left as any)[ Symbol.toPrimitive ]( 'default' ),\n\t\t\t(right as any)[ Symbol.toPrimitive ]( 'default' ),\n\t\t)\n\t}\n\t\n}\n","namespace $ {\n\n\t/** Logger event data */\n\texport type $mol_log3_event< Fields > = {\n\t\t[ key in string ] : unknown\n\t} & {\n\t\t\n\t\t/** Time of event creation */\n\t\ttime? : string\n\n\t\t/** Place of event creation */\n\t\tplace : unknown\n\n\t\t/** Short description of event */\n\t\tmessage : string\n\n\t} & Fields\n\n\t/** Logger function */\n\texport type $mol_log3_logger< Fields , Res = void > = (\n\t\tthis : $ ,\n\t\tevent : $mol_log3_event< Fields > ,\n\t)=> Res\n\n\t/** Log begin of some task */\n\texport declare let $mol_log3_come : $mol_log3_logger<{}>\n\t\n\t/** Log end of some task */\n\texport declare let $mol_log3_done : $mol_log3_logger<{}>\n\t\n\t/** Log error */\n\texport declare let $mol_log3_fail : $mol_log3_logger<{}>\n\t\n\t/** Log warning message */\n\texport declare let $mol_log3_warn : $mol_log3_logger<{ hint : string }>\n\t\n\t/** Log some generic event */\n\texport declare let $mol_log3_rise : $mol_log3_logger<{}>\n\n\t/** Log begin of log group, returns func to close group */\n\texport declare let $mol_log3_area : $mol_log3_logger< {} , ()=> void >\n\n\t/** Log begin of collapsed group only when some logged inside, returns func to close group */\n\texport function $mol_log3_area_lazy(\n\t\tthis : $ ,\n\t\tevent : $mol_log3_event<{}> ,\n\t) {\n\n\t\tconst self = this\n\t\tconst stack = self.$mol_log3_stack\n\n\t\tconst deep = stack.length\n\t\tlet logged = false\n\n\t\tstack.push( ()=> {\n\t\t\tlogged = true\n\t\t\tself.$mol_log3_area.call( self , event )\n\t\t} )\n\n\t\treturn ()=> {\n\t\t\tif( logged ) self.console.groupEnd()\n\t\t\tif( stack.length > deep ) stack.length = deep\n\t\t}\n\n\t}\n\n\texport let $mol_log3_stack = [] as ( ()=> void )[]\n\n}\n","namespace $ {\n\n\t/** Position in any resource. */\n\texport class $mol_span extends $mol_object2 {\n\n\t\tconstructor(\n\t\t\treadonly uri: string ,\n\t\t\treadonly source: string ,\n\t\t\treadonly row: number ,\n\t\t\treadonly col: number ,\n\t\t\treadonly length: number ,\n\t\t) {\n\t\t\tsuper()\n\t\t\tthis[ Symbol.toStringTag ] = this.uri + ( '#' + this.row + ':' + this.col + '/' + this.length )\n\t\t}\n\n\t\t/** Span for begin of unknown resource */\n\t\tstatic unknown = $mol_span.begin('?')\n\n\t\t/** Makes new span for begin of resource. */\n\t\tstatic begin( uri: string, source = '' ) {\n\t\t\treturn new $mol_span( uri , source, 1 , 1 , 0 )\n\t\t}\n\n\t\t/** Makes new span for end of resource. */\n\t\tstatic end( uri: string , source: string ) {\n\t\t\treturn new $mol_span( uri , source, 1 , source.length + 1 , 0 )\n\t\t}\n\n\t\t/** Makes new span for entire resource. */\n\t\tstatic entire( uri: string , source: string ) {\n\t\t\treturn new $mol_span( uri , source, 1 , 1 , source.length )\n\t\t}\n\n\t\ttoString() {\n\t\t\treturn this[ Symbol.toStringTag ]\n\t\t}\n\n\t\ttoJSON() {\n\t\t\treturn {\n\t\t\t\turi: this.uri,\n\t\t\t\trow: this.row,\n\t\t\t\tcol: this.col,\n\t\t\t\tlength: this.length\n\t\t\t}\n\t\t}\n\n\t\t/** Makes new error for this span. */\n\t\terror( message : string , Class = Error ) {\n\t\t\treturn new Class( `${message} (${this})` )\n\t\t}\n\n\t\t/** Makes new span for same uri. */\n\t\tspan( row : number , col : number , length : number ) {\n\t\t\treturn new $mol_span( this.uri , this.source, row , col , length )\n\t\t}\n\n\t\t/** Makes new span after end of this. */\n\t\tafter( length = 0 ) {\n\t\t\treturn new $mol_span( this.uri , this.source, this.row , this.col + this.length , length )\n\t\t}\n\n\t\t/** Makes new span between begin and end. */\n\t\tslice( begin: number, end = -1 ) {\n\t\t\tlet len = this.length\n\t\t\t\n\t\t\tif( begin < 0 ) begin += len\n\t\t\tif( end < 0 ) end += len\n\n\t\t\tif (begin < 0 || begin > len) this.$.$mol_fail( this.error( `Begin value '${begin}' out of range`, RangeError ) )\n\t\t\tif (end < 0 || end > len) this.$.$mol_fail( this.error( `End value '${end}' out of range`, RangeError ) )\n\t\t\tif (end < begin) this.$.$mol_fail( this.error( `End value '${end}' can't be less than begin value`, RangeError ) )\n\n\t\t\treturn this.span( this.row , this.col + begin , end - begin )\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\n\t/** Serializes tree to string in tree format. */\n\texport function $mol_tree2_to_string(\n\t\tthis: $,\n\t\ttree: $mol_tree2,\n\t) : string {\n\n\t\tlet output = [] as string[]\n\t\t\n\t\tfunction dump(\n\t\t\ttree: $mol_tree2,\n\t\t\tprefix = '',\n\t\t) {\n\n\t\t\tif( tree.type.length ) {\n\t\t\t\t\n\t\t\t\tif( !prefix.length ) {\n\t\t\t\t\tprefix = \"\\t\";\n\t\t\t\t}\n\n\t\t\t\toutput.push( tree.type )\n\n\t\t\t\tif( tree.kids.length == 1 ) {\n\t\t\t\t\toutput.push( ' ' )\n\t\t\t\t\tdump( tree.kids[ 0 ], prefix )\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\toutput.push( \"\\n\" )\n\n\t\t\t} else if( tree.value.length || prefix.length ) {\n\n\t\t\t\toutput.push( \"\\\\\" + tree.value + \"\\n\" )\n\n\t\t\t}\n\n\t\t\tfor( const kid of tree.kids ) {\n\t\t\t\toutput.push( prefix )\n\t\t\t\tdump( kid, prefix + \"\\t\" )\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tdump( tree )\n\n\t\treturn output.join('')\n\t}\n\t\t\n}\n","namespace $ {\n\t\n\texport function $mol_maybe< Value >( value : Value | null | undefined ) : Value[] {\n\t\treturn ( value == null ) ? [] : [ value ]\n\t}\n\t\n}\n","namespace $ {\n\n\t/** Path by types in tree. */\n\texport type $mol_tree2_path =\n\t\tArray< string | number | null >\n\t\n\t/** Hask tool for processing node. */\n\texport type $mol_tree2_hack< Context > =\n\t\t(\n\t\t\tinput : $mol_tree2 ,\n\t\t\tbelt : $mol_tree2_belt< Context > ,\n\t\t\tcontext : Context ,\n\t\t)=> readonly $mol_tree2[]\n\n\t/** Collection of hask tools for processing tree. */\n\texport type $mol_tree2_belt< Context > =\n\t\tRecord< string , $mol_tree2_hack< Context > >\n\n\t/**\n\t * Abstract Syntax Tree with human readable serialization.\n\t * Avoid direct instantiation. Use static factories instead.\n\t * @see https://github.com/nin-jin/tree.d\n\t */\n\texport class $mol_tree2 extends Object {\n\t\t\n\t\tconstructor(\n\n\t\t\t/** Type of structural node, `value` should be empty */\n\t\t\treadonly type : string,\n\t\t\t\n\t\t\t/** Content of data node, `type` should be empty */\n\t\t\treadonly value : string,\n\n\t\t\t/** Child nodes */\n\t\t\treadonly kids : readonly $mol_tree2[],\n\t\t\t\n\t\t\t/** Position in most far source resource */\n\t\t\treadonly span : $mol_span,\n\n\t\t) {\n\t\t\tsuper()\n\t\t\t;(this as any)[ Symbol.toStringTag ] = type || '\\\\' + value\n\t\t}\n\n\t\t/** Makes collection node. */\n\t\tstatic list(\n\t\t\tkids : readonly $mol_tree2[] ,\n\t\t\tspan = $mol_span.unknown ,\n\t\t) {\n\t\t\treturn new $mol_tree2( '' , '' , kids , span )\n\t\t}\n\t\t\n\t\t/** Makes new derived collection node. */\n\t\tlist(\n\t\t\tkids : readonly $mol_tree2[] ,\n\t\t) {\n\t\t\treturn $mol_tree2.list( kids , this.span )\n\t\t}\n\n\t\t/** Makes data node for any string. */\n\t\tstatic data(\n\t\t\tvalue : string ,\n\t\t\tkids = [] as readonly $mol_tree2[] ,\n\t\t\tspan = $mol_span.unknown ,\n\t\t) {\n\n\t\t\tconst chunks = value.split( '\\n' )\n\n\t\t\tif( chunks.length > 1 ) {\n\t\t\t\n\t\t\t\tlet kid_span = span.span( span.row , span.col , 0 )\n\n\t\t\t\tconst data = chunks.map( chunk => {\n\t\t\t\t\tkid_span = kid_span.after( chunk.length )\n\t\t\t\t\treturn new $mol_tree2( '' , chunk , [] , kid_span )\n\t\t\t\t} )\n\n\t\t\t\tkids = [ ... data , ... kids ]\n\n\t\t\t\tvalue = ''\n\n\t\t\t}\n\n\t\t\treturn new $mol_tree2( '' , value , kids , span )\n\n\t\t}\n\t\t\n\t\t/** Makes new derived data node. */\n\t\tdata(\n\t\t\tvalue : string ,\n\t\t\tkids = [] as readonly $mol_tree2[] ,\n\t\t) {\n\t\t\treturn $mol_tree2.data( value , kids , this.span )\n\t\t}\n\t\t\n\t\t/** Makes struct node. */\n\t\tstatic struct(\n\t\t\ttype : string ,\n\t\t\tkids = [] as readonly $mol_tree2[] ,\n\t\t\tspan = $mol_span.unknown ,\n\t\t) {\n\n\t\t\tif( /[ \\n\\t\\\\]/.test( type ) ) {\n\t\t\t\t$$.$mol_fail( span.error( `Wrong type ${ JSON.stringify( type ) }` ) )\n\t\t\t}\n\n\t\t\treturn new $mol_tree2( type , '' , kids , span )\n\n\t\t}\n\t\t\n\t\t/** Makes new derived structural node. */\n\t\tstruct(\n\t\t\ttype : string ,\n\t\t\tkids = [] as readonly $mol_tree2[] ,\n\t\t) {\n\t\t\treturn $mol_tree2.struct( type , kids , this.span )\n\t\t}\n\n\t\t/** Makes new derived node with different kids id defined. */\n\t\tclone( kids : readonly $mol_tree2[], span = this.span ) {\n\t\t\treturn new $mol_tree2( this.type , this.value , kids , span )\n\t\t}\n\n\t\t/** Returns multiline text content. */\n\t\ttext() {\n\n\t\t\tvar values : string[] = []\n\t\t\t\n\t\t\tfor( var kid of this.kids ) {\n\t\t\t\tif( kid.type ) continue\n\t\t\t\tvalues.push( kid.value )\n\t\t\t}\n\t\t\t\n\t\t\treturn this.value + values.join( '\\n' )\n\n\t\t}\n\t\t\n\t\t/** Parses tree format. */\n\t\t/** @deprecated Use $mol_tree2_from_string */\n\t\tstatic fromString( str : string , uri = 'unknown' ) {\n\t\t\treturn $$.$mol_tree2_from_string( str, uri )\n\t\t}\n\n\t\t/** Serializes to tree format. */\n\t\ttoString() : string {\n\t\t\treturn $$.$mol_tree2_to_string( this )\n\t\t}\n\t\t\n\t\t/** Makes new tree with node overrided by path. */\n\t\tinsert( value : $mol_tree2 | null , ...path : $mol_tree2_path ) : $mol_tree2 {\n\t\t\treturn this.update( $mol_maybe( value ), ... path )[0]\n\t\t}\n\n\t\t/** Makes new tree with node overrided by path. */\n\t\tupdate( value : readonly $mol_tree2[] , ...path : $mol_tree2_path ) : readonly $mol_tree2[] {\n\n\t\t\tif( path.length === 0 ) return value\n\t\t\t\n\t\t\tconst type = path[0]\n\t\t\tif( typeof type === 'string' ) {\n\n\t\t\t\tlet replaced = false\n\t\t\t\tconst sub = this.kids.flatMap( ( item , index )=> {\n\t\t\t\t\tif( item.type !== type ) return item\n\t\t\t\t\treplaced = true\n\t\t\t\t\treturn item.update( value , ... path.slice( 1 ) )\n\t\t\t\t} ).filter( Boolean )\n\t\t\t\t\n\t\t\t\tif( !replaced && value ) {\n\t\t\t\t\tsub.push( ... this.struct( type , [] ).update( value , ... path.slice( 1 ) ) )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn [ this.clone( sub ) ]\n\n\t\t\t} else if( typeof type === 'number' ) {\n\t\t\t\t\n\t\t\t\tconst ins = ( this.kids[ type ] || this.list([]) )\n\t\t\t\t\t.update( value , ... path.slice( 1 ) )\n\t\t\t\t\n\t\t\t\treturn [ this.clone([\n\t\t\t\t\t... this.kids.slice( 0, type ),\n\t\t\t\t\t... ins,\n\t\t\t\t\t... this.kids.slice( type + 1 ),\n\t\t\t\t]) ]\n\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tconst kids = ( ( this.kids.length === 0 ) ? [ this.list([]) ] : this.kids )\n\t\t\t\t\t.flatMap( item => item.update( value , ... path.slice( 1 ) ) )\n\n\t\t\t\treturn [ this.clone( kids ) ]\n\n\t\t\t}\n\n\t\t}\n\n\t\t/** Query nodes by path. */\n\t\tselect( ...path : $mol_tree2_path ) {\n\n\t\t\tlet next = [ this as $mol_tree2 ]\n\n\t\t\tfor( const type of path ) {\n\n\t\t\t\tif( !next.length ) break\n\t\t\t\t\n\t\t\t\tconst prev = next\n\t\t\t\tnext = []\n\n\t\t\t\tfor( var item of prev ) {\n\n\t\t\t\t\tswitch( typeof( type ) ) {\n\n\t\t\t\t\t\tcase 'string' :\n\n\t\t\t\t\t\t\tfor( var child of item.kids ) {\n\t\t\t\t\t\t\t\tif( child.type == type ) {\n\t\t\t\t\t\t\t\t\tnext.push( child )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase 'number' :\n\n\t\t\t\t\t\t\tif( type < item.kids.length ) next.push( item.kids[ type ] )\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\n\t\t\t\t\t\tdefault : next.push( ... item.kids )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.list( next )\n\t\t\t\n\t\t}\n\t\t\n\t\t/** Filter kids by path or value. */\n\t\tfilter( path : string[] , value? : string ) {\n\n\t\t\tconst sub = this.kids.filter( item => {\n\t\t\t\t\t\n\t\t\t\tvar found = item.select( ...path )\n\t\t\t\t\n\t\t\t\tif( value === undefined ) {\n\t\t\t\t\treturn Boolean( found.kids.length )\n\t\t\t\t} else {\n\t\t\t\t\treturn found.kids.some( child => child.value == value )\n\t\t\t\t}\n\t\t\t\n\t\t\t} )\n\t\t\t\n\t\t\treturn this.clone( sub )\n\n\t\t}\n\n\t\thack_self< Context extends { span?: $mol_span; [ key: string ]: unknown } = {} >(\n\t\t\tbelt: $mol_tree2_belt< Context >,\n\t\t\tcontext = {} as Context,\n\t\t) {\n\t\t\tlet handle = belt[ this.type ] || belt[ '' ]\n\t\t\t\t\n\t\t\tif( !handle || handle === Object.prototype[ this.type as keyof Object ] ) {\n\t\t\t\thandle = ( input, belt, context )=> [\n\t\t\t\t\tinput.clone( input.hack( belt, context ), context.span )\n\t\t\t\t]\n\t\t\t}\n\t\t\t\n\t\t\ttry {\n\t\t\t\treturn handle( this , belt , context! )\n\t\t\t} catch( error: any ) {\n\t\t\t\terror.message += `\\n${ this.clone([]) }${ this.span }`\n\t\t\t\t$mol_fail_hidden( error )\n\t\t\t}\n\t\t}\n\n\t\t/** Transform tree through context with transformers */\n\t\thack< Context extends { span?: $mol_span; [ key: string ]: unknown } = {} >(\n\t\t\tbelt: $mol_tree2_belt< Context >,\n\t\t\tcontext = {} as Context,\n\t\t) {\n\t\t\treturn ( [] as readonly $mol_tree2[] ).concat(\n\t\t\t\t... this.kids.map( child => child.hack_self(belt, context) )\n\t\t\t)\n\n\t\t}\n\n\t\t/** Makes Error with node coordinates. */\n\t\terror( message : string , Class = Error ) {\n\t\t\treturn this.span.error( `${ message }\\n${ this.clone([]) }` , Class )\n\t\t}\n\n\t}\n\n\texport class $mol_tree2_empty extends $mol_tree2 {\n\t\tconstructor() {\n\t\t\tsuper( '' , '' , [] , $mol_span.unknown )\n\t\t}\n\t}\n\t\n}\n","namespace $ {\n\n\t/** Syntax error with cordinates and source line snippet. */\n\texport class $mol_error_syntax extends SyntaxError {\n\t\tconstructor (\n\t\t\tpublic reason: string,\n\t\t\tpublic line: string,\n\t\t\tpublic span: $mol_span,\n\t\t) {\n\t\t\tsuper(`${ reason }\\n${ span }\\n${ line.substring( 0 , span.col - 1 ).replace( /\\S/g, ' ' ) }${ ''.padEnd( span.length, '!' ) }\\n${ line }`)\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\n\t/** Parses tree format from string. */\n\texport function $mol_tree2_from_string(\n\t\tthis: $,\n\t\tstr: string,\n\t\turi = '?',\n\t) : $mol_tree2 {\n\n\t\tconst span = $mol_span.entire( uri, str )\n\n\t\tvar root = $mol_tree2.list( [], span )\n\t\tvar stack = [ root ]\n\n\t\tvar pos = 0, row = 0, min_indent = 0\n\t\t\n\t\twhile( str.length > pos ) {\n\n\t\t\tvar indent = 0\n\t\t\tvar line_start = pos\n\n\t\t\trow++\n\n\t\t\t// read indent\n\t\t\twhile( str.length > pos && str[ pos ] == '\\t' ) {\n\t\t\t\tindent++\n\t\t\t\tpos++\n\t\t\t}\n\n\t\t\tif( ! root.kids.length ) {\n\t\t\t\tmin_indent = indent\n\t\t\t}\n\n\t\t\tindent -= min_indent\n\n\t\t\t// invalid tab size\n\t\t\tif( indent < 0 || indent >= stack.length ) {\n\n\t\t\t\tconst sp = span.span( row, 1, pos - line_start )\n\n\t\t\t\t// skip error line\n\t\t\t\twhile( str.length > pos && str[ pos ] != '\\n' ) {\n\t\t\t\t\tpos++\n\t\t\t\t}\n\n\t\t\t\tif( indent < 0 ) {\n\t\t\t\t\tif( str.length > pos ) {\n\t\t\t\t\t\tthis.$mol_fail( new this.$mol_error_syntax(\n\t\t\t\t\t\t\t`Too few tabs`,\n\t\t\t\t\t\t\tstr.substring( line_start, pos ),\n\t\t\t\t\t\t\tsp,\n\t\t\t\t\t\t) )\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.$mol_fail( new this.$mol_error_syntax(\n\t\t\t\t\t\t`Too many tabs`,\n\t\t\t\t\t\tstr.substring( line_start, pos ),\n\t\t\t\t\t\tsp,\n\t\t\t\t\t) )\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstack.length = indent + 1\n\t\t\tvar parent = stack[ indent ]\n\n\t\t\t// parse types\n\t\t\twhile( str.length > pos && str[ pos ] != '\\\\' && str[ pos ] != '\\n' ) {\n\n\t\t\t\t// type can not contain space and tab\n\t\t\t\tvar error_start = pos\n\t\t\t\twhile( str.length > pos && ( str[ pos ] == ' ' || str[ pos ] == '\\t' ) ) {\n\t\t\t\t\tpos++\n\t\t\t\t}\n\n\t\t\t\tif( pos > error_start ) {\n\t\t\t\t\tlet line_end = str.indexOf( '\\n' , pos )\n\t\t\t\t\tif( line_end === -1 ) line_end = str.length\n\t\t\t\t\tconst sp = span.span( row, error_start - line_start + 1, pos - error_start )\n\t\t\t\t\tthis.$mol_fail( new this.$mol_error_syntax(\n\t\t\t\t\t\t`Wrong nodes separator`,\n\t\t\t\t\t\tstr.substring( line_start, line_end ),\n\t\t\t\t\t\tsp,\n\t\t\t\t\t) )\n\t\t\t\t}\n\n\t\t\t\t// read type\n\t\t\t\tvar type_start = pos\n\t\t\t\twhile( \n\t\t\t\t\tstr.length > pos && \n\t\t\t\t\tstr[ pos ] != '\\\\' && \n\t\t\t\t\tstr[ pos ] != ' ' && \n\t\t\t\t\tstr[ pos ] != '\\t' && \n\t\t\t\t\tstr[ pos ] != '\\n'\n\t\t\t\t) {\n\t\t\t\t\tpos++\n\t\t\t\t}\n\t\t\t\tif( pos > type_start ) {\n\t\t\t\t\tlet next = new $mol_tree2(\n\t\t\t\t\t\tstr.slice( type_start , pos ),\n\t\t\t\t\t\t'',\n\t\t\t\t\t\t[],\n\t\t\t\t\t\tspan.span( row, type_start - line_start + 1, pos - type_start ),\n\t\t\t\t\t)\n\t\t\t\t\tconst parent_kids = parent.kids as $mol_tree2[]\n\t\t\t\t\tparent_kids.push( next )\n\t\t\t\t\tparent = next\n\t\t\t\t}\n\n\t\t\t\t// read one space if exists\n\t\t\t\tif( str.length > pos && str[ pos ] == ' ' ) {\n\t\t\t\t\tpos++\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// read data\n\t\t\tif( str.length > pos && str[ pos ] == '\\\\' ) {\n\t\t\t\tvar data_start = pos\n\t\t\t\twhile( str.length > pos && str[ pos ] != '\\n' ) {\n\t\t\t\t\tpos++\n\t\t\t\t}\n\t\t\t\tlet next = new $mol_tree2(\n\t\t\t\t\t'',\n\t\t\t\t\tstr.slice( data_start + 1 , pos ),\n\t\t\t\t\t[],\n\t\t\t\t\tspan.span( row, data_start - line_start + 2, pos - data_start - 1 ),\n\t\t\t\t)\n\t\t\t\tconst parent_kids = parent.kids as $mol_tree2[]\n\t\t\t\tparent_kids.push( next )\n\t\t\t\tparent = next\n\t\t\t}\n\n\t\t\t// now must be end of text\n\t\t\tif( str.length === pos && stack.length > 0 ) {\n\t\t\t\tconst sp = span.span( row, pos - line_start + 1, 1 )\n\t\t\t\tthis.$mol_fail( new this.$mol_error_syntax(\n\t\t\t\t\t`Unexpected EOF, LF required`,\n\t\t\t\t\tstr.substring( line_start, str.length ),\n\t\t\t\t\tsp,\n\t\t\t\t) )\n\t\t\t}\n\n\t\t\tstack.push( parent )\n\t\t\tpos++\n\t\t}\n\n\t\treturn root\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_tree2_from_json( json: any, span = $mol_span.unknown ): $mol_tree2 {\n\n\t\tif( typeof json === 'boolean' || typeof json === 'number' || json === null ) {\n\t\t\treturn new $mol_tree2( String( json ) , '' , [] , span )\n\t\t}\n\t\t\n\t\tif( typeof json === 'string' ) {\n\t\t\treturn $mol_tree2.data( json , [], span )\n\t\t}\n\n\t\tif( typeof json.toJSON === 'function' ) {\n\t\t\treturn $mol_tree2_from_json( json.toJSON() )\n\t\t}\n\n\t\tif( Array.isArray( json ) ) {\n\t\t\tconst sub = json.map( json => $mol_tree2_from_json( json , span ) )\n\t\t\treturn new $mol_tree2( '/' , '', sub, span )\n\t\t}\n\t\t\n\t\tif( ArrayBuffer.isView( json ) ) {\n\t\t\tconst buf = new Uint8Array( json.buffer, json.byteOffset, json.byteLength )\n\t\t\treturn $mol_tree2.data( String.fromCharCode( ... buf ) , [], span )\n\t\t}\n\t\t\t\n\t\tif( json instanceof Date ) {\n\t\t\treturn new $mol_tree2( '', json.toISOString() , [] , span )\n\t\t}\n\n\t\tif( json.toString !== Object.prototype.toString ) {\n\t\t\treturn $mol_tree2.data( json.toString() , [], span )\n\t\t}\n\n\t\tif( json instanceof Error ) {\n\t\t\tconst { name , message , stack } = json\n\t\t\tjson = { ... json, name, message, stack }\n\t\t}\n\n\t\tconst sub = [] as $mol_tree2[]\n\t\t\n\t\tfor( var key in json ) {\n\n\t\t\tconst val = json[ key ]\n\n\t\t\tif( val === undefined ) continue\n\n\t\t\tconst subsub = $mol_tree2_from_json( val, span )\n\t\t\t\n\t\t\tif( /^[^\\n\\t\\\\ ]+$/.test( key ) ) {\n\t\t\t\tsub.push( new $mol_tree2( key, '', [ subsub ], span ) )\n\t\t\t} else {\n\t\t\t\tsub.push( $mol_tree2.data( key, [ subsub ], span ) )\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn new $mol_tree2( '*' , '', sub , span )\n\t\t\t\n\t}\n\n}\n","namespace $ {\n\t\n\t/** Module for working with terminal. Text coloring when output in terminal */\n\texport class $mol_term_color {\n\t\t\n\t\tstatic reset = this.ansi( 0, 0 )\n\t\tstatic bold = this.ansi( 1, 22 )\n\t\tstatic italic = this.ansi( 3, 23 )\n\t\tstatic underline = this.ansi( 4, 24 )\n\t\tstatic inverse = this.ansi( 7, 27 )\n\t\tstatic hidden = this.ansi( 8, 28 )\n\t\tstatic strike = this.ansi( 9, 29 )\n\t\t\n\t\tstatic gray = this.ansi( 90, 39 )\n\t\tstatic red = this.ansi( 91, 39 )\n\t\tstatic green = this.ansi( 92, 39 )\n\t\tstatic yellow = this.ansi( 93, 39 )\n\t\tstatic blue = this.ansi( 94, 39 )\n\t\tstatic magenta = this.ansi( 95, 39 )\n\t\tstatic cyan = this.ansi( 96, 39 )\n\t\t\n\t\tstatic Gray = ( str: string )=> this.inverse( this.gray( str ) )\n\t\tstatic Red = ( str: string )=> this.inverse( this.red( str ) )\n\t\tstatic Green = ( str: string )=> this.inverse( this.green( str ) )\n\t\tstatic Yellow = ( str: string )=> this.inverse( this.yellow( str ) )\n\t\tstatic Blue = ( str: string )=> this.inverse( this.blue( str ) )\n\t\tstatic Magenta = ( str: string )=> this.inverse( this.magenta( str ) )\n\t\tstatic Cyan = ( str: string )=> this.inverse( this.cyan( str ) )\n\t\t\n\t\tstatic ansi( open: number, close: number ) {\n\t\n\t\t\tif( typeof process === 'undefined' ) return String\n\t\t\tif( !process.stdout.isTTY ) return String\n\t\t\n\t\t\tconst prefix = `\\x1b[${open}m`\n\t\t\tconst postfix = `\\x1b[${close}m`\n\t\t\t\n\t\t\tconst suffix_regexp = new RegExp( postfix.replace( '[', '\\\\[' ), 'g' )\n\t\t\n\t\t\treturn function colorer( str: string ) {\n\t\t\n\t\t\t\tstr = String( str )\n\t\t\t\tif( str === '' ) return str\n\t\t\n\t\t\t\tconst suffix = str.replace( suffix_regexp, prefix )\n\t\t\t\treturn prefix + suffix + postfix\n\t\t\n\t\t\t}\n\t\t\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\n\texport function $mol_log3_node_make(\n\t\tlevel : keyof Console ,\n\t\toutput : 'stdout' | 'stderr',\n\t\ttype : string ,\n\t\tcolor: ( str: string )=> string ,\n\t) {\n\n\t\treturn function $mol_log3_logger(\n\t\t\tthis : $ ,\n\t\t\tevent : $mol_log3_event<{}> ,\n\t\t) {\n\n\t\t\tif( !event.time ) event = { time : new Date().toISOString() , ... event }\n\n\t\t\tlet tree = this.$mol_tree2_from_json( event )\n\t\t\ttree = tree.struct( type, tree.kids )\n\t\t\t\n\t\t\tlet str = color( tree.toString() )\n\t\t\t;( this.console[ level ] as any )( str )\n\t\n\t\t\tconst self = this\n\t\t\treturn ()=> self.console.groupEnd()\n\n\t\t}\n\n\t}\n\n\t$.$mol_log3_come = $mol_log3_node_make( 'info' , 'stdout' , 'come' , $mol_term_color.blue )\n\t$.$mol_log3_done = $mol_log3_node_make( 'info' , 'stdout' , 'done' , $mol_term_color.green )\n\t$.$mol_log3_fail = $mol_log3_node_make( 'error' , 'stderr' , 'fail' , $mol_term_color.red )\n\t$.$mol_log3_warn = $mol_log3_node_make( 'warn' , 'stderr' , 'warn' , $mol_term_color.yellow )\n\t$.$mol_log3_rise = $mol_log3_node_make( 'log' , 'stdout' , 'rise' , $mol_term_color.magenta )\n\t$.$mol_log3_area = $mol_log3_node_make( 'log' , 'stdout' , 'area' , $mol_term_color.cyan )\n\n}\n","namespace $ {\n\t\n\t/** One-shot fiber */\n\texport class $mol_wire_task<\n\t\tHost,\n\t\tArgs extends readonly unknown[],\n\t\tResult,\n\t> extends $mol_wire_fiber< Host, Args, Result > {\n\t\t\n\t\tstatic getter<\n\t\t\tHost,\n\t\t\tArgs extends readonly unknown[],\n\t\t\tResult,\n\t\t>(\n\t\t\ttask: ( this : Host , ... args : Args )=> Result,\n\t\t): ( host: Host, args: Args )=> $mol_wire_task< Host, Args, Result > {\n\t\t\t\n\t\t\treturn function $mol_wire_task_get( host: Host, args: Args ) {\n\t\t\t\t\n\t\t\t\tconst sub = $mol_wire_auto()\n\t\t\t\tconst existen = sub?.track_next() as $mol_wire_task< Host, Args, Result > | undefined\n\t\t\t\t\n\t\t\t\treuse: if( existen ) {\n\t\t\t\t\t\n\t\t\t\t\tif( !existen.temp ) break reuse\n\t\t\t\t\t\n\t\t\t\t\tif( existen.host !== host ) break reuse\n\t\t\t\t\tif( existen.task !== task ) break reuse\n\t\t\t\t\tif( !$mol_compare_deep( existen.args, args ) ) break reuse\n\t\t\t\t\t\n\t\t\t\t\treturn existen\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst key = ( (host as any)?.[ Symbol.toStringTag ] ?? host ) + ( '.' + task.name + '<#>' )\n\t\t\t\tconst next = new $mol_wire_task( key, task, host, args )\n\t\t\t\t\n\t\t\t\t// Disabled because non-idempotency is required for try-catch\n\t\t\t\tif( existen?.temp ) {\n\t\t\t\t\t$$.$mol_log3_warn({\n\t\t\t\t\t\tplace: '$mol_wire_task',\n\t\t\t\t\t\tmessage: `Non idempotency`,\n\t\t\t\t\t\tsub,\n\t\t\t\t\t\tpubs: [ ... sub?.pub_list ?? [] , existen ],\n\t\t\t\t\t\tnext,\n\t\t\t\t\t\thint: 'Ignore it',\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn next\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tget temp() {\n\t\t\treturn true\n\t\t}\n\t\t\n\t\tcomplete() {\n\t\t\tif( $mol_promise_like( this.cache ) ) return\n\t\t\tthis.destructor()\n\t\t}\n\t\t\n\t\tput( next: Result | Error | Promise< Result | Error > ) {\n\t\t\t\n\t\t\tconst prev = this.cache\n\t\t\tthis.cache = next\n\t\t\t\n\t\t\tif( $mol_promise_like( next ) ) {\n\t\t\t\t\n\t\t\t\tthis.cursor = $mol_wire_cursor.fresh\n\t\t\t\tif( next !== prev ) this.emit()\n\t\t\t\t\n\t\t\t\tif( $mol_owning_catch( this, next ) ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t(next as any)[ Symbol.toStringTag ] = (this as any)[ Symbol.toStringTag ]\n\t\t\t\t\t} catch { // Promises throw in strict mode\n\t\t\t\t\t\tObject.defineProperty( next, Symbol.toStringTag, { value: (this as any)[ Symbol.toStringTag ] } )\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn next\n\t\t\t}\n\t\t\t\n\t\t\tthis.cursor = $mol_wire_cursor.final\n\t\t\t\n\t\t\tif( this.sub_empty ) this.destructor()\n\t\t\telse if( next !== prev ) this.emit()\n\t\t\t\n\t\t\treturn next\n\t\t}\n\t\t\n\t}\n\n}\n","namespace $ {\n\tconst factories = new WeakMap<Function, Function>()\n\n\tfunction factory<Args extends unknown[], Result>(\n\t\tval: new (...args: Args) => Result\n\t) {\n\t\tlet make = factories.get(val) as null | ((...args: Args) => Result)\n\n\t\tif ( make ) return make\n\n\t\tmake = $mol_func_name_from((...args: Args) => new val(...args), val)\n\t\tfactories.set(val, make)\n\n\t\treturn make\n\t}\n\n\tconst getters = new WeakMap<Object, Record<string | symbol, (next?: unknown) => unknown>>()\n\n\tfunction get_prop(\n\t\thost: Object,\n\t\tfield: string | symbol,\n\t) {\n\t\tlet props = getters.get(host)\n\t\tlet get_val = props?.[field]\n\n\t\tif ( get_val ) return get_val\n\n\t\tget_val = (next?: unknown) => {\n\t\t\tif (next !== undefined) host[field as keyof typeof host] = next as any\n\n\t\t\treturn host[field as keyof typeof host]\n\t\t}\n\n\t\tObject.defineProperty( get_val , 'name' , { value : field } )\n\n\t\tif (! props) {\n\t\t\tprops = {}\n\t\t\tgetters.set(host, props)\n\t\t}\n\t\tprops[field] = get_val\n\n\t\treturn get_val\n\t}\n\n\t/**\n\t * Convert asynchronous (promise-based) API to synchronous by wrapping function and method calls in a fiber.\n\t * @see https://mol.hyoo.ru/#!section=docs/=1fcpsq_1wh0h2\n\t */\n\texport function $mol_wire_sync< Host extends object >( obj: Host ) {\n\t\treturn new Proxy( obj, {\n\t\t\t\n\t\t\tget( obj, field ) {\n\t\t\t\t\n\t\t\t\tlet val = (obj as any)[ field ]\n\t\t\t\tconst temp = $mol_wire_task.getter(typeof val === 'function' ? val : get_prop(obj, field))\n\n\t\t\t\tif (typeof val !== 'function') return temp( obj, [] ).sync()\n\n\t\t\t\treturn function $mol_wire_sync( this: Host, ... args: unknown[] ) {\n\t\t\t\t\tconst fiber = temp( obj, args )\n\t\t\t\t\treturn fiber.sync()\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tset( obj, field, next) {\n\t\t\t\tconst temp = $mol_wire_task.getter(get_prop(obj, field))\n\t\t\t\ttemp( obj, [ next ] ).sync()\n\n\t\t\t\treturn true\n\t\t\t},\n\n\t\t\tconstruct(obj, args) {\n\t\t\t\tconst temp = $mol_wire_task.getter(factory(obj as (new ( ... args: unknown[] )=> unknown)))\n\t\t\t\treturn temp( obj, args ).sync() as object\n\t\t\t},\n\n\t\t\tapply( obj, self, args ) {\n\t\t\t\tconst temp = $mol_wire_task.getter(obj as ( ... args: any[] )=> any)\n\t\t\t\treturn temp(self, args).sync()\n\t\t\t},\n\t\t\t\n\t\t} ) as unknown as ObjectOrFunctionResultAwaited<Host>\n\t}\n\n\ttype FunctionResultAwaited<Some> = Some extends (...args: infer Args) => infer Res\n\t\t? (...args: Args) => Awaited<Res>\n\t\t: Some\n\n\ttype ConstructorResultAwaited<Some> = Some extends new (...args: infer Args) => infer Res\n\t\t? new (...args: Args) => Res\n\t\t: {}\n\n\ttype MethodsResultAwaited<Host extends Object> = {\n\t\t[K in keyof Host]: FunctionResultAwaited<Host[K]>\n\t}\n\n\ttype ObjectOrFunctionResultAwaited<Some> = (\n\t\tSome extends (...args: any) => unknown ? FunctionResultAwaited<Some> : {}\n\t) & ( Some extends Object ? MethodsResultAwaited<Some> & ConstructorResultAwaited<Some> : Some )\n\n}\n","namespace $ {\n\n\texport namespace $$ { let $ }\n\n\texport const $mol_object_field = Symbol( '$mol_object_field' )\n\t\n\texport class $mol_object extends $mol_object2 {\n\t\t\n\t\tpublic static make< This extends typeof $mol_object >(\n\t\t\tthis: This,\n\t\t\tconfig: Partial< InstanceType< This > >,\n\t\t) {\n\t\t\treturn super.create( obj => {\n\t\t\t\tfor( let key in config ) ( obj as any )[ key ] = config[ key ]!\n\t\t\t} ) as InstanceType< This >\n\t\t}\n\t\t\n\t}\n\n}\n","namespace $ {\n\t\n\t/**\n\t * Decorates method to fiber to ensure it is executed only once inside other fiber.\n\t */\n\texport function $mol_wire_method<\n\t\tHost extends object,\n\t\tArgs extends readonly any[],\n\t>(\n\t\thost : Host,\n\t\tfield : PropertyKey,\n\t\tdescr? : TypedPropertyDescriptor< ( ... args: Args )=> any >,\n\t) {\n\t\t\n\t\tif( !descr ) descr = Reflect.getOwnPropertyDescriptor( host , field ) as any\n\t\tconst orig = descr?.value! ?? (host as any)[ field ]\n\t\t\n\t\tconst sup = Reflect.getPrototypeOf( host )!\t\n\t\tif( typeof (sup as any)[ field ] === 'function' ) {\n\t\t\tObject.defineProperty( orig , 'name' , { value : (sup as any)[ field ].name } )\n\t\t}\n\t\t\n\t\tconst temp = $mol_wire_task.getter( orig )\n\t\tconst value = function( this: Host, ... args: Args ) {\n\t\t\tconst fiber = temp( this ?? null as any, args )\n\t\t\treturn fiber.sync()\n\t\t}\n\t\t\n\t\tObject.defineProperty( value , 'name' , { value : orig.name + ' ' } )\n\t\t\n\t\tObject.assign( value, { orig } )\n\t\tconst descr2 = { ... descr, value }\n\t\tReflect.defineProperty( host, field, descr2 )\n\t\t\n\t\treturn descr2\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t/**\n\t * Decorates method to fiber to ensure it is executed only once inside other fiber from [mol_wire](../wire/README.md)\n\t * @see https://mol.hyoo.ru/#!section=docs/=1fcpsq_1wh0h2\n\t */\n\texport let $mol_action = $mol_wire_method\n}\n","namespace $ {\n\texport enum $mol_rest_code {\n\t\n\t\tContinue = 100,\n\t\tSwitching_Protocols = 101,\n\t\tProcessing = 102,\n\t\t\n\t\tOK = 200,\n\t\tCreated = 201,\n\t\tAccepted = 202,\n\t\tNon_Authoritative_Information = 203,\n\t\tNo_Content = 204,\n\t\tReset_Content = 205,\n\t\tPartial_Content = 206,\n\t\tMulti_Status = 207,\n\t\tAlready_Reported = 208,\n\t\tIM_Used = 226,\n\t\t\n\t\tMultiple_Choices = 300,\n\t\tMoved_Permanently = 301,\n\t\tFound = 302,\n\t\tSee_Other = 303,\n\t\tNot_Modified = 304,\n\t\tUse_Proxy = 305,\n\t\tTemporary_Redirect = 307,\n\t\t\n\t\tBad_Request = 400,\n\t\tUnauthorized = 401,\n\t\tPayment_Required = 402,\n\t\tForbidden = 403,\n\t\tNot_Found = 404,\n\t\tMethod_Not_Allowed = 405,\n\t\tNot_Acceptable = 406,\n\t\tProxy_Authentication_Required = 407,\n\t\tRequest_Timeout = 408,\n\t\tConflict = 409,\n\t\tGone = 410,\n\t\tLength_Required = 411,\n\t\tPrecondition_Failed = 412,\n\t\tRequest_Entity_Too_Large = 413,\n\t\tRequest_URI_Too_Long = 414,\n\t\tUnsupported_Media_Type = 415,\n\t\tRequested_Range_Not_Satisfiable = 416,\n\t\tExpectation_Failed = 417,\n\t\tTeapot = 418,\n\t\tUnprocessable_Entity = 422,\n\t\tLocked = 423,\n\t\tFailed_Dependency = 424,\n\t\tUpgrade_Required = 426,\n\t\tPrecondition_Required = 428,\n\t\tToo_Many_Requests = 429,\n\t\tRequest_Header_Fields_Too_Large = 431,\n\t\tUnavailable_For_Legal_Reasons = 451,\n\t\t\n\t\tInternal_Server_Error = 500,\n\t\tNot_Implemented = 501,\n\t\tBad_Gateway = 502,\n\t\tService_Unavailable = 503,\n\t\tGateway_Timeout = 504,\n\t\tHTTP_Version_Not_Supported = 505,\n\t\tInsufficient_Storage = 507,\n\t\tLoop_Detected = 508,\n\t\tNot_Extended = 510,\n\t\tNetwork_Authentication_Required = 511,\n\t\tNetwork_Read_Timeout_Error = 598,\n\t\tNetwork_Connect_Timeout_Error = 599,\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport var $mol_dom_context : typeof globalThis\n\t\n}\n","namespace $ {\n\n\tconst catched = new WeakMap< any , boolean >()\n\n\texport function $mol_fail_catch( error: unknown ) {\n\t\t\n\t\tif( typeof error !== 'object' ) return false\n\t\tif( $mol_promise_like( error ) ) $mol_fail_hidden( error )\n\t\tif( catched.get( error ) ) return false\n\t\t\n\t\tcatched.set( error , true )\n\t\treturn true\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport function $mol_fail_log( error: unknown ) {\n\t\t\n\t\tif( $mol_promise_like( error ) ) return false\n\t\tif( !$mol_fail_catch( error ) ) return false\n\t\t\n\t\tconsole.error( error )\n\t\t\n\t\treturn true\n\t\t\n\t}\n\n}\n","interface $node {\n\t[key:string]: any\n}\n\nvar $node = new Proxy( { require } as any , {\n\t\n\tget( target , name : string , wrapper ) {\n\n\t\tif( target[ name ] ) return target[ name ]\n\n\t\tif( name.startsWith( 'node:' ) ) return target.require ( name )\n\t\tif( name[0] === '.' ) return target.require( name )\n\t\t\n\t\tconst mod = target.require/****/( 'module' ) as typeof import/****/( 'module' )\n\t\tif( mod.builtinModules.indexOf( name ) >= 0 ) return target.require ( name )\n\n\t\ttry {\n\t\t\ttarget.require.resolve( name )\n\t\t} catch {\n\t\t\n\t\t\tconst $$ = ( $ as any )\n\t\t\t$$.$mol_exec( '.' , 'npm' , 'install' , '--omit=dev', name )\n\t\t\t\n\t\t\ttry {\n\t\t\t\t$$.$mol_exec( '.' , 'npm' , 'install' , '--omit=dev', '@types/' + name )\n\t\t\t} catch (e) {\n\t\t\t\tif ($$.$mol_fail_catch(e)) {\n\t\t\t\t\t$$.$mol_fail_log(e)\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\t\n\t\ttry {\n\t\t\treturn target.require( name )\n\t\t} catch( error ) {\n\n\t\t\tif($.$mol_fail_catch(error) && ( error as any ).code === 'ERR_REQUIRE_ESM' ) {\n\t\t\t\tconst module = cache.get( name )\n\t\t\t\tif( module ) return module\n\t\t\t\tthrow import( name ).then( module => cache.set( name, module ) )\n\t\t\t}\n\t\t\t\n\t\t\t$.$mol_fail_log( error )\n\n\t\t\treturn null\n\t\t}\n\n\t},\n\n\tset( target , name : string , value ) {\n\t\ttarget[ name ] = value\n\t\treturn true\n\t},\n\n} ) as $node\n\nconst cache = new Map< string, any >()\n\nrequire = ( req =>\n\tObject.assign( function require( name : string ) {\n\t\treturn $node[ name ]\n\t} , req )\n)( require )\n\n","namespace $ {\n\n\tfunction cause_serialize(cause: unknown) {\n\t\treturn JSON.stringify( cause, null, '  ' )\n\t\t\t.replace(/\\(/,'<')\n\t\t\t.replace(/\\)/,' >')\n\t}\n\n\tfunction frame_normalize(frame: string | Object) {\n\t\treturn ( typeof frame  === 'string' ? frame : cause_serialize(frame) )\n\t\t\t.trim()\n\t\t\t.replace( /at /gm, '   at ' )\n\t\t\t.replace( /^(?!    +at )(.*)/gm, '    at | $1 (#)' )\n\t}\n\n\texport class $mol_error_mix< Cause extends {} = {} > extends AggregateError {\n\t\t\n\t\tname = $$.$mol_func_name( this.constructor ).replace( /^\\$/, '' ) + '_Error'\n\n\t\tconstructor(\n\t\t\tmessage: string,\n\t\t\treadonly cause = {} as Cause,\n\t\t\t... errors: readonly Error[]\n\t\t) {\n\t\t\t\n\t\t\tsuper( errors, message, { cause } )\n\t\t\t\n\t\t\tconst desc = Object.getOwnPropertyDescriptor( this, 'stack' )\n\t\t\tconst stack_get = ()=> desc?.get?.() ?? super.stack ?? desc?.value ?? this.message\n\t\t\t\n\t\t\tObject.defineProperty( this, 'stack', {\n\t\t\t\tget: ()=> stack_get() + '\\n' + [\n\t\t\t\t\t\tthis.cause ?? 'no cause',\n\t\t\t\t\t\t... this.errors.flatMap( e => [\n\t\t\t\t\t\t\te.stack,\n\t\t\t\t\t\t\t... e instanceof $mol_error_mix || ! e.cause ? [] : [ e.cause ]\n\t\t\t\t\t\t] )\n\t\t\t\t\t].map(frame_normalize).join('\\n')\n\t\t\t} )\n\n\t\t\t// в nodejs, что б не дублировалось cause в консоли\n\t\t\tObject.defineProperty(this, 'cause', {\n\t\t\t\tget: () => cause\n\t\t\t})\t\n\t\t}\n\n\t\tstatic [ Symbol.toPrimitive ]() {\n\t\t\treturn this.toString()\n\t\t}\n\t\t\n\t\tstatic toString() {\n\t\t\treturn $$.$mol_func_name( this )\n\t\t}\n\n\t\tstatic make(\n\t\t\t...params: ConstructorParameters<typeof $mol_error_mix>\n\t\t) {\n\t\t\treturn new this(...params)\n\t\t}\n\t\t\n\t}\n\n}\n","namespace $ {\n\texport function $mol_env() {\n\t\treturn {} as Record< string, string | undefined >\n\t}\n}\n","namespace $ {\n\t$.$mol_env = function $mol_env() {\n\t\treturn this.process.env\n\t}\n}\n","namespace $ {\n\n\texport type $mol_run_error_context = {\n\t\tpid?: number\n\t\tstdout: Buffer | string\n\t\tstderr: Buffer | string\n\t}\n\n\texport class $mol_run_error extends $mol_error_mix<{\n\t\ttimeout_kill?: boolean\n\t\tpid?: number\n\t\tsignal?: NodeJS.Signals | null\n\t\tstatus?: number | null\n\t\tcommand: string\n\t\tdir: string\n\t}> {}\n\n\texport const $mol_run_spawn = (\n\t\t...args: Parameters<typeof $node['child_process']['spawn']>\n\t) => $node['child_process'].spawn(...args)\n\n\texport const $mol_run_spawn_sync = (\n\t\t...args: Parameters<typeof $node['child_process']['spawnSync']>\n\t) => $node['child_process'].spawnSync(...args)\n\n\texport type $mol_run_options = {\n\t\tcommand : readonly string[] | string\n\t\tdir : string\n\t\ttimeout?: number\n\t\tenv?: Record<string, string | undefined>\n\t}\n\n\texport class $mol_run extends $mol_object {\n\n\t\tstatic async_enabled() {\n\t\t\treturn Boolean(this.$.$mol_env()['MOL_RUN_ASYNC'])\n\t\t}\n\n\t\tstatic spawn(options: $mol_run_options) {\n\t\t\tconst sync = ! this.async_enabled() || ! Boolean($mol_wire_auto())\n\t\t\tconst env = options.env ?? this.$.$mol_env()\n\n\t\t\treturn $mol_wire_sync(this).spawn_async( { ...options, sync, env } )\n\t\t}\n\n\t\tstatic spawn_async(\n\t\t\t{ dir, sync, timeout, command, env }: $mol_run_options & { sync?: boolean }\n\t\t) {\n\t\t\tconst args_raw = typeof command === 'string' ? command.split( ' ' ) : command\n\t\t\tconst [ app, ...args ] = args_raw\n\t\t\tconst opts = { shell: true, cwd: dir, env }\n\n\t\t\tconst log_object = {\n\t\t\t\tplace: `${this}.spawn()`,\n\t\t\t\tmessage: 'Run',\n\t\t\t\tcommand: args_raw.join(' ') ,\n\t\t\t\tdir: $node.path.relative( '' , dir ) ,\n\t\t\t}\n\n\t\t\tif (sync) {\n\n\t\t\t\tthis.$.$mol_log3_come({\n\t\t\t\t\thint: 'Run inside fiber',\n\t\t\t\t\t...log_object\n\t\t\t\t})\n\n\t\t\t\tlet error: Error | undefined\n\t\t\t\tlet res\n\n\t\t\t\ttry {\n\t\t\t\t\tres = this.$.$mol_run_spawn_sync(app, args, opts)\n\t\t\t\t\terror = res.error\n\t\t\t\t} catch (err) {\n\t\t\t\t\terror = err as Error\n\t\t\t\t}\n\n\t\t\t\tif (! res || error || res.status) {\n\t\t\t\t\tthrow new $mol_run_error(\n\t\t\t\t\t\tthis.error_message(res),\n\t\t\t\t\t\t{ ...log_object, status: res?.status, signal: res?.signal },\n\t\t\t\t\t\t...(error ? [error] : [])\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\treturn res\n\t\t\t}\n\n\t\t\tlet sub\n\n\t\t\ttry {\n\t\t\t\tsub = this.$.$mol_run_spawn(app, args, {\n\t\t\t\t\t...opts,\n\t\t\t\t\tstdio: [ 'pipe', 'inherit', 'inherit' ],\n\t\t\t\t})\n\t\t\t} catch (error) {\n\t\t\t\tthrow new $mol_run_error(\n\t\t\t\t\tthis.error_message(undefined),\n\t\t\t\t\tlog_object,\n\t\t\t\t\terror as Error\n\t\t\t\t)\n\t\t\t}\n\t\n\t\t\tconst pid = sub.pid ?? 0\n\n\t\t\tthis.$.$mol_log3_come({\n\t\t\t\t...log_object,\n\t\t\t\tpid,\n\t\t\t})\n\t\n\t\t\tlet timeout_kill = false\n\t\t\tlet timer: undefined | ReturnType<typeof setTimeout>\n\t\n\t\t\tconst std_data = [] as Buffer[]\n\t\t\tconst error_data = [] as Buffer[]\n\t\n\t\t\tconst add = (std_chunk?: Buffer, error_chunk?: Buffer) => {\n\t\t\t\tif (std_chunk) std_data.push(std_chunk)\n\t\t\t\tif (error_chunk) error_data.push(error_chunk)\n\t\t\t\tif (! timeout) return\n\t\n\t\t\t\tclearTimeout(timer)\n\t\n\t\t\t\ttimer = setTimeout(() => {\n\t\t\t\t\tconst signal = timeout_kill ? 'SIGKILL' : 'SIGTERM'\n\t\t\t\t\ttimeout_kill = true\n\t\t\t\t\tadd()\n\t\t\t\t\tsub.kill(signal)\n\t\t\t\t}, timeout)\n\t\t\t}\n\t\n\t\t\tadd()\n\t\n\t\t\tsub.stdout?.on('data', data => add(data) )\n\t\t\tsub.stderr?.on('data', data => add(undefined, data) )\n\t\n\t\t\tconst result_promise = new Promise<$mol_run_error_context>((done, fail) => {\n\t\t\t\tconst close = (error: Error | null, status: number | null = null, signal: NodeJS.Signals | null = null) => {\n\t\t\t\t\tif (! timer && timeout) return\n\t\n\t\t\t\t\tclearTimeout(timer)\n\t\t\t\t\ttimer = undefined\n\t\n\t\t\t\t\tconst res = {\n\t\t\t\t\t\tpid,\n\t\t\t\t\t\tsignal,\n\t\t\t\t\t\tget stdout() { return Buffer.concat(std_data) },\n\t\t\t\t\t\tget stderr() { return Buffer.concat(error_data) }\n\t\t\t\t\t}\n\t\t\n\t\t\t\t\tif (error || status || timeout_kill) return fail( new $mol_run_error(\n\t\t\t\t\t\tthis.error_message(res) + (timeout_kill ? ', timeout' : ''),\n\t\t\t\t\t\t{ ...log_object, pid, status, signal, timeout_kill },\n\t\t\t\t\t\t...error ? [ error ] : []\n\t\t\t\t\t) )\n\n\t\t\t\t\tthis.$.$mol_log3_done({\n\t\t\t\t\t\t...log_object,\n\t\t\t\t\t\tpid,\n\t\t\t\t\t})\n\t\t\t\n\t\t\t\t\tdone(res)\n\t\t\t\t}\n\t\n\t\t\t\tsub.on('disconnect', () => close(new Error('Disconnected')) )\n\t\t\t\tsub.on('error', err => close(err) )\n\t\t\t\tsub.on('exit', (status, signal) => close(null, status, signal) )\n\t\t\t})\n\t\n\t\t\treturn Object.assign(result_promise, { destructor: () => {\n\t\t\t\tclearTimeout(timer)\n\t\t\t\tsub.kill('SIGKILL')\n\t\t\t} })\n\t\t}\n\n\t\tstatic error_message(res?: $mol_run_error_context) {\n\t\t\treturn res?.stderr.toString() || res?.stdout.toString() || 'Run error'\n\t\t}\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_exec(\n\t\tthis : $ ,\n\t\tdir : string ,\n\t\tcommand : string ,\n\t\t...args : readonly string[]\n\t) {\n\t\treturn this.$mol_run.spawn( { command: [ command, ...args ], dir } )\n\t}\n}\n","namespace $ {\n\t\n\t$.$mol_dom_context = new $node.jsdom.JSDOM( '' , { url : 'https://localhost/' } ).window as any\n\t\n}\n","namespace $ {\n\tconst TextEncoder = globalThis.TextEncoder ?? $node.util.TextEncoder\n\n\tconst encoder = new TextEncoder()\n\n\texport function $mol_charset_encode(value: string) {\n\t\treturn encoder.encode(value) as Uint8Array< ArrayBuffer >\n\t}\n\n}\n","namespace $ {\n\t\n\texport var $mol_dom = $mol_dom_context\n\t\n}\n","namespace $ {\n\n\texport function $mol_dom_serialize(\n\t\tnode: Node\n\t) {\n\t\tconst serializer = new $mol_dom_context.XMLSerializer\n\t\treturn serializer.serializeToString( node )\n\t}\n\n}\n","namespace $ {\n\t\n\texport type $mol_rest_port_mime_hi =\n\t\t| 'text' | 'application' | 'font'\n\t\t| 'audio' | 'video' | 'image' | 'model'\n\t\n\texport type $mol_rest_port_mime = `${ $mol_rest_port_mime_hi }/${ string }`\n\t\n\texport class $mol_rest_port extends $mol_object {\n\t\t\n\t\tsend_code( code: $mol_rest_code ) {}\n\t\tsend_type( mime: $mol_rest_port_mime ) {}\n\t\t\n\t\t@ $mol_action\n\t\tsend_data( data: null | string | Uint8Array | Element | object ) {\n\t\t\tif( data === null ) return this.send_nil()\n\t\t\tif( typeof data === 'string' ) return this.send_text( data )\n\t\t\tif( data instanceof Uint8Array ) return this.send_bin( data )\n\t\t\tif( data instanceof $mol_dom_context.Element ) return this.send_dom( data )\n\t\t\treturn this.send_json( data )\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tsend_nil() {\n\t\t\tthis.send_code( 204 )\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tsend_bin( data: Uint8Array ) {\n\t\t\tthis.send_code( 200 )\n\t\t\tthis.send_type( 'application/octet-stream' )\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tsend_text( data: string ) {\n\t\t\tthis.send_code( 200 )\n\t\t\tthis.send_type( 'text/plain;charset=utf-8' )\n\t\t\tthis.send_bin( $mol_charset_encode( data ) )\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tsend_json( data: object ) {\n\t\t\tthis.send_code( 200 )\n\t\t\tthis.send_type( 'application/json' )\n\t\t\tthis.send_text( JSON.stringify( data ) )\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tsend_dom( data: Element ) {\n\t\t\tthis.send_code( 200 )\n\t\t\tthis.send_type( 'text/html;charset=utf-8' )\n\t\t\tthis.send_text( $mol_dom_serialize( data ) )\n\t\t}\n\t\t\n\t\t@ $mol_action< any, any >\n\t\tpublic static make< This extends typeof $mol_object >(\n\t\t\tthis: This,\n\t\t\tconfig: Partial< InstanceType< This > >,\n\t\t) {\n\t\t\treturn super.make( config ) as InstanceType< This >\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\n\t/** Generates unique identifier. */\n\texport function $mol_guid(\n\t\tlength = 8,\n\t\texists: ( id: string )=> boolean = ()=> false,\n\t) {\n\n\t\tfor(;;) {\n\n\t\t\tlet id = Math.random().toString( 36 ).substring( 2, length + 2 ).toUpperCase()\n\t\t\tif( exists( id ) ) continue\n\t\t\t\n\t\t\treturn id\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\t\n\texport const $mol_key_store = new WeakMap< object, string >()\n\t\n\tconst TypedArray = Object.getPrototypeOf( Uint8Array )\n\n\t/** Returns string key for any value. */\n\texport function $mol_key< Value >( value : Value ) : string {\n\t\t\n\t\tif( typeof value === 'bigint' ) return value.toString() + 'n'\n\t\tif( typeof value === 'symbol' ) return value.description!\n\t\tif( !value ) return JSON.stringify( value )\n\t\tif( typeof value !== 'object' && typeof value !== 'function' ) return JSON.stringify( value )\n\t\t\n\t\treturn JSON.stringify( value, ( field, value )=> {\n\t\t\t\n\t\t\tif( typeof value === 'bigint' ) return value.toString() + 'n'\n\t\t\tif( typeof value === 'symbol' ) return value.description\n\t\t\tif( !value ) return value\n\t\t\tif( typeof value !== 'object' && typeof value !== 'function' ) return value\n\t\t\tif( Array.isArray( value ) ) return value\n\t\t\t\n\t\t\tconst proto = Reflect.getPrototypeOf( value )\n\t\t\tif( !proto ) return value\n\t\t\tif( Reflect.getPrototypeOf( proto ) === null ) return value\n\t\t\t\n\t\t\tif( 'toJSON' in value ) return value\n\t\t\tif( value instanceof RegExp ) return value.toString()\n\t\t\t// if( value instanceof DataView ) return [ ... new Uint8Array( value.buffer ) ]\n\t\t\tif( value instanceof TypedArray ) return [ ... value as any ]\n\t\t\t\n\t\t\tlet key = $mol_key_store.get( value )\n\t\t\tif( key ) return key\n\t\t\t\n\t\t\tkey = $mol_guid()\n\t\t\t$mol_key_store.set( value, key )\n\t\t\t\n\t\t\treturn key\n\t\t} )\n\n\t}\n\t\n}\n","namespace $ {\n\n\texport class $mol_after_timeout extends $mol_object2 {\n\n\t\tid : any\n\n\t\tconstructor(\n\t\t\tpublic delay : number ,\n\t\t\tpublic task : ()=> void ,\n\t\t) {\n\t\t\tsuper()\n\t\t\tthis.id = setTimeout( task , delay )\n\t\t}\n\n\t\tdestructor() {\n\t\t\tclearTimeout( this.id )\n\t\t}\n\n\t}\n\t\n}\n","namespace $ {\n\n\texport class $mol_after_frame extends $mol_after_timeout {\n\n\t\tconstructor(\n\t\t\tpublic task : ()=> void ,\n\t\t) {\n\t\t\tsuper( 16 , task )\n\t\t}\n\n\t}\n\t\n}\n","namespace $ {\n\n\t/** Long-living fiber. */\n\texport class $mol_wire_atom<\n\t\tHost,\n\t\tArgs extends readonly unknown[],\n\t\tResult,\n\t> extends $mol_wire_fiber< Host, Args, Result > {\n\n\t\tstatic solo<\n\t\t\tHost,\n\t\t\tArgs extends readonly unknown[],\n\t\t\tResult,\n\t\t>(\n\t\t\thost: Host,\n\t\t\ttask: ( this: Host, ... args: Args )=> Result,\n\t\t): $mol_wire_atom< Host, Args, Result > {\n\t\t\t\n\t\t\tconst field = task.name + '()'\n\t\t\t\n\t\t\tconst existen = Object.getOwnPropertyDescriptor( host ?? task, field )?.value\n\t\t\tif( existen ) return existen\n\t\t\t\n\t\t\tconst prefix = (host as any)?.[ Symbol.toStringTag ] ?? ( host instanceof Function ? $$.$mol_func_name( host ) : host )\n\t\t\tconst key = prefix + ( '.' + task.name + '<>' )\n\t\t\t\n\t\t\tconst fiber = new $mol_wire_atom( key, task, host, [] as any as Args )\n\t\t\t;( host as any ?? task )[ field ] = fiber\n\t\t\t\n\t\t\treturn fiber\n\t\t}\n\t\t\n\t\tstatic plex<\n\t\t\tHost,\n\t\t\tArgs extends readonly unknown[],\n\t\t\tResult,\n\t\t>(\n\t\t\thost: Host,\n\t\t\ttask: ( this: Host , ... args: Args )=> Result,\n\t\t\tkey: Args[0],\n\t\t): $mol_wire_atom< Host, Args, Result > {\n\t\t\t\n\t\t\tconst field = task.name + '()'\n\t\t\tlet dict = Object.getOwnPropertyDescriptor( host ?? task, field )?.value\n\t\t\tconst prefix = (host as any)?.[ Symbol.toStringTag ] ?? ( host instanceof Function ? $$.$mol_func_name( host ) : host )\n\t\t\tconst key_str = $mol_key( key )\n\t\t\t\n\t\t\tif( dict ) {\n\t\t\t\tconst existen = dict.get( key_str )\n\t\t\t\tif( existen ) return existen\n\t\t\t} else {\n\t\t\t\tdict = ( host as any ?? task )[ field ] = new Map<any,any>()\n\t\t\t}\n\t\t\t\n\t\t\tconst id = prefix + ( '.' + task.name ) + ( '<' + key_str.replace( /^\"|\"$/g, \"'\" ) + '>' )\n\t\t\tconst fiber = new $mol_wire_atom( id, task, host, [ key ] as any as Args )\n\t\t\tdict.set( key_str, fiber )\n\t\t\t\n\t\t\treturn fiber\n\t\t}\n\t\t\n\t\tstatic watching = new Set< $mol_wire_atom< any, any, any > >()\n\t\tstatic watcher = null as $mol_after_frame | null\n\t\t\n\t\tstatic watch() {\n\t\t\n\t\t\t$mol_wire_atom.watcher = new $mol_after_frame( $mol_wire_atom.watch )\n\t\t\t\n\t\t\tfor( const atom of $mol_wire_atom.watching ) {\n\t\t\t\t\n\t\t\t\tif( atom.cursor === $mol_wire_cursor.final ) {\n\t\t\t\t\t$mol_wire_atom.watching.delete( atom )\n\t\t\t\t} else {\n\t\t\t\t\tatom.cursor = $mol_wire_cursor.stale\n\t\t\t\t\tatom.fresh()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\twatch() {\n\t\t\t\n\t\t\tif( !$mol_wire_atom.watcher ) {\n\t\t\t\t$mol_wire_atom.watcher = new $mol_after_frame( $mol_wire_atom.watch )\n\t\t\t}\n\t\t\t\n\t\t\t$mol_wire_atom.watching.add( this )\n\t\t\t\n\t\t}\n\t\t\n\t\t/**\n\t\t * Update fiber value through another temp fiber.\n\t\t */\n\t\t@ $mol_wire_method\n\t\tresync( args: Args ) {\n\t\t\treturn this.put( this.task.call( this.host!, ... args ) )\n\t\t}\n\t\t\n\t\t@ $mol_wire_method\n\t\tonce() {\n\t\t\treturn this.sync()\n\t\t}\n\t\t\n\t\tchannel() {\n\t\t\treturn Object.assign( ( next?: $mol_type_foot< Args > )=> {\n\t\t\t\t\t\n\t\t\t\tif( next !== undefined ) return this.resync( [ ... this.args, next ] as any ) as never\n\t\t\t\tif( !$mol_wire_fiber.warm ) return this.result() as never\n\t\t\t\t\n\t\t\t\tif( $mol_wire_auto()?.temp ) {\n\t\t\t\t\treturn this.once()\n\t\t\t\t} else {\n\t\t\t\t\treturn this.sync()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}, { atom: this as $mol_wire_atom< Host, Args, Result > } )\n\t\t}\n\t\t\n\t\tdestructor() {\n\t\t\t\n\t\t\tsuper.destructor()\n\t\t\t\n\t\t\tif( this.pub_from === 0 ) {\n\t\t\t\t;( this.host as any ?? this.task )[ this.field() ] = null\n\t\t\t} else {\n\t\t\t\t;( this.host as any ?? this.task )[ this.field() ].delete( $mol_key( this.args[0] ) )\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\tput( next: Result | Error | Promise< Result | Error > ) {\n\t\t\t\n\t\t\tconst prev = this.cache\n\t\t\t\n\t\t\tupdate: if( next !== prev ) {\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\tif( $mol_compare_deep( prev, next ) ) break update\n\t\t\t\t} catch( error: any ) {\n\t\t\t\t\t$mol_fail_log( error )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( $mol_owning_check( this, prev ) ) {\n\t\t\t\t\tprev.destructor()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( $mol_owning_catch( this, next ) ) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t(next as any)[ Symbol.toStringTag ] = (this as any)[ Symbol.toStringTag ]\n\t\t\t\t\t} catch { // Promises throw in strict mode\n\t\t\t\t\t\tObject.defineProperty( next, Symbol.toStringTag, { value: (this as any)[ Symbol.toStringTag ] } )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( !this.sub_empty ) this.emit()\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tthis.cache = next\n\t\t\tthis.cursor = $mol_wire_cursor.fresh\n\t\t\t\n\t\t\tif( $mol_promise_like( next ) ) return next\n\t\t\t\n\t\t\tthis.complete_pubs()\n\t\t\t\n\t\t\treturn next\n\t\t}\n\t\t\n\t}\n}\n","namespace $ {\n\t\n\t/** Decorates solo object channel to [mol_wire_atom](../atom/atom.ts). */\n\texport function $mol_wire_solo< Args extends any[] >(\n\t\thost: object,\n\t\tfield: string,\n\t\tdescr?: TypedPropertyDescriptor< ( ... args: Args )=> any >\n\t) {\n\n\t\tif( !descr ) descr = Reflect.getOwnPropertyDescriptor( host , field )\n\t\tconst orig = descr?.value! ?? (host as any)[ field ]\n\t\t\n\t\tconst sup = Reflect.getPrototypeOf( host )!\n\t\tif( typeof (sup as any)[ field ] === 'function' ) {\n\t\t\tObject.defineProperty( orig , 'name' , { value : (sup as any)[ field ].name } )\n\t\t}\n\t\t\n\t\tconst descr2 = {\n\t\t\t... descr,\n\t\t\tvalue: function( this: typeof host, ... args: Args ){\n\t\t\t\n\t\t\t\tlet atom = $mol_wire_atom.solo( this, orig )\n\t\t\t\t\n\t\t\t\tif(( args.length === 0 )||( args[0] === undefined )) {\n\t\t\t\t\t\n\t\t\t\t\tif( !$mol_wire_fiber.warm ) return atom.result()\n\t\t\t\t\t\n\t\t\t\t\tif( $mol_wire_auto()?.temp ) {\n\t\t\t\t\t\treturn atom.once()\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn atom.sync()\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn atom.resync( args )\t\n\t\t\t}\n\t\t}\n\t\t\n\t\tReflect.defineProperty( descr2.value , 'name' , { value : orig.name + ' ' } )\n\t\tReflect.defineProperty( descr2.value , 'length' , { value : orig.length } )\n\t\tObject.assign( descr2.value, { orig } )\n\t\t\n\t\tReflect.defineProperty( host, field, descr2 )\n\t\t\n\t\treturn descr2 as any as TypedPropertyDescriptor< ( ... args: First_optional< Args > )=> any >\n\t}\n\n\ttype First_optional< Args extends any[] > =  Args extends []\n\t\t? []\n\t\t: [ Args[0] | undefined, ... $mol_type_tail< Args > ]\n\n}\n","namespace $ {\n\t\n\t/** Reactive memoizing multiplexed property decorator. */\n\texport function $mol_wire_plex< Args extends [ any, ... any[] ] >(\n\t\thost: object,\n\t\tfield: string,\n\t\tdescr?: TypedPropertyDescriptor< ( ... args: Args )=> any >\n\t) {\n\n\t\tif( !descr ) descr = Reflect.getOwnPropertyDescriptor( host , field )\n\t\tconst orig = descr?.value! ?? (host as any)[ field ]\n\t\t\n\t\tconst sup = Reflect.getPrototypeOf( host )!\n\t\tif( typeof (sup as any)[ field ] === 'function' ) {\n\t\t\tObject.defineProperty( orig , 'name' , { value : (sup as any)[ field ].name } )\n\t\t}\n\t\t\n\t\tconst descr2 = {\n\t\t\t... descr,\n\t\t\tvalue: function( this: typeof host, ... args: Args ) {\n\t\t\t\n\t\t\t\tlet atom = $mol_wire_atom.plex( this, orig, args[0] )\n\t\t\t\t\n\t\t\t\tif(( args.length === 1 )||( args[1] === undefined )) {\n\t\t\t\t\t\n\t\t\t\t\tif( !$mol_wire_fiber.warm ) return atom.result()\n\t\t\t\t\t\n\t\t\t\t\tif( $mol_wire_auto()?.temp ) {\n\t\t\t\t\t\treturn atom.once()\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn atom.sync()\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn atom.resync( args )\t\n\t\t\t}\n\t\t}\n\t\t\n\t\tReflect.defineProperty( descr2.value , 'name' , { value : orig.name + ' ' } )\n\t\tReflect.defineProperty( descr2.value , 'length' , { value : orig.length } )\n\t\tObject.assign( descr2.value, { orig } )\n\t\t\n\t\tReflect.defineProperty( host, field, descr2 )\n\t\t\n\t\treturn descr2\n\t}\n\t\n}\n","namespace $ {\n\n\t/**\n\t * Reactive memoizing solo property decorator from [mol_wire](../wire/README.md)\n\t * @example\n\t * '@' $mol_mem\n\t * name(next?: string) {\n\t * \treturn next ?? 'default'\n\t * }\n\t * @see https://mol.hyoo.ru/#!section=docs/=qxmh6t_sinbmb\n\t */\n\texport let $mol_mem = $mol_wire_solo\n\n\t/**\n\t * Reactive memoizing multiplexed property decorator [mol_wire](../wire/README.md)\n\t * @example\n\t * '@' $mol_mem_key\n\t * name(id: number, next?: string) {\n\t *  return next ?? 'default'\n\t * }\n\t * @see https://mol.hyoo.ru/#!section=docs/=qxmh6t_sinbmb\n\t */\n\texport let $mol_mem_key = $mol_wire_plex\n}\n","namespace $ {\n\n\tconst decoders = {} as { [ key in $mol_charset_encoding ]?: TextDecoder }\n\n\texport function $mol_charset_decode(\n\t\tbuffer: BufferSource,\n\t\tencoding: $mol_charset_encoding = 'utf8',\n\t) {\n\t\t\n\t\tlet decoder = decoders[ encoding ]\n\t\tif( !decoder ) decoder = decoders[ encoding ] = new TextDecoder( encoding )\n\t\t\n\t\treturn decoder.decode( buffer )\n\t}\n\n}\n","namespace $ { \n\t/**\n\t * Returns closure that returns constant value.\n\t * @example\n\t * const rnd = $mol_const( Math.random() )\n\t */\n\texport function $mol_const< Value >( value : Value ) {\n\t\tconst getter = <{ () : Value , '()' : Value }> ( () => value )\n\t\tgetter['()'] = value\n\t\t;(getter as any)[ Symbol.toStringTag ] = value\n\t\t;(getter as any )[ $mol_dev_format_head ] = ()=> $mol_dev_format_span( {} , '()=> ', $mol_dev_format_auto( value ) )\n\t\treturn getter\n\t}\n}\n","namespace $ {\n\t\n\texport class $mol_rest_message extends $mol_object {\n\t\t\n\t\tport!: $mol_rest_port\n\t\t\n\t\t@ $mol_mem\n\t\tmethod() {\n\t\t\treturn 'POST'\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\turi() {\n\t\t\treturn new URL( `rest://localhost/` )\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\ttype() {\n\t\t\treturn 'application/octet-stream' as $mol_rest_port_mime\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tdata(): null | string | Uint8Array< ArrayBuffer > | Element | object {\n\t\t\treturn null\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tbin() {\n\t\t\tlet data = this.data()\n\t\t\tif( data instanceof Uint8Array ) return data\n\t\t\tif( data instanceof $mol_dom_context.Element ) data = $mol_dom_serialize( data )\n\t\t\tif( typeof data !== 'string' ) data = JSON.stringify( data )\n\t\t\treturn $mol_charset_encode( data )\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\ttext() {\n\t\t\tconst data = this.data()\n\t\t\tif( typeof data === 'string' ) return data\n\t\t\tif( data instanceof Uint8Array ) return $mol_charset_decode( data )\n\t\t\tif( data instanceof $mol_dom_context.Element ) return $mol_dom_serialize( data )\n\t\t\treturn JSON.stringify( data )\n\t\t}\n\t\t\n\t\treply(\n\t\t\tdata: null | string | Uint8Array< ArrayBuffer > | Element | object,\n\t\t\tmeta?: {\n\t\t\t\ttype?: $mol_rest_port_mime,\n\t\t\t\tcode?: $mol_rest_code,\n\t\t\t},\n\t\t) {\n\t\t\tif( meta?.code ) this.port.send_code( meta.code )\n\t\t\tif( meta?.type ) this.port.send_type( meta.type )\n\t\t\tthis.port.send_data( data )\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\troute( uri: URL ) {\n\t\t\treturn $mol_rest_message.make({\n\t\t\t\tport: this.port,\n\t\t\t\tmethod: ()=> this.method(),\n\t\t\t\turi: $mol_const( uri ),\n\t\t\t\ttype: ()=> this.type(),\n\t\t\t\tdata: ()=> this.data(),\n\t\t\t})\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tderive(\n\t\t\tmethod: string,\n\t\t\tdata: null | string | Uint8Array< ArrayBuffer > | Element | object,\n\t\t) {\n\t\t\treturn $mol_rest_message.make({\n\t\t\t\tport: this.port,\n\t\t\t\tmethod: $mol_const( method ),\n\t\t\t\turi: ()=> this.uri(),\n\t\t\t\tdata: $mol_const( data ),\n\t\t\t})\n\t\t}\n\t\t\n\t\t@ $mol_action< any, any >\n\t\tpublic static make< This extends typeof $mol_object >(\n\t\t\tthis: This,\n\t\t\tconfig: Partial< InstanceType< This > >,\n\t\t) {\n\t\t\treturn super.make( config ) as InstanceType< This >\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport class $mol_rest_port_webrtc extends $mol_rest_port {\n\t\t\n\t\tchannel!: RTCDataChannel\n\t\t\n\t\t@ $mol_action\n\t\tsend_bin( data: Uint8Array ) {\n\t\t\tif( this.channel.readyState !== \"open\" ) return\n\t\t\tthis.channel.send( data )\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tsend_text( data: string ) {\n\t\t\tif( this.channel.readyState !== \"open\" ) return\n\t\t\tthis.channel.send( data )\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\t/** Convert a pseudo-synchronous (Suspense API) API to an explicit asynchronous one (for integrating with external systems). */\n\texport function $mol_wire_async< Host extends object >( obj: Host ) {\n\t\t\n\t\tlet fiber: $mol_wire_fiber< any, any, any >\n\t\tconst temp = $mol_wire_task.getter( obj as ( ... args: any[] )=> any )\n\t\t\n\t\treturn new Proxy( obj, {\n\t\t\t\n\t\t\tget( obj, field ) {\n\t\t\t\t\n\t\t\t\tconst val = (obj as any)[ field ]\n\t\t\t\tif( typeof val !== 'function' ) return val\n\t\t\t\t\n\t\t\t\tlet fiber: $mol_wire_fiber< any, any, any >\n\t\t\t\tconst temp = $mol_wire_task.getter( val ) \n\t\t\t\t\n\t\t\t\treturn function $mol_wire_async( this: Host, ... args: any[] ) {\n\t\t\t\t\tfiber?.destructor()\n\t\t\t\t\tfiber = temp( obj, args )\n\t\t\t\t\treturn fiber.async()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t},\n\t\t\t\n\t\t\tapply( obj, self, args ) {\n\t\t\t\tfiber?.destructor()\n\t\t\t\tfiber = temp( self, args )\n\t\t\t\treturn fiber.async()\n\t\t\t},\n\t\t\t\n\t\t} )  as unknown as ObjectOrFunctionResultPromisify<Host>\n\t\t\n\t}\n\n\ttype FunctionResultPromisify<Some> = Some extends (...args: infer Args) => infer Res\n\t\t? Res extends PromiseLike<unknown> ? Some : (...args: Args) => Promise<Res>\n\t\t: Some\n\n\ttype MethodsResultPromisify<Host extends Object> = {\n\t\t[K in keyof Host]: FunctionResultPromisify<Host[K]>\n\t}\n\n\ttype ObjectOrFunctionResultPromisify<Some> = (\n\t\tSome extends (...args: any) => unknown ? FunctionResultPromisify<Some> : {}\n\t) & ( Some extends Object ? MethodsResultPromisify<Some> : Some )\n\n}\n","namespace $ {\n\n\t/** State of arguments like `foo=bar xxx` */\n\texport class $mol_state_arg extends $mol_object {\n\t\t\n\t\tstatic prolog = ''\n\t\tstatic separator = ' '\n\t\t\n\t\t@ $mol_mem\n\t\tstatic href( next? : string ) {\n\t\t\treturn next || process.argv.slice( 2 ).join( ' ' )\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tstatic href_normal() {\n\t\t\treturn this.link({})\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tstatic dict( next? : { [ key : string ] : string | null } ) {\n\t\t\tif( next !== void 0 ) this.href( this.make_link( next ) )\n\t\t\t\n\t\t\tvar href = this.href()\n\t\t\tvar chunks = href.split( ' ' )\n\t\t\t\n\t\t\tvar params : { [ key : string ] : string } = {}\n\t\t\tchunks.forEach(\n\t\t\t\tchunk => {\n\t\t\t\t\tif( !chunk ) return\n\t\t\t\t\tvar vals = chunk.split( '=' ).map( decodeURIComponent )\n\t\t\t\t\tparams[ vals.shift()! ] = vals.join('=')\n\t\t\t\t}\n\t\t\t)\n\t\t\t\n\t\t\treturn params as Readonly< typeof params >\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tstatic value( key : string , next? : string | null ) {\n\t\t\tif( next === void 0 ) return this.dict()[ key ] ?? null\n\t\t\tthis.href( this.link( { [ key ] : next } ) )\n\t\t\treturn next\n\t\t}\n\t\t\n\t\tstatic link( next : Record<string, string | null> ) {\n\t\t\tconst params : Record<string, string | null> = {}\n\t\t\t\n\t\t\tvar prev = this.dict()\n\t\t\tfor( var key in prev ) {\n\t\t\t\tparams[ key ] = prev[ key ]\n\t\t\t}\n\t\t\t\n\t\t\tfor( var key in next ) {\n\t\t\t\tparams[ key ] = next[ key ]\n\t\t\t}\n\t\t\t\n\t\t\treturn this.make_link( params )\n\t\t}\n\t\t\n\t\tstatic make_link( next : Record<string, string | null>) {\n\t\t\tconst chunks : string[] = []\n\t\t\tfor( const key in next ) {\n\t\t\t\tif( next[ key ] !== null ) {\n\t\t\t\t\tchunks.push([key, next[key]!].map(encodeURIComponent).join('='))\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn chunks.join( ' ' )\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tstatic go( next : { [ key : string ] : string | null } ) {\n\t\t\tthis.href( this.link( next ) )\n\t\t}\n\t\t\n\t\tstatic commit() {}\n\t\t\n\t\tconstructor( public prefix = '' ) {\n\t\t\tsuper()\n\t\t}\n\t\t\n\t\tvalue( key : string , next? : string ) {\n\t\t\treturn ( this.constructor as typeof $mol_state_arg ).value( this.prefix + key , next )\n\t\t}\n\t\t\n\t\tsub( postfix : string ) {\n\t\t\treturn new ( this.constructor as typeof $mol_state_arg )( this.prefix + postfix + '.' )\n\t\t}\n\t\t\n\t\tlink( next : Record<string, string | null> ) {\n\t\t\tconst prefix = this.prefix\n\t\t\tconst dict : Record<string, string | null> = {}\n\t\t\tfor( var key in next ) {\n\t\t\t\tdict[ prefix + key ] = next[ key ]\n\t\t\t}\n\t\t\treturn ( this.constructor as typeof $mol_state_arg ).link( dict )\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\tconst makeURL = $mol_wire_sync( ( url: string | URL, base?: string | URL )=> new URL( url, base ))\n\t\n\texport class $mol_rest_resource extends $mol_object {\n\t\t\n\t\t@ $mol_action\n\t\tREQUEST( msg: $mol_rest_message ) {\n\t\t\t\n\t\t\tconst [ path, nest, tail ] = /^\\/([a-zA-Z][^/]*)(.*)$/.exec( msg.uri().pathname ) ?? []\n\t\t\tconst field = nest?.toLowerCase()\n\t\t\t\n\t\t\tif( field && field in this && !( field in $mol_rest_resource.prototype ) ) {\n\t\t\t\t\n\t\t\t\tconst uri2 = makeURL( msg.uri().toString() )\n\t\t\t\turi2.pathname = tail ?? msg.uri().pathname\n\t\t\t\tconst msg2 = msg.route( uri2 )\n\t\t\t\t\n\t\t\t\treturn ( this[ field as keyof typeof this ] as any )().REQUEST( msg2 )\n\t\t\t}\n\t\t\t\n\t\t\treturn ( $mol_wire_sync( this )[ msg.method() as never ] as any )( msg )\n\t\t}\n\t\t\n\t\tasync OPTIONS( msg: $mol_rest_message ) {\n\t\t\t\n\t\t\tif( msg.type() !== 'application/sdp' ) return msg.reply( null )\n\t\t\t\n\t\t\tconst { RTCPeerConnection } = await import( 'node-datachannel/polyfill' )\n\t\t\tconst connection = new RTCPeerConnection\n\t\t\t\n\t\t\tconst channel = connection.createDataChannel( msg.uri().toString(), { negotiated: true, id: 0 } )\n\t\t\tconst port = $mol_rest_port_webrtc.make({ channel })\n\t\t\t\n\t\t\t$mol_wire_sync( this.$ ).$mol_log3_come({\n\t\t\t\tplace: this,\n\t\t\t\tmessage: 'OPEN',\n\t\t\t\turl: msg.uri(),\n\t\t\t\tport: $mol_key( port ),\n\t\t\t})\n\t\t\t\n\t\t\t$mol_wire_sync( this ).REQUEST(\n\t\t\t\tmsg.derive( 'OPEN', null )\n\t\t\t)\n\t\t\t\n\t\t\tchannel.onmessage = event => {\n\t\t\t\t\n\t\t\t\tconst message = msg.derive( 'POST', event.data )\n\t\t\t\tmessage.port = port\n\t\t\t\t\n\t\t\t\tthis.$.$mol_log3_rise({\n\t\t\t\t\tplace: this,\n\t\t\t\t\tmessage: message.method(),\n\t\t\t\t\turl: message.uri(),\n\t\t\t\t\tport: $mol_key( port ),\n\t\t\t\t})\n\n\t\t\t\t$mol_wire_async( this ).POST( message )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tchannel.onclose = ()=> {\n\t\t\t\t\n\t\t\t\tthis.$.$mol_log3_done({\n\t\t\t\t\tplace: this,\n\t\t\t\t\tmessage: 'CLOSE',\n\t\t\t\t\turl: msg.uri(),\n\t\t\t\t\tport: $mol_key( port ),\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\t$mol_wire_sync( this ).REQUEST(\n\t\t\t\t\tmsg.derive( 'CLOSE', null )\n\t\t\t\t)\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tconst sdp = await $mol_wire_async( msg ).text()\n\t\t\tawait connection.setRemoteDescription({ sdp, type: 'offer' })\n\t\t\t\n\t\t\tconnection.setLocalDescription({ type: 'answer' })\n\t\t\tawait new Promise( done => connection.onicecandidate = ({ candidate })=> done( candidate ) )\n\t\t\t\n\t\t\tmsg.port.send_type( 'application/sdp' )\n\t\t\tmsg.port.send_text( connection.localDescription!.sdp )\n\t\t\t\n\t\t}\n\t\t\n\t\tOPEN( msg: $mol_rest_message ) {}\n\t\tCLOSE( msg: $mol_rest_message ) {}\n\t\tHEAD( msg: $mol_rest_message ) {}\n\t\tGET( msg: $mol_rest_message ) {}\n\t\tPUT( msg: $mol_rest_message ) {}\n\t\tPATCH( msg: $mol_rest_message ) {}\n\t\tPOST( msg: $mol_rest_message ) {}\n\t\tDELETE( msg: $mol_rest_message ) {}\n\t\t\n\t\t_auto() {}\n\t\t\n\t\t@ $mol_mem_key\n\t\tstatic port( port: number ) {\n\t\t\t\n\t\t\tconst server = $mol_rest_server.make({\n\t\t\t\tport: ()=> port,\n\t\t\t})\n\t\t\t\n\t\t\tserver.root( this.make({}) )\n\t\t\tserver.start()\n\t\t\tnew $mol_wire_atom( `${ server.root() }._auto<>`, ()=> {\n\t\t\t\ttry {\n\t\t\t\t\tserver.root()._auto()\n\t\t\t\t} catch( error ) {\n\t\t\t\t\t$mol_fail_log( error )\n\t\t\t\t}\n\t\t\t} ).fresh()\n\t\t\t\n\t\t\treturn server\n\t\t}\n\t\t\n\t\tstatic serve() {\n\t\t\tconst port = Number( this.$.$mol_state_arg.value( 'port' ) )\n\t\t\treturn port ? this.port( port ) : null\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\n\texport function $mol_dom_render_children (\n\t\tel : Element | DocumentFragment ,\n\t\tchildNodes : NodeList | Array< Node | string | null >\n\t) {\n\t\tconst node_set = new Set< Node | string | null >( childNodes )\n\t\t\n\t\tlet nextNode : Node | null = el.firstChild\n\t\tfor( let view of childNodes ) {\n\n\t\t\tif( view == null ) continue\n\n\t\t\tif( view instanceof $mol_dom_context.Node ) {\n\t\t\t\t\n\t\t\t\twhile( true ) {\n\t\t\t\t\tif( !nextNode ) {\n\t\t\t\t\t\tel.appendChild( view )\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tif( nextNode == view ) {\n\t\t\t\t\t\tnextNode = nextNode.nextSibling\n\t\t\t\t\t\tbreak\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif( node_set.has( nextNode ) ) {\n\t\t\t\t\t\t\tel.insertBefore( view , nextNode )\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst nn = nextNode.nextSibling\n\t\t\t\t\t\t\tel.removeChild( nextNode )\n\t\t\t\t\t\t\tnextNode = nn\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tif( nextNode && nextNode.nodeName === '#text' ) {\n\t\t\t\t\tconst str = String( view )\n\t\t\t\t\tif( nextNode.nodeValue !== str ) nextNode.nodeValue = str\n\t\t\t\t\tnextNode = nextNode.nextSibling\n\t\t\t\t} else {\n\t\t\t\t\tconst textNode = $mol_dom_context.document.createTextNode( String( view ) )\n\t\t\t\t\tel.insertBefore( textNode , nextNode )\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\twhile( nextNode ) {\n\t\t\tconst currNode = nextNode\n\t\t\tnextNode = currNode.nextSibling\n\t\t\tel.removeChild( currNode )\n\t\t}\n\t}\n\n}\n","namespace $ {\n\n\texport let $mol_jsx_prefix = ''\n\texport let $mol_jsx_crumbs = ''\n\n\texport let $mol_jsx_booked = null as null | Set< string >\n\t\n\texport let $mol_jsx_document : $mol_jsx.JSX.ElementClass['ownerDocument'] = {\n\t\tgetElementById : ()=> null ,\n\t\tcreateElementNS : ( space: string, name : string )=> $mol_dom_context.document.createElementNS( space, name ) as any,\n\t\tcreateDocumentFragment : ()=> $mol_dom_context.document.createDocumentFragment(),\n\t}\n\t\n\texport const $mol_jsx_frag = ''\n\n\t/**\n\t * JSX adapter that makes DOM tree.\n\t * Generates global unique ids for every DOM-element by components tree with ids.\n\t * Ensures all local ids are unique.\n\t * Can reuse an existing nodes by GUIDs when used inside [`mol_jsx_attach`](https://github.com/hyoo-ru/mam_mol/tree/master/jsx/attach).\n\t */\n\texport function $mol_jsx<\n\t\tProps extends $mol_jsx.JSX.IntrinsicAttributes,\n\t\tChildren extends Array< Node | string >\n\t>(\n\t\tElem : string\n\t\t\t| ( ( props : Props , ... children : Children ) => Element ) ,\n\t\tprops : Props ,\n\t\t... childNodes : Children\n\t) : Element | DocumentFragment {\n\n\t\tconst id = props && props.id || ''\n\t\tconst guid = id ? $mol_jsx_prefix ? $mol_jsx_prefix + '/'+ id : id : $mol_jsx_prefix\n\t\tconst crumbs_self = id ? $mol_jsx_crumbs.replace( /(\\S+)/g, `$1_${ id.replace( /\\/.*/i, '' ) }` ) : $mol_jsx_crumbs\n\t\t\n\t\tif( Elem && $mol_jsx_booked ) {\n\t\t\tif( $mol_jsx_booked.has( id ) ) {\n\t\t\t\t$mol_fail( new Error( `JSX already has tag with id ${ JSON.stringify( guid ) }` ) )\n\t\t\t} else {\n\t\t\t\t$mol_jsx_booked.add( id )\n\t\t\t}\n\t\t}\n\n\t\tlet node: Element | DocumentFragment | null = guid ? $mol_jsx_document.getElementById( guid ) : null\n\n\t\tif( $mol_jsx_prefix ) {\n\t\t\t\n\t\t\tconst prefix_ext = $mol_jsx_prefix\n\t\t\tconst booked_ext = $mol_jsx_booked\n\t\t\tconst crumbs_ext = $mol_jsx_crumbs\n\t\t\t\n\t\t\tfor( const field in props ) {\n\t\t\t\t\n\t\t\t\tconst func = props[ field ]\n\t\t\t\tif( typeof func !== 'function' ) continue\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tconst wrapper = function( this: any, ... args: any[] ) {\n\t\t\t\t\t\n\t\t\t\t\tconst prefix = $mol_jsx_prefix\n\t\t\t\t\tconst booked = $mol_jsx_booked\n\t\t\t\t\tconst crumbs = $mol_jsx_crumbs\n\t\t\t\t\t\n\t\t\t\t\ttry {\n\t\t\n\t\t\t\t\t\t$mol_jsx_prefix = prefix_ext\n\t\t\t\t\t\t$mol_jsx_booked = booked_ext\n\t\t\t\t\t\t$mol_jsx_crumbs = crumbs_ext\n\t\t\t\t\t\t\n\t\t\t\t\t\treturn func.call( this, ... args )\n\t\t\t\t\t\t\n\t\t\t\t\t} finally {\n\t\t\t\t\t\t\n\t\t\t\t\t\t$mol_jsx_prefix = prefix\n\t\t\t\t\t\t$mol_jsx_booked = booked\n\t\t\t\t\t\t$mol_jsx_crumbs = crumbs\n\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t$mol_func_name_from( wrapper, func )\n\t\t\t\tprops[ field ] = wrapper as any\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tif( typeof Elem !== 'string' ) {\n\n\t\t\tif( 'prototype' in Elem ) {\n\n\t\t\t\tconst view = node && (node as any)[ String(Elem) ] || new ( Elem as any )\n\t\t\t\t\n\t\t\t\tObject.assign( view , props )\n\t\t\t\tview[ Symbol.toStringTag ] = guid\n\t\t\t\t\n\t\t\t\tview.childNodes = childNodes\n\t\t\t\t\n\t\t\t\tif( !view.ownerDocument ) view.ownerDocument = $mol_jsx_document\n\t\t\t\tview.className = ( crumbs_self ? crumbs_self + ' ' : '' ) + ( Elem['name'] || Elem )\n\t\t\t\t\n\t\t\t\tnode = view.valueOf()\n\t\t\t\t\n\t\t\t\t;(node as any)![ String(Elem) ] = view\n\t\t\t\t\n\t\t\t\treturn node!\n\n\t\t\t} else {\n\n\t\t\t\tconst prefix = $mol_jsx_prefix\n\t\t\t\tconst booked = $mol_jsx_booked\n\t\t\t\tconst crumbs = $mol_jsx_crumbs\n\t\t\t\t\n\t\t\t\ttry {\n\t\n\t\t\t\t\t$mol_jsx_prefix = guid\n\t\t\t\t\t$mol_jsx_booked = new Set\n\t\t\t\t\t$mol_jsx_crumbs = ( crumbs_self ? crumbs_self + ' ' : '' ) + ( Elem['name'] || Elem )\n\t\n\t\t\t\t\treturn ( Elem as any )( props , ... childNodes )\n\t\t\t\t\t\n\t\t\t\t} finally {\n\n\t\t\t\t\t$mol_jsx_prefix = prefix\n\t\t\t\t\t$mol_jsx_booked = booked\n\t\t\t\t\t$mol_jsx_crumbs = crumbs\n\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t}\n\n\t\tif( !node ) {\n\t\t\tnode = Elem\n\t\t\t\t? $mol_jsx_document.createElementNS( props?.xmlns ?? 'http://www.w3.org/1999/xhtml', Elem )\n\t\t\t\t: $mol_jsx_document.createDocumentFragment()\n\t\t}\n\n\t\t$mol_dom_render_children( node , ( [] as ( Node | string )[] ).concat( ... childNodes ) )\n\t\tif( !Elem ) return node\n\n\t\tif( guid ) ( node as Element ).id = guid\n\t\tfor( const key in props ) {\n\t\t\tif( key === 'id' ) continue\n\t\t\t\n\t\t\tif( typeof props[ key ] === 'string' ) {\n\t\t\t\t\n\t\t\t\tif( typeof (node as any)[ key ] === 'string' ) (node as any)[ key ] = props[ key ]\n\t\t\t\t;( node as Element ).setAttribute( key , (props as any)[ key ] )\n\t\t\t\t\n\t\t\t} else if(\n\t\t\t\tprops[ key ] &&\n\t\t\t\ttypeof props[ key ] === 'object' &&\n\t\t\t\tReflect.getPrototypeOf( props[ key ] as any ) === Reflect.getPrototypeOf({})\n\t\t\t) {\n\n\t\t\t\tif( typeof (node as any)[ key ] === 'object' ) {\n\t\t\t\t\tObject.assign( ( node as any )[ key ] , props[ key ] )\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t(node as any)[ key ] = props[ key ]\n\t\t\t\t\n\t\t\t}\n\n\t\t}\n\n\t\tif( $mol_jsx_crumbs ) ( node as Element ).className = ( (props as any)?.['class'] ? (props as any)['class'] + ' ' : '' ) + crumbs_self\n\n\t\treturn node\n\n\t}\n\n\texport declare namespace $mol_jsx.JSX {\n\n\t\texport interface Element extends HTMLElement {\n\t\t\tclass?: string\n\t\t}\n\t\t\n\t\texport interface ElementClass {\n\t\t\tattributes : {}\n\t\t\townerDocument : Pick< Document , 'getElementById' | 'createElementNS' | 'createDocumentFragment' >\n\t\t\tchildNodes : Array< Node | string >\n\t\t\tvalueOf() : Element\n\t\t}\n\t\t\n\t\ttype OrString< Dict > = {\n\t\t\t[ key in keyof Dict ]: Dict[ key ] | string\n\t\t}\n\t\t\n\t\t/** Props for html elements */\n\t\texport type IntrinsicElements = {\n\t\t\t[ key in keyof ElementTagNameMap ]? : $.$mol_type_partial_deep< OrString<\n\t\t\t\t& Element\n\t\t\t\t& IntrinsicAttributes\n\t\t\t\t& ElementTagNameMap[ key ]\n\t\t\t> >\n\t\t}\n\t\t\n\t\t/** Additional undeclared props */\n\t\texport interface IntrinsicAttributes {\n\t\t\tid? : string\n\t\t\txmlns? : string\n\t\t}\n\t\t\n\t\texport interface ElementAttributesProperty {\n\t\t\tattributes : {\n\t\t\t}\n\t\t}\n\t\t\n\t\t// export type IntrinsicClassAttributes< Class > = $.$mol_type_partial_deep< Omit< Class , 'valueOf' > >\n\t\t\n\t\tinterface ElementChildrenAttribute {\n\t\t}\n\t\n\t}\n\n}\n","namespace $ {\n\n\texport class $mol_wrapper extends $mol_object2 {\n\n\t\tstatic wrap : ( task : ( ... ags : any[] )=> any )=> ( ... ags : any[] )=> any\n\t\t\n\t\tstatic run< Result >( task : ()=> Result ) : Result {\n\t\t\treturn this.func( task )()\n\t\t}\n\t\n\t\tstatic func< Args extends any[] , Result , Host = void >(\n\t\t\tfunc : ( this : Host , ... args : Args )=> Result\n\t\t) : ( this : Host , ... args : Args )=> Result {\n\t\t\treturn this.wrap( func )\n\t\t}\n\n\t\tstatic get class() {\n\n\t\t\treturn < Class extends new ( ... args : any[] )=> any >(\n\t\t\t\tClass : Class\n\t\t\t) => {\n\n\t\t\t\ttype Args = ConstructorParameters< Class >\n\t\t\t\ttype Result = InstanceType< Class >\n\n\t\t\t\tconst construct = ( target : Class , args : Args )=> new Class( ... args )\n\n\t\t\t\tconst handler: ProxyHandler<Class> = {\n\t\t\t\t\tconstruct : this.func( construct )\n\t\t\t\t} \n\n\t\t\t\t;(handler as any)[ Symbol.toStringTag ] = Class.name + '#'\n\n\t\t\t\treturn new Proxy( Class , handler )\n\t\t\t\t\n\t\t\t}\n\n\t\t}\n\n\t\tstatic get method() {\n\t\t\t\n\t\t\treturn (\n\t\t\t\tobj : object,\n\t\t\t\tname : PropertyKey,\n\t\t\t\tdescr : PropertyDescriptor,\n\t\t\t) => {\n\t\t\t\tdescr.value = this.func( descr.value! )\n\t\t\t\treturn descr\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\tstatic get field() {\n\t\t\t\n\t\t\treturn <\n\t\t\t\tHost ,\n\t\t\t\tField extends keyof Host ,\n\t\t\t\tArgs extends any[] ,\n\t\t\t\tResult ,\n\t\t\t>(\n\t\t\t\tobj : Host ,\n\t\t\t\tname : Field ,\n\t\t\t\tdescr : TypedPropertyDescriptor< Result >\n\t\t\t) => {\n\t\t\t\tdescr.get = descr.set = this.func( descr.get! )\n\t\t\t\treturn descr\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\n\texport class $mol_memo extends $mol_wrapper {\n\t\t\n\t\tstatic wrap< This extends object , Value >( task : ( this : This , next? : Value )=> Value ) {\n\n\t\t\tconst store = new WeakMap< This , Value >()\n\n\t\t\tconst fun = function( this : This , next? : Value ) {\n\n\t\t\t\tif( next === undefined && store.has( this ) ) return store.get( this )\n\t\t\t\t\n\t\t\t\tconst val = task.call( this , next ) ?? next\n\t\t\t\t\n\t\t\t\tstore.set( this , val! )\n\t\t\t\t\n\t\t\t\treturn val\n\n\t\t\t}\n\n\t\t\tReflect.defineProperty( fun , 'name' , { value : task.name + ' ' } )\n\n\t\t\treturn fun\n\t\t}\n\t\t\n\t}\n\n}\n","namespace $ {\n\t\n\t/** Run code without state changes */\n\texport function $mol_wire_probe< Value >(\n\t\ttask : ()=> Value, def?: Value\n\t) : Value | undefined {\n\t\t\n\t\tconst warm = $mol_wire_fiber.warm\n\t\t\n\t\ttry {\n\t\t\t$mol_wire_fiber.warm = false\n\t\t\tconst res = task()\n\t\t\tif( res === undefined ) return def\n\t\t\treturn res\n\t\t} finally {\n\t\t\t$mol_wire_fiber.warm = warm\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\texport class $mol_lock extends $mol_object {\n\t\tprotected promise = null as null | Promise<void>\n\n\t\tasync wait() {\n            let next = () => {}\n\t\t\tlet destructed = false\n            const task = $mol_wire_auto()\n\t\t\tif (! task) return next\n\n\t\t\tconst destructor = task.destructor.bind(task)\n            task.destructor = ()=> {\n\t\t\t\tdestructor()\n\t\t\t\tdestructed = true\n                next()\n            }\n\n\t\t\tlet promise\n\n\t\t\tdo {\n\t\t\t\tpromise = this.promise\n\t\t\t\tawait promise\n\t\t\t\tif (destructed) return next\n\t\t\t} while (promise !== this.promise)\n\n\t\t\tthis.promise = new Promise(done => { next = done })\n\t\t\treturn next\n\t\t}\n\n\t\tgrab() { return $mol_wire_sync(this).wait() }\n\t}\n}\n","namespace $ {\n\texport let $mol_mem_cached = $mol_wire_probe\n}\n","namespace $ {\n    export function $mol_compare_array<Value extends ArrayLike<unknown>>(a: Value, b: Value): boolean {\n\t\tif (a === b) return true\n\t\tif (Object.getPrototypeOf(a) !== Object.getPrototypeOf(b)) return false\n\t\tif (a.length !== b.length) return false\n\n\t\tfor (let i = 0; i < a.length; i++)\n\t\t\tif (a[i] !== b[i]) return false\n\n\t\treturn true\n\t}\n}\n","namespace $ {\n\n\texport type $mol_file_transaction_mode = 'create' | 'exists_truncate' | 'exists_fail' | 'read_only'\n\t\t| 'write_only' | 'read_write' | 'append'\n\n\texport type $mol_file_transaction_buffer = ArrayBufferView\n\n\texport class $mol_file_transaction extends $mol_object {\n\t\tpath() { return '' }\n\n\t\tmodes() { return [] as readonly $mol_file_transaction_mode[] }\n\n\t\twrite(options: {\n\t\t\tbuffer: ArrayBufferView | string | readonly ArrayBufferView[],\n\t\t\toffset?: number | null,\n\t\t\tlength?: number | null,\n\t\t\tposition?: number | null,\n\t\t}) {\n\t\t\treturn 0\n\t\t}\n\n\t\tread() {\n\t\t\treturn new Uint8Array()\n\t\t}\n\n\t\ttruncate(size: number) {}\n\n\t\tclose() {}\n\n\t\toverride destructor() {\n\t\t\tthis.close()\n\t\t}\n\n\t}\n}\n","namespace $ {\n\t\n\t/**\n\t * Disable reaping of current subscriber\n\t */\n\texport function $mol_wire_solid() {\n\t\tlet current = $mol_wire_auto() as $mol_wire_fiber< any, any, any >\n\t\tif( current!.temp ) current = current!.host\n\t\tif( current!.reap !== nothing ) {\n\t\t\tcurrent?.sub_on( sub, sub.data.length )\n\t\t}\n\t\tcurrent!.reap = nothing\n\t}\n\t\n\tconst nothing = ()=> {}\n\tconst sub = new $mol_wire_pub_sub\n\t\n}\n","namespace $ {\n\tenum file_modes {\n\t\t/** create if it doesn't already exist */\n\t\tcreate = $node.fs.constants.O_CREAT,\n\t\t/** truncate to zero size if it already exists */\n\t\texists_truncate = $node.fs.constants.O_TRUNC,\n\t\t/** throw exception if it already exists */\n\t\texists_fail = $node.fs.constants.O_EXCL,\n\t\tread_only = $node.fs.constants.O_RDONLY,\n\t\twrite_only = $node.fs.constants.O_WRONLY,\n\t\tread_write = $node.fs.constants.O_RDWR,\n\t\t/** data will be appended to the end */\n\t\tappend = $node.fs.constants.O_APPEND,\n\t}\n\n\tfunction mode_mask(modes: readonly $mol_file_transaction_mode[]) {\n\t\treturn modes.reduce( ( res, mode )=> res | file_modes[ mode ], 0 )\n\t}\n\n\texport class $mol_file_transaction_node extends $mol_file_transaction {\n\t\t@ $mol_mem\n\t\tprotected descr() {\n\t\t\t$mol_wire_solid()\n\t\t\treturn $node.fs.openSync(this.path(), mode_mask(this.modes()) )\n\t\t}\n\n\t\toverride write({ buffer, offset = 0, length, position = null }: {\n\t\t\tbuffer: ArrayBufferView | string | readonly ArrayBufferView[],\n\t\t\toffset?: number | null,\n\t\t\tlength?: number | null,\n\t\t\tposition?: number | null,\n\t\t}) {\n\t\t\tif (Array.isArray(buffer)) {\n\t\t\t\treturn $node.fs.writevSync( this.descr(), buffer, position ?? undefined)\n\t\t\t}\n\n\t\t\tif (typeof buffer === 'string') {\n\t\t\t\treturn $node.fs.writeSync( this.descr(), buffer, position )\n\t\t\t}\n\n\t\t\tlength = length ?? (buffer as ArrayBufferView).byteLength\n\n\t\t\treturn $node.fs.writeSync( this.descr(), buffer as NodeJS.ArrayBufferView, offset, length, position )\n\t\t}\n\n\t\toverride truncate(size: number) {\n\t\t\t$node.fs.ftruncateSync(this.descr())\n\t\t}\n\n\t\toverride read() {\n\t\t\treturn $mol_file_node_buffer_normalize($node.fs.readFileSync(this.descr()) as Buffer< ArrayBuffer >)\n\t\t}\n\n\t\toverride close() {\n\t\t\t$node.fs.closeSync(this.descr())\n\t\t}\n\n\t}\n\n\t$.$mol_file_transaction = $mol_file_transaction_node\n}\n","namespace $ {\n\n\texport class $mol_file_base extends $mol_object {\n\t\t\n\t\t@ $mol_mem_key\n\t\tstatic absolute<This extends typeof $mol_file_base>(this: This, path : string ) {\n\t\t\treturn this.make<typeof $mol_file_base>({\n\t\t\t\tpath : $mol_const( path )\n\t\t\t}) as InstanceType< This >\n\t\t}\n\n\t\tstatic relative<This extends typeof $mol_file_base>(this: This, path : string ) : InstanceType<This> {\n\t\t\tthrow new Error( 'Not implemented yet' )\n\t\t}\n\t\t\n\t\tstatic base = ''\n\t\t\n\t\tpath() {\n\t\t\treturn '.'\n\t\t}\n\t\t\n\t\tparent() {\n\t\t\treturn this.resolve( '..' )\n\t\t}\n\n\t\t@ $mol_action\n\t\texists_cut() { return this.exists() }\n\n\t\tprotected root() {\n\t\t\tconst path = this.path()\n\t\t\tconst base = (this.constructor as typeof $mol_file_base).base\n\n\t\t\t// Если путь выше или равен base или если parent такойже как и this - считаем это корнем\n\t\t\treturn base.startsWith(path) || this == this.parent()\n\t\t}\n\n\t\t@ $mol_mem\n\t\tprotected stat(next? : $mol_file_stat | null, virt?: 'virt') {\n\n\t\t\tconst path = this.path()\n\t\t\tconst parent = this.parent()\n\n\t\t\t// Отслеживать проверку наличия родительской папки не стоит до корня диска\n\t\t\t// Лучше ограничить mam-ом\n\t\t\tif ( ! this.root() ) {\n\t\t\t\t/*\n\t\t\t\tЕсли parent папка удалилась, надо ресетнуть все объекты в ней на любой глубине.\n\t\t\t\tНапример, rm -rf с последующим git pull: parent папка может удалиться, потом создасться,\n\t\t\t\tа текущая папка успеет только удалиться до момента выполнения stat.\n\t\t\t\tПоэтому parent.exists() не запустит перевычисления, нужна именно parent.version()\n\n\t\t\t\tОднако, parent.version() меняется не только при удалении, будет ложное срабатывание\n\t\t\t\tС этим придется мириться, красивого решения пока нет.\n\t\t\t\t*/\n\n\t\t\t\tparent.version()\n\t\t\t}\n\t\t\tparent.watcher()\n\n\t\t\tif( virt ) return next ?? null\n\t\t\t\n\t\t\treturn next ?? this.info(path)\n\t\t}\n\n\t\tprotected static changed = new Set<$mol_file_base>\n\n\t\tprotected static frame = null as null | $mol_after_timeout\n\n\t\tprotected static changed_add(type: 'change' | 'rename', path: string) {\n\t\t\tif (/([\\/\\\\]\\.|___$)/.test( path )) return\n\n\t\t\tconst file = this.relative( path.at(-1) === '/' ? path.slice(0, -1) : path )\n\t\t\t// console.log(type, path)\n\n\t\t\t// add (change): добавился файл - у parent надо обновить список sub, если он был заюзан\n\t\t\t// change, unlink (rename): обновился или удалился файл - ресетим\n\t\t\t// addDir (change), добавилась папка, у parent обновляем список директорий в sub\n\t\t\t// дочерние ресетим\n\n\t\t\t// unlinkDir (rename), удалилась папка, ресетим ее\n\t\t\t// stat у всех дочерних обновится сам, т.к. связан с parent.version()\n\t\t\tthis.changed.add(file)\n\n\t\t\tif (! this.watching) return\n\n\t\t\t// throttle, пока события поступают не сбрасываем.\n\t\t\t// аналог awaitWriteFinish из chokidar\n\t\t\t// интервалы между change-сообщениями модифицируемого файла должны быть меньше watch_debounce\n\t\t\tthis.frame?.destructor()\n\t\t\tthis.frame = new this.$.$mol_after_timeout(this.watch_debounce(), () => {\n\t\t\t\tif (! this.watching) return\n\t\t\t\tthis.watching = false\n\t\t\t\t$mol_wire_async(this).flush()\n\t\t\t} )\n\t\t}\n\n\t\t/**\n\t\t * Должно быть больше, чем время между событиями от вотчера при записи внешним процессом.\n\t\t * Иначе запуск ресетов паралельно с изменением может привести к неконсистентности.\n\t\t */\n\t\tstatic watch_debounce() { return 500 }\n\n\t\t@ $mol_action\n\t\tstatic flush() {\n\t\t\t// Пока flush работает, вотчер сюда не заходит, но может добавлять новые изменения\n\t\t\t// на каждом перезапуске они применятся\n\t\t\t// Пока run выполняется, изменения накапливаются, в конце run вызывается flush\n\t\t\t// Пока применяются изменения, run должен ожидать конца flush\n\n\t\t\tfor (const file of this.changed) {\n\t\t\t\tconst parent = file.parent()\n\n\t\t\t\ttry {\n\t\t\t\t\tif ( $mol_wire_probe(() => parent.sub()) ) parent.sub(null)\n\t\t\t\t\tfile.reset()\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif ($mol_fail_catch(error)) $mol_fail_log(error)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.changed.clear()\n\t\t\tthis.watching = true\n\n\t\t\t// this.watch_wd?.destructor()\n\t\t\t// this.watch_wd = null\n\t}\n\n\t\tprotected static watching = true\n\n\t\tprotected static lock = new $mol_lock\n\n\t\t@ $mol_action\n\t\tprotected static watch_off(path: string) {\n\t\t\tthis.watching = false\n\t\t\t// run должен ожидать конца flush\n\t\t\tthis.flush()\n\t\t\tthis.watching = false\n\n\t\t\t/*\n\t\t\twatch запаздывает и событие может прилететь через 3 сек после окончания сайд эффекта\n\t\t\tпоэтому добавляем папку, которую меняет side_effect\n\t\t\tКогда дойдет до выполнения flush, он ресетнет ее\n\t\t\t\n\t\t\tИначе будут лишние срабатывания\n\t\t\tНапример, удалили hyoo/board, watch ресетит и exists начинает отдавать false, срабатывает git clone\n\t\t\tСразу после него событие addDir еще не успело прийти,\n\t\t\tна следующем перезапуске вызывается git pull, т.к.\n\t\t\tс точки зрения реактивной системы hyoo/board еще не существует.\n\t\t\t*/\n\t\t\tthis.changed.add(this.absolute(path))\n\t\t}\n\t\n\t\t// protected static watch_wd = null as null | $mol_after_timeout\n\n\t\tstatic unwatched<Result>(side_effect: () => Result, affected_dir: string) {\n\t\t\t// ждем, пока выполнится предыдущий unwatched\n\t\t\tconst unlock = this.lock.grab()\n\t\t\tthis.watch_off(affected_dir)\n\n\t\t\ttry {\n\t\t\t\tconst result = side_effect()\n\t\t\t\tthis.flush()\n\t\t\t\tunlock()\n\t\t\t\treturn result\n\t\t\t} catch(e) {\n\t\t\t\tif (! $mol_promise_like(e)) {\n\t\t\t\t\tthis.flush()\n\t\t\t\t\tunlock()\n\t\t\t\t}\n\t\t\t\t$mol_fail_hidden(e)\n\t\t\t}\n\t\t}\n\n\t\treset() {\n\t\t\tthis.stat( null )\n\t\t}\n\n\t\t@ $mol_mem\n\t\tmodified() { return this.stat()?.mtime ?? null }\n\n\t\t@ $mol_mem\n\t\tversion() {\n\t\t\tconst next = this.stat()?.mtime.getTime().toString( 36 ).toUpperCase() ?? ''\n\t\t\t// console.log('version', next, this.path())\n\t\t\treturn next\n\t\t}\n\n\t\tprotected info( path: string ) { return null as null | $mol_file_stat }\n\t\tprotected ensure() {}\n\t\tprotected drop() {}\n\t\tprotected copy(to: string) {}\n\t\tprotected read(): Uint8Array<ArrayBuffer> { return new Uint8Array }\n\t\tprotected write(buffer: Uint8Array<ArrayBuffer>) { }\n\t\tprotected kids() {\n\t\t\treturn [] as readonly this[]\n\t\t}\n\n\t\t@ $mol_mem_key\n\t\treadable(opts: { start?: number, end?: number }) {\n\t\t\treturn new ReadableStream<Uint8Array<ArrayBuffer>>\n\t\t}\n\n\t\t@ $mol_mem_key\n\t\twritable(opts: { start?: number }) {\n\t\t\treturn new WritableStream<Uint8Array<ArrayBuffer>>\n\t\t}\n\n\t\t// open( ... modes: readonly $mol_file_mode[] ) { return 0 }\n\n\t\t@ $mol_mem\n\t\tbuffer( next? : Uint8Array<ArrayBuffer> ): Uint8Array<ArrayBuffer> {\n\n\t\t\t// Если версия пустая - возвращаем пустой буфер\n\t\t\tlet readed: Uint8Array<ArrayBuffer> = new Uint8Array()\n\n\t\t\tif( next === undefined ) {\n\t\t\t\t// Если меняется версия файла, буфер надо перечитать\n\t\t\t\tif ( this.version() ) readed = this.read()\n\t\t\t}\n\n\t\t\tconst prev = $mol_mem_cached( ()=> this.buffer() )\n\t\t\tconst changed = prev === undefined || ! $mol_compare_array( prev, next ?? readed)\n\n\t\t\tif( prev !== undefined && changed ) {\n\t\t\t\t// Логируем, если повторно читаем/пишем и буфер поменялся\n\t\t\t\tthis.$.$mol_log3_rise({\n\t\t\t\t\tplace: `$mol_file_node.buffer()`,\n\t\t\t\t\tmessage: 'Changed' ,\n\t\t\t\t\tpath: this.relate() ,\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tif (next === undefined) return changed ? readed : prev\n\n\t\t\t// Если буфер при записи не поменялся и файл не удаляли перед этим - не записываем новую версию.\n\t\t\t// Если записывать, это приведет к смене mtime и вотчер снова триггернется, даже если содержимое файла не поменялось.\n\n\t\t\t// В этом алгоритме есть изъян.\n\t\t\t// Если файл записали, потом отключили вотчер, кто-то из вне его поменял, потом включили вотчер, снова записали тот же буфер,\n\t\t\t// то буфер не запишется на диск, т.к. кэш не консистентен с диском.\n\t\t\t\n\t\t\tif (! changed && this.exists()) return prev\n\t\t\t\n\t\t\tthis.parent().exists( true )\n\t\t\tthis.stat( this.stat_make(next.length), 'virt' )\n\n\t\t\tthis.write(next)\n\n\t\t\treturn next\n\n\t\t}\n\n\t\t@ $mol_action\n\t\tstat_make(size: number) {\n\t\t\tconst now = new Date()\n\t\t\treturn {\n\t\t\t\ttype: 'file',\n\t\t\t\tsize,\n\t\t\t\tatime: now,\n\t\t\t\tmtime: now,\n\t\t\t\tctime: now,\n\t\t\t} as const\n\t\t}\n\n\t\t@ $mol_mem_key\n\t\tclone(to: string) {\n\t\t\tif (! this.exists() ) return null\n\n\t\t\tconst target = (this.constructor as typeof $mol_file_base).absolute(to) as this\n\n\t\t\ttry {\n\t\t\t\tthis.version()\n\t\t\t\ttarget.parent().exists(true)\n\t\t\t\tthis.copy(to)\n\t\t\t\ttarget.reset()\n\t\t\t\treturn target\n\t\t\t} catch (error) {\n\t\t\t\tif ( $mol_fail_catch(error)) {\n\t\t\t\t\tconsole.error(error)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null\n\t\t}\n\n\t\t// static watch_root = ''\n\n\t\t// static watcher_warned = false\n\t\twatcher() {\n\t\t\t// const constructor = this.constructor as typeof $mol_file_base\n\t\t\t// if (! constructor.watcher_warned) {\n\t\t\t// \tconsole.warn(`${constructor}.watcher() not implemented`)\n\t\t\t// \tconstructor.watcher_warned = true\n\t\t\t// }\n\n\t\t\treturn {\n\t\t\t\tdestructor() {}\n\t\t\t}\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\texists( next? : boolean ) {\n\t\t\t\n\t\t\tconst exists = Boolean( this.stat() )\n\n\t\t\t// console.log('exists current', exists, 'next', next, this.path())\n\t\t\tif( next === undefined ) return exists\n\t\t\tif( next === exists ) return exists\n\n\t\t\tif( next ) {\n\t\t\t\tthis.parent().exists( true )\n\t\t\t\tthis.ensure()\n\t\t\t} else {\n\t\t\t\tthis.drop()\n\t\t\t}\n\n\t\t\tthis.reset()\n\n\t\t\treturn next\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\ttype() {\n\t\t\treturn this.stat()?.type ?? ''\n\t\t}\n\t\t\n\t\tname() {\n\t\t\treturn this.path().replace( /^.*\\//, '' )\n\t\t}\n\t\t\n\t\text() {\n\t\t\tconst match = /((?:\\.\\w+)+)$/.exec( this.path() )\n\t\t\treturn match ? match[ 1 ].substring( 1 ) : ''\n\t\t}\n\n\t\ttext(next?: string, virt?: 'virt') {\n\t\t\t// Если записываем text, и вотчер ресетнул записанный файл,\n\t\t\t// то надо снова его обновить, вызвать логику, которая делала пуш в text.\n\t\t\t// Например файл удалили, потом снова создали, версия поменялась - перезаписываем\n\t\t\t// Если использовать version, то вновь созданный файл, через вотчер запустит свое пересоздание\n\t\t\tif (next !== undefined) this.exists()\n\t\t\treturn this.text_int(next, virt)\n\t\t}\n\n\t\t@ $mol_mem\n\t\ttext_int(next?: string, virt?: 'virt') {\n\t\t\tif( virt ) {\n\t\t\t\tthis.stat( this.stat_make(0), 'virt' )\n\t\t\t\treturn next!\n\t\t\t}\n\n\t\t\tif( next === undefined ) {\n\t\t\t\treturn $mol_charset_decode( this.buffer( ) )\t\n\t\t\t} else {\n\t\t\t\tconst buffer = $mol_charset_encode( next )\n\t\t\t\tthis.buffer( buffer )\n\t\t\t\treturn next\n\t\t\t}\n\t\t}\n\n\t\t@ $mol_mem\n\t\tsub(reset?: null) {\n\t\t\tif (! this.exists() ) return []\n\t\t\tif ( this.type() !== 'dir') return []\n\n\t\t\tthis.version()\n\n\t\t\t// Если дочерний file удалился, список надо обновить\n\t\t\treturn this.kids().filter(file => file.exists())\n\t\t}\n\n\t\tresolve(path: string): this {\n\t\t\tthrow new Error('implement')\n\t\t}\n\n\t\trelate( base = ( this.constructor as typeof $mol_file_base ).relative( '.' )): string {\n\t\t\tconst base_path = base.path()\n\t\t\tconst path = this.path()\n\t\t\treturn path.startsWith(base_path) ? path.slice(base_path.length) : path\n\t\t}\n\n\t\tfind(\n\t\t\tinclude? : RegExp ,\n\t\t\texclude? : RegExp\n\t\t) {\n\t\t\tconst found = [] as typeof this[]\n\t\t\tconst sub = this.sub()\n\n\t\t\tfor (const child of sub) {\n\t\t\t\tconst child_path = child.path()\n\n\t\t\t\tif( exclude && child_path.match( exclude ) ) continue\n\n\t\t\t\tif( !include || child_path.match( include ) ) found.push( child )\n\n\t\t\t\tif( child.type() === 'dir' ) {\n\t\t\t\t\tconst sub_child = child.find( include , exclude )\n\t\t\t\t\tfor (const child of sub_child) found.push(child)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn found\n\t\t}\n\n\t\t@ $mol_mem\n\t\tsize() {\n\t\t\tswitch( this.type() ) {\n\t\t\t\tcase 'file': return this.stat()?.size ?? 0\n\t\t\t\tdefault: return 0\n\t\t\t}\n\t\t}\n\t\t\n\t\ttoJSON() {\n\t\t\treturn this.path()\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\topen( ... modes: readonly $mol_file_transaction_mode[] ) {\n\t\t\treturn this.$.$mol_file_transaction.make({\n\t\t\t\tpath: () => this.path(),\n\t\t\t\tmodes: () => modes\n\t\t\t})\n\t\t}\n\t}\n\n}\n","namespace $ {\n\n\texport type $mol_file_type = 'file' | 'dir' | 'link'\n\n\texport interface $mol_file_stat {\n\t\ttype: $mol_file_type\n\t\tsize: number\n\t\tatime: Date\n\t\tmtime: Date\n\t\tctime: Date\n\t}\n\n\texport class $mol_file extends $mol_file_base {}\n\n}\n","namespace $ {\n\n\tfunction stat_convert(stat: ReturnType<typeof $node.fs.statSync>): null | $mol_file_stat {\n\t\t\n\t\tif( !stat ) return null\n\t\t\n\t\tlet type: $mol_file_type | undefined\n\t\tif (stat.isDirectory()) type = 'dir'\n\t\tif (stat.isFile()) type = 'file'\n\t\tif (stat.isSymbolicLink()) type = 'link'\n\n\t\tif (! type) return $mol_fail( new Error(`Unsupported file type`) )\n\n\t\treturn {\n\t\t\ttype, \n\t\t\tsize: Number(stat.size),\n\t\t\tatime: stat.atime,\n\t\t\tmtime: stat.mtime,\n\t\t\tctime: stat.ctime\n\t\t}\n\t}\n\n\texport function $mol_file_node_buffer_normalize(buf: Buffer< ArrayBuffer >): Uint8Array< ArrayBuffer > {\n\t\treturn new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\n\t}\n\n\texport class $mol_file_node extends $mol_file {\n\n\t\tstatic relative<This extends typeof $mol_file>(this: This, path : string ) {\n\t\t\treturn this.absolute<This>( $node.path.resolve( this.base, path ).replace( /\\\\/g , '/' ) )\n\t\t}\n\n\t\t@ $mol_mem\n\t\toverride watcher(reset?: null) {\n\t\t\tconst path = this.path()\n\t\t\tconst root = this.root()\n\t\t\t// Если папки/файла нет, watch упадет с ошибкой\n\t\t\t// exists обратится к parent.version и parent.watcher\n\t\t\t// Поэтому у root-папки и выше не надо вызывать exists, иначе поднимется выше base до корня диска\n\t\t\t// exists вызывать надо, что б пересоздавать вотчер при появлении папки или файла\n\t\t\tif (! root && ! this.exists() ) return super.watcher()\n\n\t\t\tlet watcher\n\n\t\t\ttry {\n\t\t\t\t// Между exists и watch файл может удалиться, в любом случае надо обрабатывать ENOENT\n\t\t\t\twatcher = $node.fs.watch( path )\n\t\t\t} catch (error: any) {\n\t\t\t\tif ( ! (error instanceof Error) ) error = new Error('Unknown watch error',  {cause: error})\n\t\t\t\terror.message += '\\n' + path\n\n\t\t\t\tif ( root || error.code !== 'ENOENT' ) {\n\t\t\t\t\tthis.$.$mol_fail_log(error)\n\t\t\t\t}\n\n\t\t\t\t// Если файла нет - вотчер не создается, создастся потом, когда exists поменяется на true.\n\t\t\t\t// Если создание упало с другой ошибкой - не ломаем работу mol_file, деградируем до не реактивной fs.\n\n\t\t\t\treturn super.watcher()\n\t\t\t}\n\n\t\t\twatcher.on('change', (type: 'change' | 'rename', name) => {\n\t\t\t\tif (! name) return\n\t\t\t\tconst path = $node.path.join( this.path(), name.toString() )\n\t\t\t\t;(this.constructor as typeof $mol_file_base).changed_add(type, path)\n\t\t\t})\n\n\t\t\twatcher.on('error', e => this.$.$mol_fail_log(e) )\n\n\t\t\tlet destructed = false\n\n\t\t\twatcher.on('close', () => {\n\t\t\t\t// Если в процессе работы вотчер сам закрылся, надо его переоткрыть\n\t\t\t\tif (! destructed) setTimeout(() => $mol_wire_async(this).watcher(null), 500)\n\t\t\t})\n\n\t\t\treturn {\n\t\t\t\tdestructor() {\n\t\t\t\t\tdestructed = true\n\t\t\t\t\twatcher.close()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t@ $mol_action\n\t\tprotected override info( path: string ) {\n\t\t\ttry {\n\t\t\t\treturn stat_convert($node.fs.statSync(path))\n\t\t\t} catch( error: any ) {\n\t\t\t\tif (this.$.$mol_fail_catch(error)) {\n\t\t\t\t\tif (error.code === 'ENOENT') return null\n\t\t\t\t\terror.message += '\\n' + path\n\t\t\t\t\tthis.$.$mol_fail_hidden(error)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null\n\t\t}\n\n\t\t@ $mol_action\n\t\tprotected override ensure() {\n\t\t\tconst path = this.path()\n\t\t\ttry {\n\t\t\t\t$node.fs.mkdirSync( path, { recursive: true } )\n\t\t\t\treturn null\n\t\t\t} catch( e: any ) {\n\t\t\t\tif (this.$.$mol_fail_catch(e)) {\n\t\t\t\t\tif (e.code === 'EEXIST') return null\n\t\t\t\t\te.message += '\\n' + path\n\t\t\t\t\tthis.$.$mol_fail_hidden(e)\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\t@ $mol_action\n\t\tprotected override copy(to: string) {\n\t\t\t$node.fs.copyFileSync(this.path(), to)\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tprotected override drop() {\n\t\t\t$node.fs.unlinkSync( this.path() )\n\t\t}\n\n\t\t@ $mol_action\n\t\tprotected override read() {\n\t\t\tconst path = this.path()\n\n\t\t\ttry {\n\t\t\t\treturn $mol_file_node_buffer_normalize($node.fs.readFileSync( path ) as Buffer< ArrayBuffer >)\n\t\t\t} catch( error: any ) {\n\t\t\t\tif (! $mol_promise_like(error)) {\n\t\t\t\t\terror.message += '\\n' + path\n\t\t\t\t}\n\n\t\t\t\t$mol_fail_hidden( error )\n\t\t\t}\n\t\t}\n\n\t\t@ $mol_action\n\t\tprotected override write(buffer: Uint8Array) {\n\t\t\tconst path = this.path()\n\n\t\t\ttry {\n\n\t\t\t\t$node.fs.writeFileSync( path, buffer )\n\n\t\t\t} catch( error: any ) {\n\t\t\t\tif (this.$.$mol_fail_catch(error)) {\n\t\t\t\t\terror.message += '\\n' + path\n\t\t\t\t}\n\t\t\t\treturn this.$.$mol_fail_hidden( error )\n\t\t\t}\n\n\t\t}\n\n\t\tprotected override kids() {\n\t\t\tconst path = this.path()\n\n\t\t\ttry {\n\t\t\t\tconst kids = $node.fs.readdirSync( path )\n\t\t\t\t\t.filter( name => !/^\\.+$/.test( name ) )\n\t\t\t\t\t.map( name => this.resolve( name ) )\n\n\t\t\t\treturn kids\n\t\t\t} catch( e: any ) {\n\t\t\t\tif (this.$.$mol_fail_catch(e)) {\n\t\t\t\t\tif (e.code === 'ENOENT') return []\n\t\t\t\t\te.message += '\\n' + path\n\t\t\t\t}\n\t\t\t\t$mol_fail_hidden(e)\n\t\t\t}\n\t\t}\n\t\t\n\t\toverride resolve( path : string ) {\n\t\t\treturn ( this.constructor as typeof $mol_file )\n\t\t\t\t.relative( $node.path.join( this.path() , path ) ) as this\n\t\t}\n\t\t\n\t\toverride relate( base = ( this.constructor as typeof $mol_file ).relative( '.' )) {\n\t\t\treturn $node.path.relative( base.path() , this.path() ).replace( /\\\\/g , '/' )\n\t\t}\n\n\t\t@ $mol_mem_key\n\t\toverride readable(opts: { start?: number, end?: number }) {\n\t\t\tconst { Readable } = $node['node:stream'] as typeof import('stream')\n\t\t\tconst stream = $node.fs.createReadStream(this.path(), {\n\t\t\t\tflags: 'r',\n\t\t\t\tautoClose: true,\n\t\t\t\tstart: opts?.start,\n\t\t\t\tend: opts?.end,\n\t\t\t\tencoding: 'binary',\n\t\t\t})\n\n\t\t\treturn Readable.toWeb(stream) as ReadableStream<Uint8Array<ArrayBuffer>>\n\t\t}\n\n\t\t@ $mol_mem\n\t\toverride writable(opts?: { start?: number }) {\n\t\t\tconst { Writable } = $node['node:stream'] as typeof import('stream')\n\t\t\tconst stream = $node.fs.createWriteStream(this.path(), {\n\t\t\t\tflags: 'w+',\n\t\t\t\tautoClose: true,\n\t\t\t\tstart: opts?.start,\n\t\t\t\tencoding: 'binary',\n\t\t\t})\n\n\t\t\treturn Writable.toWeb(stream) as WritableStream<Uint8Array<ArrayBuffer>>\n\t\t}\n\n\t}\n\n\n\t$.$mol_file = $mol_file_node\n}\n","namespace $ {\n\t\n\texport let $mol_file_extensions = {\n\t\t\n\t\t'css': 'text/css;charset=utf-8',\n\t\t'csv': 'text/csv;charset=utf-8',\n\t\t'htm': 'text/html;charset=utf-8',\n\t\t'html': 'text/html;charset=utf-8',\n\t\t'ics': 'text/calendar;charset=utf-8',\n\t\t'js': 'text/javascript;charset=utf-8',\n\t\t'jsx': 'text/javascript;charset=utf-8',\n\t\t'md': 'text/plain;charset=utf-8',\n\t\t'mjs': 'text/javascript;charset=utf-8',\n\t\t'ts': 'text/typescript;charset=utf-8',\n\t\t'tsx': 'text/typescript;charset=utf-8',\n\t\t'txt': 'text/plain;charset=utf-8',\n\t\t\n\t\t'aac': 'audio/aac',\n\t\t'mid': 'audio/midi',\n\t\t'midi': 'audio/midi',\n\t\t'mp3': 'audio/mpeg',\n\t\t'oga': 'audio/ogg',\n\t\t'opus': 'audio/opus',\n\t\t'wav': 'audio/wav',\n\t\t'weba': 'audio/webm',\n\t\t\n\t\t'apng': 'image/apng',\n\t\t'avif': 'image/avif',\n\t\t'bmp': 'image/bmp',\n\t\t'gif': 'image/gif',\n\t\t'ico': 'image/vnd.microsoft.icon',\n\t\t'jpeg': 'image/jpeg',\n\t\t'jpg': 'image/jpeg',\n\t\t'png': 'image/png',\n\t\t'svg': 'image/svg+xml',\n\t\t'tiff': 'image/tiff',\n\t\t'tif': 'image/tiff',\n\t\t'webp': 'image/webp',\n\t\t\n\t\t'avi': 'video/x-msvideo',\n\t\t'mpeg': 'video/mpeg',\n\t\t'mp4': 'video/mp4',\n\t\t'ogv': 'video/ogg',\n\t\t'webm': 'video/webm',\n\t\t'3gp': 'video/3gpp',\n\t\t'3g2': 'video/3gpp2',\n\t\t\n\t\t'otf': 'font/otf',\n\t\t'ttf': 'font/ttf',\n\t\t'woff': 'font/woff',\n\t\t'woff2': 'font/woff2',\n\t\t\n\t\t'abw': 'application/x-abiword',\n\t\t'arc': 'application/x-freearc',\n\t\t'azw': 'application/vnd.amazon.ebook',\n\t\t'bin': 'application/octet-stream',\n\t\t'bz': 'application/x-bzip',\n\t\t'bz2': 'application/x-bzip2',\n\t\t'cda': 'application/x-cdf',\n\t\t'crus': 'application/x-crus',\n\t\t'csh': 'application/x-csh',\n\t\t'doc': 'application/msword',\n\t\t'docx': 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n\t\t'eot': 'application/vnd.ms-fontobject',\n\t\t'epub': 'application/epub+zip',\n\t\t'gz': 'application/gzip',\n\t\t'jar': 'application/java-archive',\n\t\t'json': 'application/json',\n\t\t'jsonld': 'application/ld+json',\n\t\t'map': 'application/json',\n\t\t'mpkg': 'application/vnd.apple.installer+xml',\n\t\t'odp': 'application/vnd.oasis.opendocument.presentation',\n\t\t'ods': 'application/vnd.oasis.opendocument.spreadsheet',\n\t\t'odt': 'application/vnd.oasis.opendocument.text',\n\t\t'ogx': 'application/ogg',\n\t\t'pdf': 'application/pdf',\n\t\t'php': 'application/x-httpd-php',\n\t\t'ppt': 'application/vnd.ms-powerpoint',\n\t\t'pptx': 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n\t\t'rar': 'application/vnd.rar',\n\t\t'rtf': 'application/rtf',\n\t\t'sh': 'application/x-sh',\n\t\t'tar': 'application/x-tar',\n\t\t'tree': 'application/x-tree',\n\t\t'vsd': 'application/vnd.visio',\n\t\t'xhtml': 'application/xhtml+xml',\n\t\t'xls': 'application/vnd.ms-excel',\n\t\t'xlsx': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n\t\t'xml': 'application/xml',\n\t\t'xul': 'application/vnd.mozilla.xul+xml',\n\t\t'zip': 'application/zip',\n\t\t'7z': 'application/x-7z-compressed',\n\t\t\n\t} as Record< string, $mol_rest_port_mime >\n\t\n}\n","namespace $ {\n\t\n\texport class $mol_rest_port_http extends $mol_rest_port {\n\t\t\n\t\toutput!: InstanceType< $node['http']['ServerResponse'] >\n\t\t\n\t\t@ $mol_action\n\t\tsend_code( code: $mol_rest_code ) {\n\t\t\tif( this.output.writableEnded ) return\n\t\t\tif( this.output.statusCode !== 400 ) return\n\t\t\tthis.output.statusCode = code\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tsend_type( mime: $mol_rest_port_mime ) {\n\t\t\tif( this.output.writableEnded ) return\n\t\t\tif( this.output.getHeader( 'content-type' ) ) return\n\t\t\tthis.output.setHeader( 'content-type', mime )\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tsend_bin( data: Uint8Array ) {\n\t\t\tif( this.output.writableEnded ) return\n\t\t\tsuper.send_bin( data )\n\t\t\tthis.output.write( data )\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\n\texport function $mol_dom_parse(\n\t\ttext : string ,\n\t\ttype : DOMParserSupportedType = 'application/xhtml+xml' ,\n\t) {\n\n\t\tconst parser = new $mol_dom_context.DOMParser()\n\t\tconst doc = parser.parseFromString( text , type )\n\t\t\n\t\tconst error = doc.getElementsByTagName( 'parsererror' )\n\t\tif( error.length ) throw new Error( error[0].textContent! )\n\n\t\treturn doc\n\t}\n\n}\n","namespace $ {\n\texport class $mol_rest_message_http extends $mol_rest_message {\n\t\t\n\t\tinput!: InstanceType< $node['http']['IncomingMessage'] >\n\t\t\n\t\t@ $mol_mem\n\t\tmethod() {\n\t\t\treturn this.input.method ?? super.method()\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\turi() {\n\t\t\tconst addr = this.input.socket?.localAddress ?? '::1'\n\t\t\tconst port = this.input.socket?.localPort ?? '80'\n\t\t\treturn new URL( this.input.url!, `http://[${addr}]:${port}/` )\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\ttype() {\n\t\t\treturn ( this.input.headers['content-type'] ?? 'application/octet-stream' ) as $mol_rest_port_mime\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tdata(): null | string | Uint8Array | Element | object {\n\t\t\t\n\t\t\tconst consume = $mol_wire_sync( $node['stream/consumers'] )\n\t\t\t\n\t\t\tif( this.type().startsWith( 'text/' ) ) {\n\t\t\t\t\n\t\t\t\tconst text = consume.text( this.input )\n\t\t\t\t\n\t\t\t\tif( this.type() === 'text/html' ) {\n\t\t\t\t\treturn $mol_dom_parse( text, 'application/xhtml+xml' ).documentElement\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn text\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tif( this.type() === 'application/json' ) {\n\t\t\t\t\treturn consume.json( this.input )\n\t\t\t\t} else {\n\t\t\t\t\treturn new Uint8Array( consume.arrayBuffer( this.input ) )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\t@ $mol_action\n\t\troute( uri: URL ) {\n\t\t\treturn $mol_rest_message_http.make({\n\t\t\t\tport: this.port,\n\t\t\t\tinput: this.input,\n\t\t\t\turi: $mol_const( uri ),\n\t\t\t\tdata: ()=> this.data(),\n\t\t\t})\n\t\t}\n\t\t\n\t}\n}\n","namespace $ {\n\t\n\texport class $mol_rest_port_ws extends $mol_rest_port {}\n\t\n}\n","namespace $ {\n\texport function $mol_base64_encode(src: string | Uint8Array): string {\n\t\tthrow new Error('Not implemented')\n\t}\n}\n","namespace $ {\n\n\texport function $mol_base64_encode_node(str: string | Uint8Array): string {\n\t\tif (! str) return ''\n\t\tif (Buffer.isBuffer(str)) return str.toString('base64')\n\n\t\treturn Buffer.from(str as string).toString('base64')\n\t}\n\n\t$.$mol_base64_encode = $mol_base64_encode_node\n}\n","namespace $ {\n\texport function $mol_base64_decode(base64: string): Uint8Array< ArrayBuffer > {\n\t\tthrow new Error('Not implemented')\n\t}\n}\n","namespace $ {\n\texport function $mol_base64_decode_node(base64Str: string): Uint8Array< ArrayBuffer > {\n\t\t\n\t\tbase64Str = base64Str.replace( /-/g, '+' ).replace( /_/g, '/' )\n\t\t\n\t\t// without Uint8Array breaks $mol_compare_deep\n\t\tconst buffer = Buffer.from(base64Str, 'base64')\n\n\t\treturn new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength)\n\t}\n\n\t$.$mol_base64_decode = $mol_base64_decode_node\n}\n","namespace $ {\n\t\n\texport function $mol_base64_ae_encode( buffer: Uint8Array ) {\n\t\treturn $mol_base64_encode( buffer ).replace( /\\+/g, 'æ' ).replace( /\\//g, 'Æ' ).replace( /=/g, '' )\n\t}\n\t\n\texport function $mol_base64_ae_decode( str: string ) {\n\t\treturn $mol_base64_decode( str.replace( /æ/g, '+' ).replace( /Æ/g, '/' ) )\n\t}\n\t\n}\n","namespace $ {\n\texport class $mol_buffer extends DataView< ArrayBuffer > {\n\t\t\n\t\t[ Symbol.toStringTag ] = this.constructor.name + '<>'\n\t\t\n\t\tstatic from<\n\t\t\tThis extends typeof $mol_buffer\n\t\t>(\n\t\t\tthis: This,\n\t\t\tarray: number | string | ArrayBufferView< ArrayBuffer >,\n\t\t) {\n\t\t\tif( typeof array === 'number' ) array = new Uint8Array( array )\n\t\t\tif( typeof array === 'string' ) array = $mol_base64_ae_decode( array )\n\t\t\treturn new this( array.buffer, array.byteOffset, array.byteLength ) as InstanceType< This >\n\t\t}\n\t\t\n\t\tstatic toString() {\n\t\t\treturn $$.$mol_func_name( this )\n\t\t}\n\n\t\tgetUint48( offset: number, LE = false ) {\n\t\t\tif( offset % 4 ) {\n\t\t\t\treturn this.getUint16( offset, LE ) + this.getUint32( offset + 2, LE ) * 2**16\n\t\t\t} else {\n\t\t\t\treturn this.getUint32( offset, LE ) + this.getUint16( offset + 4, LE ) * 2**32\n\t\t\t}\n\t\t}\n\t\t\n\t\tsetUint48( offset: number, value: number, LE = false ) {\n\t\t\tif( offset % 4 ) {\n\t\t\t\tthis.setUint16( offset, value & ( (1<<16) - 1 ), LE )\n\t\t\t\tthis.setUint32( offset + 2, ( value / 2**16 )|0, LE )\n\t\t\t} else {\n\t\t\t\tthis.setUint32( offset, value |0, LE )\n\t\t\t\tthis.setUint16( offset + 4, ( value / 2**32 )|0, LE )\n\t\t\t}\n\t\t}\n\t\t\n\t\tint8( offset: number, next?: number ) {\n\t\t\tif( next === undefined ) return this.getInt8( offset )\n\t\t\tif( next >= -(2**7) && next < 2**7 ) return this.setInt8( offset, next ), next\n\t\t\t$mol_fail( new Error( `Wrong int8 value ${ next }` ) )\n\t\t}\n\t\t\n\t\tuint8( offset: number, next?: number ) {\n\t\t\tif( next === undefined ) return this.getUint8( offset )\n\t\t\tif( next >= 0 && next < 2**8 ) return this.setUint8( offset, next ), next\n\t\t\t$mol_fail( new Error( `Wrong uint8 value ${ next }` ) )\n\t\t}\n\t\t\n\t\tint16( offset: number, next?: number ) {\n\t\t\tif( next === undefined ) return this.getInt16( offset, true )\n\t\t\tif( next >= -(2**15) && next < 2**15 ) return this.setInt16( offset, next, true ), next\n\t\t\t$mol_fail( new Error( `Wrong int16 value ${ next }` ) )\n\t\t}\n\t\t\n\t\tuint16( offset: number, next?: number ) {\n\t\t\tif( next === undefined ) return this.getUint16( offset, true )\n\t\t\tif( next >= 0 && next < 2**16 ) return this.setUint16( offset, next, true ), next\n\t\t\t$mol_fail( new Error( `Wrong uint16 value ${ next }` ) )\n\t\t}\n\t\t\n\t\tint32( offset: number, next?: number ) {\n\t\t\tif( next === undefined ) return this.getInt32( offset, true )\n\t\t\tif( next >= -(2**31) && next < 2**31 ) return this.setInt32( offset, next, true ), next\n\t\t\t$mol_fail( new Error( `Wrong int32 value ${ next }` ) )\n\t\t}\n\t\n\t\tuint32( offset: number, next?: number ) {\n\t\t\tif( next === undefined ) return this.getUint32( offset, true )\n\t\t\tif( next >= 0 && next < 2**32 ) return this.setUint32( offset, next, true ), next\n\t\t\t$mol_fail( new Error( `Wrong uint32 value ${ next }` ) )\n\t\t}\n\t\t\n\t\tuint48( offset: number, next?: number ) {\n\t\t\tif( next === undefined ) return this.getUint48( offset, true )\n\t\t\tif( next >= 0 && next < 2**48 ) return this.setUint48( offset, next, true ), next\n\t\t\t$mol_fail( new Error( `Wrong uint48 value ${ next }` ) )\n\t\t}\n\t\t\n\t\tint64( offset: number, next?: bigint ) {\n\t\t\tif( next === undefined ) return this.getBigInt64( offset, true )\n\t\t\tif( next >= -(2**63) && next < 2**63 ) return this.setBigInt64( offset, next, true ), next\n\t\t\t$mol_fail( new Error( `Wrong int64 value ${ next }` ) )\n\t\t}\n\t\t\n\t\tuint64( offset: number, next?: bigint ) {\n\t\t\tif( next === undefined ) return this.getBigUint64( offset, true )\n\t\t\tif( next >= 0 && next < 2**64 ) return this.setBigUint64( offset, next, true ), next\n\t\t\t$mol_fail( new Error( `Wrong uint64 value ${ next }` ) )\n\t\t}\n\t\t\n\t\tfloat32( offset: number, next?: number ) {\n\t\t\tif( next !== undefined ) this.setFloat32( offset, next, true )\n\t\t\treturn this.getFloat32( offset, true )\n\t\t}\n\t\t\n\t\tfloat64( offset: number, next?: number ) {\n\t\t\tif( next !== undefined ) this.setFloat64( offset, next, true )\n\t\t\treturn this.getFloat64( offset, true )\n\t\t}\n\t\t\n\t\tasArray() {\n\t\t\treturn new Uint8Array( this.buffer, this.byteOffset, this.byteLength )\n\t\t}\n\t\t\n\t\ttoString() {\n\t\t\treturn $mol_base64_ae_encode( this.asArray() )\n\t\t}\n\t\t\n\t}\n}\n","namespace $ {\n\t\n\texport enum $mol_websocket_frame_op {\n\t\t\n\t\tcon = 0,\n\t\ttxt = 1,\n\t\tbin = 2,\n\t\t\n\t\tstop = 8,\n\t\tping = 9,\n\t\tpong = 10,\n\t\t\n\t}\n\t\n\t/**\n\t * WebSocket frame header.\n\t * https://datatracker.ietf.org/doc/html/rfc6455#section-5.2\n\t * Payload >= 2^32 isn't supported\n\t */\n\texport class $mol_websocket_frame extends $mol_buffer {\n\t\t\n\t\tkind( next?: {\n\t\t\top: keyof typeof $mol_websocket_frame_op\n\t\t\tfin: boolean,\n\t\t} ) {\n\t\t\tif( next ) {\n\t\t\t\t\n\t\t\t\tthis.setUint8( 0, Number( next.fin ) << 7 | $mol_websocket_frame_op[ next.op ] )\n\t\t\t\treturn next\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tconst state = this.getUint8( 0 )\n\t\t\t\tconst fin = state >> 7\n\t\t\t\t\n\t\t\t\tconst op = $mol_websocket_frame_op[ state & 0b1111 ] as keyof typeof $mol_websocket_frame_op\n\t\t\t\tif( op === undefined ) $mol_fail( new Error( `Wrong op (${ state.toString(2) })` ) )\n\t\t\t\t\n\t\t\t\treturn { op, fin }\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\tdata( next?: { size: number, mask: boolean } ) {\n\t\t\tif( next === undefined ) {\n\t\t\t\t\n\t\t\t\tconst state = this.getUint8( 1 )\n\t\t\t\tconst mask = state >> 7\n\t\t\t\t\n\t\t\t\tlet size = state & 0b0111_1111\n\t\t\t\tif( size === 126 ) size = this.getUint16( 2 )\n\t\t\t\telse if( size === 127 ) size = this.getUint32( 6 )\n\t\t\t\n\t\t\t\treturn { size, mask }\n\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tif( next.size >= 2**16 ) {\n\t\t\t\t\t\n\t\t\t\t\tthis.setUint8( 1, 127 | Number( next.mask ) << 7 )\n\t\t\t\t\tthis.setUint32( 6, next.size )\n\t\t\t\t\t\n\t\t\t\t} else if( next.size >= 126 ) {\n\t\t\t\t\t\n\t\t\t\t\tthis.setUint8( 1, 126 | Number( next.mask ) << 7 )\n\t\t\t\t\tthis.setUint16( 2, next.size )\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tthis.setUint8( 1, next.size | Number( next.mask ) << 7 )\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn next\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\tsize() {\n\t\t\tconst short = this.getUint8( 1 ) & 0b0111_1111\n\t\t\tconst mask = this.getUint8( 1 ) >> 7\n\t\t\treturn ( short === 127 ? 10 : short === 126 ? 4 : 2 ) + ( mask ? 4 : 0 )\n\t\t}\n\t\t\n\t\tmask() {\n\t\t\treturn new Uint8Array( this.buffer, this.byteOffset + this.size() - 4, 4 )\n\t\t}\n\t\t\n\t\ttoString() {\n\t\t\tconst { op, fin } = this.kind()\n\t\t\tconst { size, mask } = this.data()\n\t\t\treturn `${op}${ fin ? '!' : '+' }${ size }${ mask ? '@' : '#' }`\n\t\t}\n\t\t\n\t\tstatic make(\n\t\t\top: keyof typeof $mol_websocket_frame_op,\n\t\t\tsize = 0,\n\t\t\tmask = false,\n\t\t\tfin = true,\n\t\t) {\n\t\t\t\n\t\t\tconst head = ( size >= 2**16 ? 10 : size >= 126 ? 4 : 2 ) + ( mask ? 4 : 0 )\n\t\t\tconst frame = $mol_websocket_frame.from( head ) \n\t\t\t\n\t\t\tframe.kind({ op, fin })\n\t\t\tframe.data({ size, mask })\n\t\t\t\n\t\t\treturn frame\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport class $mol_rest_port_ws_std extends $mol_rest_port_ws {\n\t\t\n\t\tsocket!: WebSocket\n\t\t\n\t\t@ $mol_action\n\t\tsend_nil() {\n\t\t\tif( this.socket.readyState !== this.socket.OPEN ) return\n\t\t\tthis.socket.send( '' )\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tsend_bin( data: Uint8Array ) {\n\t\t\tif( this.socket.readyState !== this.socket.OPEN ) return\n\t\t\tthis.socket.send( data )\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tsend_text( data: string ) {\n\t\t\tif( this.socket.readyState !== this.socket.OPEN ) return\n\t\t\tconst bin = $mol_charset_encode( data )\n\t\t\tthis.socket.send( bin )\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport class $mol_rest_port_ws_node extends $mol_rest_port_ws {\n\t\t\n\t\tsocket!: InstanceType< $node['stream']['Duplex'] >\n\t\t\n\t\t@ $mol_action\n\t\tsend_nil() {\n\t\t\tif( this.socket.writableEnded ) return\n\t\t\tthis.socket.write( $mol_websocket_frame.make( 'pong', 0 ).asArray() )\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tsend_bin( data: Uint8Array ) {\n\t\t\tif( this.socket.writableEnded ) return\n\t\t\tthis.socket.write( $mol_websocket_frame.make( 'bin', data.byteLength ).asArray() )\n\t\t\tthis.socket.write( data )\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tsend_text( data: string ) {\n\t\t\tif( this.socket.writableEnded ) return\n\t\t\tconst bin = $mol_charset_encode( data )\n\t\t\tthis.socket.write( $mol_websocket_frame.make( 'txt', bin.byteLength ).asArray() )\n\t\t\tthis.socket.write( bin )\n\t\t}\n\t\t\n\t}\n\t\n\t$.$mol_rest_port_ws = $mol_rest_port_ws_node\n\t\n}\n","namespace $ {\n\t\n\tlet sponge = new Uint32Array(80)\n\t\n\t/** Fast small sync SHA-1 (20 bytes, 160 bits) */\n\texport function $mol_crypto_hash( input: ArrayBufferView ) {\n\t\t\n\t\tconst data = input instanceof Uint8Array\n\t\t\t? input\n\t\t\t: new Uint8Array( input.buffer, input.byteOffset, input.byteLength )\n\t\t\n\t\tconst bits = data.byteLength << 3\n\t\tconst kbits = bits >> 5\n\t\tconst kword = 0x80 << ( 24 - bits & 0b11111 )\n\t\t\n\t\tconst bytes = 16 + ( bits + 64 >>> 9 << 4 )\n\t\tconst klens = bytes - 1\n\t\tconst words = new Int32Array( data.buffer, data.byteOffset, data.byteLength >> 2 )\n\t\t\n\t\tlet tail = 0\n\t\tfor( let i = words.length * 4; i < data.length; ++i ) {\n\t\t\ttail |= data[i] << ( i << 3 & 0b11000 )\n\t\t}\n\t\t\n\t\t// Initial\n\t\tconst hash = new Int32Array([ 1732584193, -271733879, -1732584194, 271733878, -1009589776 ])\n\t\t\n\t\t// Digest\n\t\tfor( let i = 0; i < bytes; i += 16 ) {\n\t\t\t\n\t\t\tlet h0 = hash[0]\n\t\t\tlet h1 = hash[1]\n\t\t\tlet h2 = hash[2]\n\t\t\tlet h3 = hash[3]\n\t\t\tlet h4 = hash[4]\n\n\t\t\tfor( let j = 0; j < 16; ++j ) {\n\t\t\t\t\n\t\t\t\tconst k = i + j\n\t\t\t\tif( k === klens ) {\n\t\t\t\t\t\n\t\t\t\t\tsponge[j] = bits\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tlet word =\n\t\t\t\t\t\tk === words.length ? tail :\n\t\t\t\t\t\tk > words.length ? 0 :\n\t\t\t\t\t\twords[k]\n\t\t\t\t\t\n\t\t\t\t\tword = word << 24 | word << 8 & 0xFF0000 | word >>> 8 & 0xFF00 | word >>> 24 & 0xFF // LE -> BE\n\t\t\t\t\tif( k === kbits ) word |= kword\n\t\t\t\t\t\n\t\t\t\t\tsponge[j] = word\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst next = ( ( h1 & h2 | ~h1 & h3 ) + 1518500249 + h4 + ( sponge[j] >>> 0 ) + (( h0 << 5 )|( h0 >>> 27 )) )|0\n\n\t\t\t\th4 = h3\n\t\t\t\th3 = h2\n\t\t\t\th2 = ( h1 << 30 )|( h1 >>> 2 )\n\t\t\t\th1 = h0\n\t\t\t\th0 = next\n\t\t\t\t\n\t\t\t}\n\n\t\t\tfor( let j = 16; j < 20; ++j ) {\n\t\t\t\t\n\t\t\t\tconst shuffle = sponge[j-3] ^ sponge[j-8] ^ sponge[j-14] ^ sponge[j-16]\n\t\t\t\tsponge[j] = shuffle << 1 | shuffle >>> 31\n\t\t\t\t\n\t\t\t\tconst next = ( ( h1 & h2 | ~h1 & h3 ) + 1518500249 + h4 + ( sponge[j] >>> 0 ) + (( h0 << 5 )|( h0 >>> 27 )) )|0\n\n\t\t\t\th4 = h3\n\t\t\t\th3 = h2\n\t\t\t\th2 = ( h1 << 30 )|( h1 >>> 2 )\n\t\t\t\th1 = h0\n\t\t\t\th0 = next\n\t\t\t\t\n\t\t\t}\n\n\t\t\tfor( let j = 20; j < 40; ++j ) {\n\t\t\t\t\n\t\t\t\tconst shuffle = sponge[j-3] ^ sponge[j-8] ^ sponge[j-14] ^ sponge[j-16]\n\t\t\t\tsponge[j] = shuffle << 1 | shuffle >>> 31\n\t\t\t\t\n\t\t\t\tconst next = ( ( h1 ^ h2 ^ h3 ) + 1859775393 + h4 + ( sponge[j] >>> 0 ) + (( h0 << 5 )|( h0 >>> 27 )) )|0\n\n\t\t\t\th4 = h3\n\t\t\t\th3 = h2\n\t\t\t\th2 = ( h1 << 30 )|( h1 >>> 2 )\n\t\t\t\th1 = h0\n\t\t\t\th0 = next\n\t\t\t\t\n\t\t\t}\n\n\t\t\tfor( let j = 40; j < 60; ++j ) {\n\t\t\t\t\n\t\t\t\tconst shuffle = sponge[j-3] ^ sponge[j-8] ^ sponge[j-14] ^ sponge[j-16]\n\t\t\t\tsponge[j] = shuffle << 1 | shuffle >>> 31\n\t\t\t\t\n\t\t\t\tconst next = ( ( h1 & h2 | h1 & h3 | h2 & h3 ) - 1894007588 + h4 + ( sponge[j] >>> 0 ) + (( h0 << 5 )|( h0 >>> 27 )) )|0\n\n\t\t\t\th4 = h3\n\t\t\t\th3 = h2\n\t\t\t\th2 = ( h1 << 30 )|( h1 >>> 2 )\n\t\t\t\th1 = h0\n\t\t\t\th0 = next\n\t\t\t\t\n\t\t\t}\n\n\t\t\tfor( let j = 60; j < 80; ++j ) {\n\t\t\t\t\n\t\t\t\tconst shuffle = sponge[j-3] ^ sponge[j-8] ^ sponge[j-14] ^ sponge[j-16]\n\t\t\t\tsponge[j] = shuffle << 1 | shuffle >>> 31\n\t\t\t\t\n\t\t\t\tconst next = ( ( h1 ^ h2 ^ h3 ) - 899497514 + h4 + ( sponge[j] >>> 0 ) + (( h0 << 5 )|( h0 >>> 27 )) )|0\n\n\t\t\t\th4 = h3\n\t\t\t\th3 = h2\n\t\t\t\th2 = ( h1 << 30 )|( h1 >>> 2 )\n\t\t\t\th1 = h0\n\t\t\t\th0 = next\n\t\t\t\t\n\t\t\t}\n\n\t\t\thash[0] += h0\n\t\t\thash[1] += h1\n\t\t\thash[2] += h2\n\t\t\thash[3] += h3\n\t\t\thash[4] += h4\n\t\t\t\n\t\t}\n\t\t\n\t\tfor( let i = 0; i < 20; ++i ) {\n\t\t\tconst word = hash[i]\n\t\t\thash[i] = word << 24 | word << 8 & 0xFF0000 | word >>> 8 & 0xFF00 | word >>> 24 & 0xFF // BE -> LE\n\t\t}\n\n\t\treturn new Uint8Array( hash.buffer )\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport class $mol_rest_server extends $mol_object {\n\t\t\n\t\t@ $mol_mem\n\t\tport() {\n\t\t\treturn 0\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tstart() {\n\t\t\tthis.http_server()\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\thttp_server() {\n\t\t\t\n\t\t\tconst server = $node.http.createServer( ( req, res )=> {\n\t\t\t\tres.statusCode = 400\n\t\t\t\t$mol_wire_async( this ).http_income( req, res )\n\t\t\t} )\n\t\t\t\n\t\t\tserver.on( 'upgrade',\n\t\t\t\t( req, sock, head: Buffer< ArrayBuffer > )=> $mol_wire_async( this ).ws_upgrade( req, sock, head )\n\t\t\t)\n\t\t\t\n\t\t\tserver.listen( this.port(), ()=> {\n\t\t\t\t\n\t\t\t\tconst ifaces = Object.entries( $node.os.networkInterfaces() )\n\t\t\t\t\t.flatMap( ([ type, ifaces ])=> ifaces?.map(\n\t\t\t\t\t\tiface => iface.family === 'IPv6' ? `[${iface.address}]` : iface.address\n\t\t\t\t\t) ?? [] )\n\t\t\t\t\n\t\t\t\tthis.$.$mol_log3_done({\n\t\t\t\t\tplace: this,\n\t\t\t\t\tmessage: 'HTTP Server Started',\n\t\t\t\t\tlinks: ifaces.map( iface => `http://${ iface }:${ this.port() }/` ),\n\t\t\t\t})\n\t\t\t\t\n\t\t\t} )\n\t\t\t\n\t\t\treturn server\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\thttp_income(\n\t\t\treq: InstanceType< $node['http']['IncomingMessage'] >,\n\t\t\tres: InstanceType< $node['http']['ServerResponse'] >,\n\t\t) {\n\t\t\t\n\t\t\tconst port = $mol_rest_port_http.make({ output: res })\n\t\t\tconst msg = $mol_rest_message_http.make({ port, input: req })\n\t\t\t\n\t\t\t$mol_wire_sync( this.$ ).$mol_log3_rise({\n\t\t\t\tplace: this,\n\t\t\t\tmessage: msg.method(),\n\t\t\t\turl: msg.uri(),\n\t\t\t\tremote: req.socket.remoteAddress + ':' + req.socket.remotePort\n\t\t\t})\n\t\t\t\n\t\t\t$mol_wire_sync( res ).setHeader( 'Access-Control-Allow-Origin', '*' )\n\t\t\t$mol_wire_sync( res ).setHeader( 'Access-Control-Allow-Methods', '*' )\n\t\t\t$mol_wire_sync( res ).setHeader( 'Access-Control-Allow-Headers', '*' )\n\t\t\t\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\t$mol_wire_sync( this.root() ).REQUEST( msg )\n\t\t\t\t\n\t\t\t} catch( error: any ) {\n\t\t\t\t\n\t\t\t\tif( $mol_promise_like( error ) ) $mol_fail_hidden( error )\n\t\t\t\t\t\n\t\t\t\t$mol_wire_sync( $$ ).$mol_log3_fail({\n\t\t\t\t\tplace: this,\n\t\t\t\t\tmessage: error.message ?? '',\n\t\t\t\t\tstack: error.stack,\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\t$mol_wire_sync( res ).writeHead( 500, error.name || 'Server Error' )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tres.end()\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tws_upgrade(\n\t\t\treq: InstanceType< $node['http']['IncomingMessage'] >,\n\t\t\tsocket: InstanceType< $node['stream']['Duplex'] >,\n\t\t\thead: Buffer< ArrayBuffer >,\n\t\t) {\n\t\t\t\n\t\t\tconst port = $mol_rest_port_ws_node.make({ socket })\n\t\t\tconst upgrade = $mol_rest_message_http.make({ port, input: req })\n\t\t\t\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\t$mol_wire_sync( this.root() ).REQUEST(\n\t\t\t\t\tupgrade.derive( 'OPEN', null )\n\t\t\t\t)\n\t\t\t\t\n\t\t\t} catch( error: any ) {\n\t\t\t\t\n\t\t\t\tif( $mol_promise_like( error ) ) $mol_fail_hidden( error )\n\t\t\t\t\t\n\t\t\t\t$mol_wire_sync( $$ ).$mol_log3_fail({\n\t\t\t\t\tplace: this,\n\t\t\t\t\tmessage: error.message ?? '',\n\t\t\t\t\tstack: error.stack,\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tsocket.end()\n\t\t\t\treturn\n\t\t\t}\n\t\t\t\n\t\t\tconst onclose = $mol_wire_async( ()=> {\n\t\t\t\t\n\t\t\t\t$mol_wire_sync( this.$ ).$mol_log3_done({\n\t\t\t\t\tplace: this,\n\t\t\t\t\tmessage: 'CLOSE',\n\t\t\t\t\turl: upgrade.uri(),\n\t\t\t\t\tport: $mol_key( port ),\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\ttry {\n\t\t\t\t\n\t\t\t\t\t$mol_wire_sync( this.root() ).REQUEST(\n\t\t\t\t\t\tupgrade.derive( 'CLOSE', null )\n\t\t\t\t\t)\n\t\t\t\t\t\n\t\t\t\t} catch( error: any ) {\n\t\t\t\t\t\n\t\t\t\t\tif( $mol_promise_like( error ) ) $mol_fail_hidden( error )\n\t\t\t\t\t\t\n\t\t\t\t\t$mol_wire_sync( $$ ).$mol_log3_fail({\n\t\t\t\t\t\tplace: this,\n\t\t\t\t\t\tmessage: error.message ?? '',\n\t\t\t\t\t\tstack: error.stack,\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} )\n\t\t\t\n\t\t\tsocket.on( 'end', onclose )\n\t\t\tsocket.on( 'error', onclose )\n\t\t\t\n\t\t\tsocket.on( 'data', ( chunk: Buffer< ArrayBuffer > )=> this.ws_income( chunk, upgrade, socket ) )\n\t\t\t\n\t\t\tconst key_in = req.headers[\"sec-websocket-key\"]\n\t\t\tconst magic = '258EAFA5-E914-47DA-95CA-C5AB0DC85B11'\n\t\t\tconst key_out =  $mol_base64_encode( $mol_crypto_hash( $mol_charset_encode( key_in + magic ) ) )\n\t\t\t\n\t\t\tsocket.write(\n\t\t\t\t'HTTP/1.1 101 WS Handshaked\\r\\n' +\n\t\t\t\t'Upgrade: WebSocket\\r\\n' +\n\t\t\t\t'Connection: Upgrade\\r\\n' +\n\t\t\t\t`Sec-WebSocket-Accept: ${key_out}\\r\\n` +\n\t\t\t\t'\\r\\n'\n\t\t\t);\n\t\t\t\n\t\t\t$mol_wire_sync( this.$ ).$mol_log3_come({\n\t\t\t\tplace: this,\n\t\t\t\tmessage: 'OPEN',\n\t\t\t\turl: upgrade.uri(),\n\t\t\t\tport: $mol_key( port ),\n\t\t\t})\n\t\t\t\n\t\t}\n\t\t\n\t\t_ws_income_chunks = new WeakMap< InstanceType< typeof $node.stream.Duplex >, Uint8Array< ArrayBuffer >[] >\n\t\t_ws_income_frames = new WeakMap< InstanceType< typeof $node.stream.Duplex >, ( string | Uint8Array< ArrayBuffer > )[] >\n\t\t\n\t\tasync ws_income(\n\t\t\tchunk: Buffer< ArrayBuffer >,\n\t\t\tupgrade: $mol_rest_message,\n\t\t\tsock: InstanceType< typeof $node.stream.Duplex >,\n\t\t) {\n\t\t\t\n\t\t\tsock.pause()\n\t\t\t\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tlet chunks = this._ws_income_chunks.get( sock )!\n\t\t\t\tif( !chunks ) this._ws_income_chunks.set( sock, chunks = [] )\n\t\t\t\t\n\t\t\t\tchunks.push( chunk )\n\t\t\t\tconst patial_size = chunks.reduce( ( sum, buf )=> sum + buf.byteLength, 0 )\n\t\t\t\t\n\t\t\t\tlet frame = $mol_websocket_frame.from( chunks[0] )\n\t\t\t\tconst msg_size = frame.size() + frame.data().size\n\t\t\t\t\n\t\t\t\tif( msg_size > patial_size ) {\n\t\t\t\t\tsetTimeout( ()=> sock.resume() )\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tchunk = Buffer.alloc( patial_size )\n\t\t\t\tlet offset = 0\n\t\t\t\tfor( const buf of chunks.splice( 0 ) ) {\n\t\t\t\t\tchunk.set( buf, offset )\n\t\t\t\t\toffset += buf.byteLength\n\t\t\t\t}\n\t\t\t\tframe = $mol_websocket_frame.from( chunk )\n\t\t\t\t\n\t\t\t\tif( msg_size < chunk.byteLength ) {\n\t\t\t\t\tconst tail = new Uint8Array( chunk.buffer, chunk.byteOffset + msg_size )\n\t\t\t\t\tsock.unshift( tail )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tlet data: string | Uint8Array< ArrayBuffer > = new Uint8Array( chunk.buffer, chunk.byteOffset + frame.size(), frame.data().size )\n\t\t\t\t\n\t\t\t\tif( frame.data().mask ) {\n\t\t\t\t\tconst mask = frame.mask()\n\t\t\t\t\tfor( let i = 0; i < data.length; ++i ) {\n\t\t\t\t\t\tdata[ i ] ^= mask[ i % 4 ]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst op = frame.kind().op\n\t\t\t\tif( op === 'txt' ) data = $mol_charset_decode( data )\n\t\t\t\t\n\t\t\t\tlet frames = this._ws_income_frames.get( sock )!\n\t\t\t\tif( !frames ) this._ws_income_frames.set( sock, frames = [] )\n\t\t\t\t\n\t\t\t\tif( !frame.kind().fin ) {\n\t\t\t\t\tframes.push( data )\n\t\t\t\t\tsetTimeout( ()=> sock.resume() )\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( frames.length ) {\n\t\t\t\t\tframes.push( data )\n\t\t\t\t\tif( typeof frames[0] === 'string' ) {\n\t\t\t\t\t\tdata = ( frames as string[] ).join( '' )\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst size = ( frames as Uint8Array< ArrayBuffer >[] ).reduce( ( s, f )=> s + f.byteLength, 0 )\n\t\t\t\t\t\tdata = new Uint8Array( size )\n\t\t\t\t\t\tlet offset = 0\n\t\t\t\t\t\tfor( const frame of ( frames as Uint8Array< ArrayBuffer >[] ) ) {\n\t\t\t\t\t\t\tdata.set( frame, offset )\n\t\t\t\t\t\t\toffset += frame.byteLength\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tframes.length = 0\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( op !== 'txt' && op !== 'bin' && op !== 'con' ) {\n\t\t\t\t\tsetTimeout( ()=> sock.resume() )\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\n\t\t\t\tconst message = upgrade.derive( 'POST', data )\n\t\t\t\t\n\t\t\t\tif( data.length !== 0 ) {\n\t\t\t\t\tthis.$.$mol_log3_rise({\n\t\t\t\t\t\tplace: this,\n\t\t\t\t\t\tmessage: message.method(),\n\t\t\t\t\t\tport: $mol_key( message.port ),\n\t\t\t\t\t\turl: message.uri(),\n\t\t\t\t\t\tframe: frame.toString(),\n\t\t\t\t\t})\n\t\t\t\t\tawait $mol_wire_async( this.root() ).REQUEST( message )\n\t\t\t\t}\n\t\t\t\n\t\t\t\tsetTimeout( ()=> sock.resume() )\n\t\t\t\t\n\t\t\t} catch( error: any ) {\n\t\t\t\t\n\t\t\t\tif( $mol_promise_like( error ) ) $mol_fail_hidden( error )\n\t\t\t\t\n\t\t\t\t$$.$mol_log3_fail({\n\t\t\t\t\tplace: this,\n\t\t\t\t\tmessage: error.message ?? '',\n\t\t\t\t\tstack: error.stack,\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tsock.end()\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\troot( resource?: $mol_rest_resource ) {\n\t\t\t$mol_wire_solid()\n\t\t\treturn resource ?? $mol_rest_resource.make({})\n\t\t}\n\t\t\n\t}\n\t\n}\n","/** @jsx $mol_jsx */\nnamespace $ {\n\t\n\texport class $mol_rest_resource_fs extends $mol_rest_resource {\n\t\t\n\t\t@ $mol_memo.method\n\t\t_root() { return $mol_file.relative( __dirname ) }\n\t\t\n\t\tGET( msg: $mol_rest_message ) {\n\t\t\t\n\t\t\tconst root = this._root()\n\t\t\tconst file = root.resolve( msg.uri().pathname )\n\t\t\tif( !file.exists() ) return msg.reply( null, { code: 404 } )\n\t\t\t\n\t\t\tswitch( file.type() ) {\n\t\t\t\t\n\t\t\t\tcase 'file': {\n\t\t\t\t\t\n\t\t\t\t\treturn msg.reply( file.buffer(), {\n\t\t\t\t\t\ttype: $mol_file_extensions[ file.ext().replace( /^.*\\./, '' ) ],\n\t\t\t\t\t} )\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tcase 'dir': {\n\t\t\t\t\t\n\t\t\t\t\tconst index = file.resolve( './index.html' )\n\t\t\t\t\tif( index.exists() ) return msg.reply( index.buffer(), { type: 'text/html' } )\n\t\t\t\t\t\n\t\t\t\t\tconst resources = Object.getOwnPropertyNames( Object.getPrototypeOf( this ) )\n\t\t\t\t\n\t\t\t\t\treturn msg.reply( <body>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<style>{`\n\t\t\t\t\t\t\tbody { background: black; font: 1rem/1.5rem monospace }\n\t\t\t\t\t\t\ta { color: royalblue; text-decoration: none }\n\t\t\t\t\t\t\ta:hover { color: skyblue }\n\t\t\t\t\t\t`}</style>\n\t\t\t\t\t\t\n\t\t\t\t\t\t{ resources.map( res => {\n\t\t\t\t\t\t\tif( res === 'constructor' ) return null\n\t\t\t\t\t\t\tif( !/^[a-z][a-z_-]*$/.test( res ) ) return null\n\t\t\t\t\t\t\tconst uri = root.resolve( res )\n\t\t\t\t\t\t\treturn <a href={ uri.relate( file ) + '/' }>/{res}/<br/></a>\n\t\t\t\t\t\t} ) }\n\t\t\t\t\t\t\n\t\t\t\t\t\t<a href=\"../\">../<br/></a>\n\t\t\t\t\t\t\n\t\t\t\t\t\t{ file.sub().map( kid => {\n\t\t\t\t\t\t\tconst uri = kid.name() + ( kid.type() === 'dir' ? '/' : '' )\n\t\t\t\t\t\t\treturn <a href={uri}>{uri}<br/></a>\n\t\t\t\t\t\t} ) }\n\t\t\t\t\t\t\n\t\t\t\t\t</body> )\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t/** Reactive Set */\n\texport class $mol_wire_set< Value > extends Set< Value > {\n\n\t\tpub = new $mol_wire_pub\n\t\t\n\t\t// Accessors\n\t\t\n\t\thas( value: Value ) {\n\t\t\tthis.pub.promote()\n\t\t\treturn super.has( value )\n\t\t}\n\t\t\n\t\tentries() {\n\t\t\tthis.pub.promote()\n\t\t\treturn super.entries()\n\t\t}\n\t\t\n\t\tkeys() {\n\t\t\tthis.pub.promote()\n\t\t\treturn super.keys()\n\t\t}\n\t\t\n\t\tvalues() {\n\t\t\tthis.pub.promote()\n\t\t\treturn super.values()\n\t\t}\n\t\t\n\t\tforEach(\n\t\t\ttask: ( value: Value, value2: Value, set: Set< Value > ) => void,\n\t\t\tself?: any\n\t\t) {\n\t\t\tthis.pub.promote()\n\t\t\tsuper.forEach( task, self )\n\t\t}\n\t\t\n\t\t[Symbol.iterator]() {\n\t\t\tthis.pub.promote()\n\t\t\treturn super[Symbol.iterator]()\n\t\t}\n\t\t\n\t\tget size() {\n\t\t\tthis.pub.promote()\n\t\t\treturn super.size\t\n\t\t}\n\n\t\t// Mutators\n\n\t\tadd( value: Value ) {\n\t\t\tif( super.has( value ) ) return this\n\t\t\tsuper.add( value )\n\t\t\tthis.pub.emit()\n\t\t\treturn this\n\t\t}\n\n\t\tdelete( value: Value ) {\n\t\t\tconst res = super.delete( value )\n\t\t\tif( res ) this.pub.emit()\n\t\t\treturn res\n\t\t}\n\t\t\n\t\tclear() {\n\t\t\tif( !super.size ) return\n\t\t\tsuper.clear()\n\t\t\tthis.pub.emit()\n\t\t}\n\n\t\t// Extensions\n\t\t\n\t\titem( val: Value, next?: boolean ) {\n\t\t\t\n\t\t\tif( next === undefined ) return this.has( val )\n\t\t\t\n\t\t\tif( next ) this.add( val )\n\t\t\telse this.delete( val )\n\t\t\t\n\t\t\treturn next\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\t\n\ttype $mol_data_tagged_type< Value, Tag extends PropertyKey > = Value & { [ Key in Tag ]: Value }\n\t\n\ttype $mol_data_tagged_parser< Input, Output > = {\n\t\tValue: Output\n\t} & (\n\t\t( val: $mol_data_tagged_type< Input, never > )=> Output\n\t)\n\n\t/**\n\t * Checks for given runtype and returns tagged version of returned type.\n\t * @see https://mol.hyoo.ru/#!section=demos/demo=mol_data_tagged_demo\n\t */\n\texport function $mol_data_tagged<\n\t\tConfig extends Record< string, $mol_data_value >,\n\t>(\n\t\tconfig: Config\n\t) {\n\t\treturn config as any as {\n\t\t\t[ Type in keyof Config ]: $mol_data_tagged_parser<\n\t\t\t\tParameters< Config[ Type ] >[0],\n\t\t\t\t$mol_data_tagged_type< ReturnType< Config[ Type ] >, Type >\n\t\t\t>\n\t\t}\n\t}\n\n}\n","namespace $ {\n\t\n\texport const { $hyoo_crus_ref } = $mol_data_tagged({ $hyoo_crus_ref: ( val: string | symbol )=> {\n\t\tif( typeof val === 'string' ) val = Symbol.for( val.replace( /_+$/, '' ) )\n\t\tif( /^(([a-zæA-ZÆ0-9]{8})?_){0,3}([a-zæA-ZÆ0-9]{8})?$/.test( val.description! ) ) return val\n\t\t$mol_fail( new Error( `Wrong ref (${ val.description! })` ) )\n\t} })\n\t\n\t/** Reference to Lord/Land/Node. May be absolute or relative. */\n\texport type $hyoo_crus_ref = typeof $hyoo_crus_ref.Value\n\n\t/** returns string if it's valid ref or return empty string */\n\texport function $hyoo_crus_ref_check( val: string ) {\n\t\ttry {\n\t\t\t$hyoo_crus_ref( val )\n\t\t\treturn val\n\t\t} catch {\n\t\t\treturn ''\n\t\t}\n\t}\n\t\n\t/** Lord ref of any ref */\n\texport function $hyoo_crus_ref_lord( ref: $hyoo_crus_ref ) {\n\t\treturn $hyoo_crus_ref( ref.description!.split( '_' ).slice( 0, 2 ).join( '_' ) )\n\t}\n\n\t/** Land ref of any ref */\n\texport function $hyoo_crus_ref_land( ref: $hyoo_crus_ref ) {\n\t\treturn $hyoo_crus_ref( ref.description!.split( '_' ).slice( 0, 3 ).join( '_' ).replace( /_$/, '' ) )\n\t}\n\n\t/** Peer part of Ref */\n\texport function $hyoo_crus_ref_peer( ref: $hyoo_crus_ref ) {\n\t\treturn ref.description!.split( '_' )[ 0 ] ?? ''\n\t}\n\t\n\t/** Area part of Node Ref */\n\texport function $hyoo_crus_ref_area( ref: $hyoo_crus_ref ) {\n\t\treturn ref.description!.split( '_' )[ 2 ] ?? ''\n\t}\n\n\t/** Head part of Node Ref */\n\texport function $hyoo_crus_ref_head( ref: $hyoo_crus_ref ) {\n\t\treturn ref.description!.split( '_' )[ 3 ] ?? ''\n\t}\n\n\t/** Encode to binary (12/18/24 bytes) */\n\texport function $hyoo_crus_ref_encode( ref: $hyoo_crus_ref ) {\n\t\treturn $mol_base64_ae_decode(\n\t\t\t( ref.description! || '_' )\n\t\t\t\t.split( '_' )\n\t\t\t\t.map( numb => numb || 'AAAAAAAA' )\n\t\t\t\t.join( '' )\n\t\t)\n\t}\n\n\t/** Read from binary (12/18 bytes) */\n\texport function $hyoo_crus_ref_decode( bin: Uint8Array ) {\n\t\treturn $hyoo_crus_ref(\n\t\t\t[ ... $mol_base64_ae_encode( bin ).match( /(.{8})/g ) ?? [] ]\n\t\t\t\t.map( numb => numb === 'AAAAAAAA' ? '' : numb )\n\t\t\t\t.join( '_' ).replace( /_+$/, '' )\n\t\t)\n\t}\n\n\t/** Make Node Ref relative to base Land: `___QWERTYUI` */\n\texport function $hyoo_crus_ref_relate( base: $hyoo_crus_ref, ref: $hyoo_crus_ref ) {\n\t\tbase = $hyoo_crus_ref_land( base )\n\t\tif( $hyoo_crus_ref_land( ref ) !== base ) return ref\n\t\tconst head = $hyoo_crus_ref_head( ref )\n\t\treturn $hyoo_crus_ref(  head ? '___' + head : '' )\n\t}\n\n\t/** Make absolute Node Ref from relative (`___QWERTYUI`) using base Land Ref. */\n\texport function $hyoo_crus_ref_resolve( base: $hyoo_crus_ref, ref: $hyoo_crus_ref ) {\n\t\t\n\t\tif( !ref.description ) return $hyoo_crus_ref_land( base )\n\t\tif( !ref.description!.startsWith( '___' ) ) return ref\n\t\t\n\t\tconst parts = base.description!.split( '_' ).slice( 0, 3 )\n\t\twhile( parts.length < 3 ) parts.push( '' )\n\t\tparts.push( ref.description!.slice( 3 ) )\n\t\t\n\t\treturn $hyoo_crus_ref( parts.join( '_' ) )\n\t}\t\n\n}\n","namespace $ {\n\texport function $mol_guard_defined<T>(value: T): value is NonNullable<T> {\n\t\treturn value !== null && value !== undefined\n\t}\n}\n","namespace $ {\n\n\texport class $mol_time_base {\n\n\t\tstatic patterns = {} as Record< string , ( arg : any )=> string >\n\n\t\tstatic formatter( pattern : string ) {\n\n\t\t\tif( this.patterns[ pattern ] ) return this.patterns[ pattern ]\n\n\t\t\tvar tokens = Object.keys( this.patterns )\n\t\t\t\t.sort()\n\t\t\t\t.reverse()\n\t\t\t\t.map( ( token : string ) => token.replace( /([-+*.\\[\\]()\\^])/g , '\\\\$1' ) )\n\t\t\tvar lexer = RegExp( '(.*?)(' + tokens.join( '|' ) + '|$)', 'g' )\n\n\t\t\tvar funcs = [] as ( ( arg : any )=> string )[]\n\n\t\t\tpattern.replace( lexer, ( str : string , text : string , token : string ) => {\n\t\t\t\tif( text ) funcs.push( () => text )\n\t\t\t\tif( token ) funcs.push( this.patterns[ token ] )\n\t\t\t\treturn str\n\t\t\t} )\n\n\t\t\treturn this.patterns[ pattern ] = ( arg : any )=> {\n\t\t\t\treturn funcs.reduce( ( res , func )=> res + func( arg ) , '' )\n\t\t\t}\n\t\t\n\t\t}\n\n\t\ttoString( pattern : string ) : string {\n\t\t\tconst Base = this.constructor as typeof $mol_time_base\n\t\t\tconst formatter = Base.formatter( pattern )\n\t\t\treturn formatter( this )\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\n\texport type $mol_time_duration_config = number | string | {\n\t\tyear? : number\n\t\tmonth? : number\n\t\tday? : number\n\t\thour? : number\n\t\tminute? : number\n\t\tsecond? : number\n\t}\n\n\t/**\n\t * Small, simple, powerful, and fast TypeScript/JavaScript library for proper date/time/duration/interval arithmetic.\n\t *\n\t * Immutable iso8601 time duration representation.\n\t * @see http://localhost:9080/mol/app/docs/-/test.html#!demo=mol_time_demo\n\t */\n\texport class $mol_time_duration extends $mol_time_base {\n\n\t\tconstructor( config : $mol_time_duration_config = 0 ) {\n\t\t\t\n\t\t\tsuper()\n\t\t\t\n\t\t\tif( typeof config === 'number' ) {\n\t\t\t\tif( !Number.isFinite( config ) ) throw new RangeError( `Wrong ms count` )\n\t\t\t\tthis.second = config / 1000\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif( typeof config === 'string' ) {\n\t\t\t\t\n\t\t\t\tif( config === 'Z' ) {\n\t\t\t\t\t\n\t\t\t\t\tthis.hour = 0\n\t\t\t\t\tthis.minute = 0\n\t\t\t\t\t\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tduration: {\n\t\t\t\t\tconst parser = /^(-?)P(?:([+-]?\\d+(?:\\.\\d+)?)Y)?(?:([+-]?\\d+(?:\\.\\d+)?)M)?(?:([+-]?\\d+(?:\\.\\d+)?)D)?(?:T(?:([+-]?\\d+(?:\\.\\d+)?)h)?(?:([+-]?\\d+(?:\\.\\d+)?)m)?(?:([+-]?\\d+(?:\\.\\d+)?)s)?)?$/i\n\t\t\t\t\t\n\t\t\t\t\tconst found = parser.exec( config )\n\t\t\t\t\tif( !found ) break duration\n\t\t\t\t\t\t\n\t\t\t\t\tconst sign = found[1] ? -1 : 1\n\t\t\t\t\tif( found[2] ) this.year = sign * Number( found[2] )\n\t\t\t\t\tif( found[3] ) this.month = sign * Number( found[3] )\n\t\t\t\t\tif( found[4] ) this.day = sign * Number( found[4] )\n\t\t\t\t\tif( found[5] ) this.hour = sign * Number( found[5] )\n\t\t\t\t\tif( found[6] ) this.minute = sign * Number( found[6] )\n\t\t\t\t\tif( found[7] ) this.second = sign * Number( found[7] )\n\t\t\t\t\t\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\toffset: {\n\t\t\t\t\tvar parser = /^[+-](\\d\\d)(?::?(\\d\\d))?$/i\n\t\t\t\t\t\n\t\t\t\t\tvar found = parser.exec( config )\n\t\t\t\t\tif( !found ) break offset\n\t\t\t\t\t\t\n\t\t\t\t\tif( found[1] ) this.hour = Number( found[1] )\n\t\t\t\t\tif( found[2] ) this.minute = Number( found[2] )\n\t\t\t\t\t\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tthrow new Error( `Can not parse time duration (${ config })` )\n\t\t\t}\n\t\t\t\n\t\t\tthis.year = config.year || 0\n\t\t\tthis.month = config.month || 0\n\t\t\tthis.day = config.day || 0\n\t\t\tthis.hour = config.hour || 0\n\t\t\tthis.minute = config.minute || 0\n\t\t\tthis.second = config.second || 0\n\t\t}\n\n\t\treadonly year : number= 0\n\t\treadonly month : number = 0\n\t\treadonly day : number = 0\n\t\treadonly hour : number = 0\n\t\treadonly minute : number = 0\n\t\treadonly second : number = 0\n\t\t\n\t\tget normal() {\n\t\t\t\n\t\t\tlet second = this.second ?? 0\n\t\t\tlet minute = this.minute ?? 0\n\t\t\tlet hour = this.hour ?? 0\n\t\t\tlet day = this.day ?? 0\n\t\t\t\n\t\t\tminute += Math.floor( second / 60 )\n\t\t\tsecond = second % 60\n\t\t\t\n\t\t\thour += Math.floor( minute / 60 )\n\t\t\tminute = minute % 60\n\t\t\t\n\t\t\tday += Math.floor( hour / 24 )\n\t\t\thour = hour % 24\n\t\t\t\n\t\t\treturn new $mol_time_duration({\n\t\t\t\tyear: this.year,\n\t\t\t\tmonth: this.month,\n\t\t\t\tday: day,\n\t\t\t\thour: hour,\n\t\t\t\tminute: minute,\n\t\t\t\tsecond: second,\n\t\t\t})\n\t\t\t\n\t\t}\n\n\t\tsumm( config : $mol_time_duration_config ) {\n\t\t\tconst duration = new $mol_time_duration( config )\n\t\t\t\n\t\t\treturn new $mol_time_duration({\n\t\t\t\tyear : this.year + duration.year ,\n\t\t\t\tmonth : this.month + duration.month ,\n\t\t\t\tday : this.day + duration.day ,\n\t\t\t\thour : this.hour + duration.hour ,\n\t\t\t\tminute : this.minute + duration.minute ,\n\t\t\t\tsecond : this.second + duration.second ,\n\t\t\t})\n\t\t}\n\n\t\tmult( numb : number ) {\n\t\t\treturn new $mol_time_duration({\n\t\t\t\tyear : this.year && this.year * numb ,\n\t\t\t\tmonth : this.month && this.month * numb ,\n\t\t\t\tday : this.day && this.day * numb ,\n\t\t\t\thour : this.hour && this.hour * numb ,\n\t\t\t\tminute : this.minute && this.minute * numb ,\n\t\t\t\tsecond : this.second && this.second * numb ,\n\t\t\t})\n\t\t}\n\n\t\tcount( config : $mol_time_duration_config ) {\n\t\t\tconst duration = new $mol_time_duration( config )\n\t\t\treturn this.valueOf() / duration.valueOf()\n\t\t}\n\n\t\tvalueOf() {\n\t\t\tvar day = this.year * 365 + this.month * 30.4 + this.day\n\t\t\tvar second = ( ( day * 24 + this.hour ) * 60 + this.minute ) * 60 + this.second\n\t\t\treturn second * 1000\n\t\t}\n\n\t\ttoJSON() { return this.toString() }\n\n\t\ttoString( pattern = 'P#Y#M#DT#h#m#s' ) {\n\t\t\treturn super.toString( pattern )\n\t\t}\n\n\t\t[ Symbol.toPrimitive ]( mode: 'default' | 'number' | 'string' ) {\n\t\t\treturn mode === 'number' ? this.valueOf() : this.toString()\n\t\t}\n\t\t\n\t\tstatic patterns = {\n\n\t\t\t'#Y' : ( duration : $mol_time_duration )=> {\n\t\t\t\tif( !duration.year ) return ''\n\t\t\t\treturn duration.year + 'Y'\n\t\t\t} ,\n\t\t\t\n\t\t\t'#M' : ( duration : $mol_time_duration )=> {\n\t\t\t\tif( !duration.month ) return ''\n\t\t\t\treturn duration.month + 'M'\n\t\t\t} ,\n\t\t\t\n\t\t\t'#D' : ( duration : $mol_time_duration )=> {\n\t\t\t\tif( !duration.day ) return ''\n\t\t\t\treturn duration.day + 'D'\n\t\t\t} ,\n\t\t\t\n\t\t\t'#h' : ( duration : $mol_time_duration )=> {\n\t\t\t\tif( !duration.hour ) return ''\n\t\t\t\treturn duration.hour + 'H'\n\t\t\t} ,\n\t\t\t\n\t\t\t'#m' : ( duration : $mol_time_duration )=> {\n\t\t\t\tif( !duration.minute ) return ''\n\t\t\t\treturn duration.minute + 'M'\n\t\t\t} ,\n\t\t\t\n\t\t\t'#s' : ( duration : $mol_time_duration )=> {\n\t\t\t\tif( !duration.second ) return ''\n\t\t\t\treturn duration.second + 'S'\n\t\t\t} ,\n\t\t\t\n\t\t\t'hh' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.hour == null ) return ''\n\t\t\t\treturn String( 100 + moment.hour ).slice(1)\n\t\t\t} ,\n\t\t\t\n\t\t\t'h' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.hour == null ) return ''\n\t\t\t\treturn String( moment.hour )\n\t\t\t} ,\n\t\t\t\n\t\t\t':mm' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.minute == null ) return ''\n\t\t\t\treturn ':' + $mol_time_moment.patterns[ 'mm' ]( moment )\n\t\t\t} ,\n\t\t\t\n\t\t\t'mm' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.minute == null ) return ''\n\t\t\t\treturn String( 100 + moment.minute ).slice(1)\n\t\t\t} ,\n\t\t\t\n\t\t\t'm' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.minute == null ) return ''\n\t\t\t\treturn String( moment.minute )\n\t\t\t},\n\t\t\t\n\t\t\t':ss' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.second == null ) return ''\n\t\t\t\treturn ':' + $mol_time_moment.patterns[ 'ss' ]( moment )\n\t\t\t},\n\t\t\t\n\t\t\t'ss' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.second == null ) return ''\n\t\t\t\treturn String( 100 + moment.second | 0 ).slice(1)\n\t\t\t},\n\t\t\t\n\t\t\t's' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.second == null ) return ''\n\t\t\t\treturn String( moment.second | 0 )\n\t\t\t} ,\n\t\t\t\n\t\t\t'.sss' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.second == null ) return ''\n\t\t\t\t// if( moment.second === ( moment.second | 0 ) ) return ''\n\t\t\t\treturn '.' + $mol_time_moment.patterns[ 'sss' ]( moment )\n\t\t\t},\n\t\t\t\n\t\t\t'sss' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.second == null ) return ''\n\t\t\t\tconst millisecond = ( moment.second - Math.trunc( moment.second ) ).toFixed( 3 )\n\t\t\t\treturn millisecond.slice(2)\n\t\t\t},\n\t\t\t\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\n\texport enum $mol_time_moment_weekdays {\n\t\tmonday,\n\t\ttuesday,\n\t\twednesday,\n\t\tthursday,\n\t\tfriday,\n\t\tsaturday,\n\t\tsunday\n\t}\n\t\n\texport type $mol_time_moment_config = number | Date | string | {\n\t\tyear? : number\n\t\tmonth? : number\n\t\tday? : number\n\t\thour? : number\n\t\tminute? : number\n\t\tsecond? : number\n\t\toffset? : $mol_time_duration_config\n\t}\n\t\n\tfunction numb( str: string, max: number ) {\n\t\tconst numb = Number( str )\n\t\tif( numb < max ) return numb\n\t\t$mol_fail( new Error( `Wrong time component ${ str }` ) )\n\t}\n\n\t/**\n\t * Small, simple, powerful, and fast TypeScript/JavaScript library for proper date/time/duration/interval arithmetic.\n\t *\n\t * Immutable iso8601 time moment representation.\n\t * @see http://localhost:9080/mol/app/docs/-/test.html#!demo=mol_time_demo\n\t */\n\texport class $mol_time_moment extends $mol_time_base {\n\n\t\tconstructor( config : $mol_time_moment_config = new Date ) {\n\t\t\t\n\t\t\tsuper()\n\n\t\t\tif( typeof config === 'number' ) {\n\t\t\t\tconfig = new Date( config )\n\t\t\t\tif( Number.isNaN( config.valueOf() ) ) throw new RangeError( `Wrong ms count` )\n\t\t\t}\n\t\t\t\n\t\t\tif( typeof config === 'string' ) {\n\t\t\t\t\n\t\t\t\tconst parsed = /^(?:(\\d\\d?\\d?\\d?)(?:-?(\\d\\d?)(?:-?(\\d\\d?))?)?)?(?:[T ](?:(\\d\\d?)(?::?(\\d\\d?)(?::?(\\d\\d?(?:\\.\\d+)?))?)?)?(Z|[\\+\\-]\\d\\d?(?::?(?:\\d\\d?)?)?)?)?$/.exec( config )\n\t\t\t\tif( !parsed ) throw new Error( `Can not parse time moment (${ config })` )\n\n\t\t\t\tif( parsed[1] ) this.year = numb( parsed[1], 9999 )\n\t\t\t\tif( parsed[2] ) this.month = numb( parsed[2], 13 ) - 1\n\t\t\t\tif( parsed[3] ) this.day =  numb( parsed[3], 32 ) - 1\n\t\t\t\tif( parsed[4] ) this.hour = numb( parsed[4], 60 )\n\t\t\t\tif( parsed[5] ) this.minute = numb( parsed[5], 60 )\n\t\t\t\tif( parsed[6] ) this.second = numb( parsed[6], 60 )\n\t\t\t\tif( parsed[7] ) this.offset = new $mol_time_duration( parsed[7] )\n\t\t\t\t\n\t\t\t\treturn\n\t\t\t}\n\t\t\t\n\t\t\tif( config instanceof Date ) {\n\t\t\t\t\n\t\t\t\tthis.year = config.getFullYear()\n\t\t\t\tthis.month = config.getMonth()\n\t\t\t\tthis.day = config.getDate() - 1\n\t\t\t\tthis.hour = config.getHours()\n\t\t\t\tthis.minute = config.getMinutes()\n\t\t\t\tthis.second = config.getSeconds() + config.getMilliseconds() / 1000\n\t\t\t\t\n\t\t\t\tconst offset = - config.getTimezoneOffset()\n\t\t\t\tthis.offset = new $mol_time_duration({\n\t\t\t\t\thour : ( offset < 0 ) ? Math.ceil( offset / 60 ) : Math.floor( offset / 60 ) ,\n\t\t\t\t\tminute : offset % 60\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tthis.year = config.year\n\t\t\tthis.month = config.month\n\t\t\tthis.day = config.day\n\t\t\tthis.hour = config.hour\n\t\t\tthis.minute = config.minute\n\t\t\tthis.second = config.second\n\t\t\t\n\t\t\tthis.offset = config.offset == null ? config.offset as undefined : new $mol_time_duration( config.offset ) \n\n\t\t}\n\n\t\treadonly year : number | undefined\n\t\treadonly month : number | undefined\n\t\treadonly day : number | undefined\n\t\treadonly hour : number | undefined\n\t\treadonly minute : number | undefined\n\t\treadonly second : number | undefined\n\t\treadonly offset : $mol_time_duration | undefined\n\n\t\tget weekday() {\n\t\t\treturn ( this.native.getDay() + 6 ) % 7\n\t\t}\n\n\t\t_native : Date | undefined\n\t\tget native() {\n\t\t\t\n\t\t\tif( this._native ) return this._native\n\t\t\t\n\t\t\tconst second = Math.floor( this.second ?? 0 )\n\t\t\t\n\t\t\tconst current = new Date()\n\t\t\t\n\t\t\tconst native = new Date(\n\t\t\t\tthis.year ?? current.getFullYear() ,\n\t\t\t\tthis.month ?? ( this.year === undefined ? current.getMonth() : 0 ),\n\t\t\t\t( this.day ?? ( this.year === undefined && this.month === undefined ? current.getDate() - 1 : 0 ) ) + 1 ,\n\t\t\t\tthis.hour ?? 0 ,\n\t\t\t\tthis.minute ?? 0 ,\n\t\t\t\tsecond,\n\t\t\t\tMath.floor( ( ( this.second ?? 0 ) - second ) * 1000 ),\n\t\t\t)\n\t\t\t\n\t\t\tconst offset = - native.getTimezoneOffset()\n\t\t\tshift: if( this.offset ) {\n\t\t\t\tconst target = this.offset.count( 'PT1m' )\n\t\t\t\tif( target === offset ) break shift\n\t\t\t\tnative.setMinutes( native.getMinutes() + offset - target )\n\t\t\t}\n\t\t\t\n\t\t\treturn this._native = native\n\t\t}\n\n\t\t_normal : $mol_time_moment | undefined\n\t\tget normal() {\n\t\t\tif( this._normal ) return this._normal\n\t\t\t\n\t\t\tconst moment = new $mol_time_moment( this.native ).toOffset( this.offset )\n\t\t\t\n\t\t\treturn this._normal = new $mol_time_moment({\n\t\t\t\tyear : this.year === undefined ? undefined : moment.year ,\n\t\t\t\tmonth : this.month === undefined ? undefined : moment.month ,\n\t\t\t\tday : this.day === undefined ? undefined : moment.day ,\n\t\t\t\thour : this.hour === undefined ? undefined : moment.hour ,\n\t\t\t\tminute : this.minute === undefined ? undefined : moment.minute ,\n\t\t\t\tsecond : this.second === undefined ? undefined : moment.second ,\n\t\t\t\toffset : this.offset === undefined ? undefined : moment.offset ,\n\t\t\t})\n\t\t}\n\n\t\tmerge( config : $mol_time_moment_config ) {\n\t\t\tconst moment = new $mol_time_moment( config )\n\t\t\treturn new $mol_time_moment({\n\t\t\t\tyear : moment.year === undefined ? this.year : moment.year ,\n\t\t\t\tmonth : moment.month === undefined ? this.month : moment.month ,\n\t\t\t\tday : moment.day === undefined ? this.day : moment.day ,\n\t\t\t\thour : moment.hour === undefined ? this.hour : moment.hour ,\n\t\t\t\tminute : moment.minute === undefined ? this.minute : moment.minute ,\n\t\t\t\tsecond : moment.second === undefined ? this.second : moment.second ,\n\t\t\t\toffset : moment.offset === undefined ? this.offset : moment.offset ,\n\t\t\t})\n\t\t}\n\n\t\tshift( config : $mol_time_duration_config ) {\n\t\t\tconst duration = new $mol_time_duration( config )\n\t\t\tconst moment = new $mol_time_moment().merge({\n\t\t\t\tyear: this.year ?? 0,\n\t\t\t\tmonth: this.month ?? 0,\n\t\t\t\tday: this.day ?? 0,\n\t\t\t\thour: this.hour ?? 0,\n\t\t\t\tminute: this.minute ?? 0,\n\t\t\t\tsecond: this.second ?? 0,\n\t\t\t\toffset: this.offset ?? 0\n\t\t\t})\n\n\t\t\tconst second = moment.second! + ( duration.second ?? 0 )\n\t\t\tconst native = new Date(\n\t\t\t\tmoment.year! + ( duration.year ?? 0 ) ,\n\t\t\t\tmoment.month! + ( duration.month ?? 0 ) ,\n\t\t\t\tmoment.day! + 1 + ( duration.day ?? 0 ) ,\n\t\t\t\tmoment.hour! + ( duration.hour ?? 0 ) ,\n\t\t\t\tmoment.minute! + ( duration.minute ?? 0 ) ,\n\t\t\t\tMath.floor( second ) ,\n\t\t\t\t( second - Math.floor( second ) ) * 1000\n\t\t\t)\n\n\t\t\tif( isNaN( native.valueOf() ) ) throw new Error( 'Wrong time' )\n\n\t\t\treturn new $mol_time_moment({\n\t\t\t\tyear : this.year === undefined ? undefined : native.getFullYear(),\n\t\t\t\tmonth : this.month === undefined ? undefined : native.getMonth(),\n\t\t\t\tday : this.day === undefined ? undefined : native.getDate() - 1,\n\t\t\t\thour : this.hour === undefined ? undefined : native.getHours(),\n\t\t\t\tminute : this.minute === undefined ? undefined : native.getMinutes(),\n\t\t\t\tsecond : this.second === undefined ? undefined : native.getSeconds() + native.getMilliseconds() / 1000,\n\t\t\t\toffset : this.offset,\n\t\t\t})\n\t\t}\n\n\t\tmask( config : $mol_time_moment_config ) {\n\n\t\t\tconst mask = new $mol_time_moment( config )\n\t\t\t\n\t\t\treturn new $mol_time_moment({\n\t\t\t\tyear : mask.year === undefined ? undefined : this.year ,\n\t\t\t\tmonth : mask.month === undefined ? undefined : this.month ,\n\t\t\t\tday : mask.day === undefined ? undefined : this.day ,\n\t\t\t\thour : mask.hour === undefined ? undefined : this.hour ,\n\t\t\t\tminute : mask.minute === undefined ? undefined : this.minute ,\n\t\t\t\tsecond : mask.second === undefined ? undefined : this.second ,\n\t\t\t\toffset : mask.offset === undefined ? undefined : this.offset ,\n\t\t\t})\n\t\t\t\n\t\t}\n\n\t\ttoOffset( config: $mol_time_duration_config = new $mol_time_moment().offset! ) {\n\t\t\t\n\t\t\tconst duration = new $mol_time_duration( config )\n\t\t\tconst offset = this.offset || new $mol_time_moment().offset!\n\t\t\t\n\t\t\tlet with_time = new $mol_time_moment( '0001-01-01T00:00:00' ).merge( this ) \n\t\t \tconst moment = with_time.shift( duration.summ( offset.mult( -1 ) ) )\n\n\t\t\treturn moment.merge({ offset : duration })\n\t\t}\n\n\t\tvalueOf() { return this.native.getTime() }\n\n\t\ttoJSON() { return this.toString() }\n\n\t\ttoString( pattern = 'YYYY-MM-DDThh:mm:ss.sssZ' ) {\n\t\t\treturn super.toString( pattern )\n\t\t}\n\t\t\n\t\t[ Symbol.toPrimitive ]( mode: 'default' | 'number' | 'string' ) {\n\t\t\treturn mode === 'number' ? this.valueOf() : this.toString()\n\t\t}\n\t\t\n\t\t[ $mol_dev_format_head ]() {\n\t\t\treturn $mol_dev_format_span( {},\n\t\t\t\t$mol_dev_format_native( this ),\n\t\t\t\t' ',\n\t\t\t\t$mol_dev_format_accent( this.toString( 'YYYY-MM-DD hh:mm:ss.sss Z' ) ),\n\t\t\t)\n\t\t}\n\n\t\t/// Mnemonics:\n\t\t///  * single letter for numbers: M - month number, D - day of month.\n\t\t///  * uppercase letters for dates, lowercase for times: M - month number , m - minutes number\n\t\t///  * repeated letters for define register count: YYYY - full year, YY - shot year, MM - padded month number\n\t\t///  * words for word representation: Month - month name, WeekDay - day of week name\n\t\t///  * shortcuts: WD - short day of week, Mon - short month name.\n\t\tstatic patterns = {\n\n\t\t\t'YYYY' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.year == null ) return ''\n\t\t\t\treturn String( moment.year )\n\t\t\t} ,\n\t\t\t\n\t\t\t'AD' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.year == null ) return ''\n\t\t\t\treturn String( Math.floor( moment.year / 100 ) + 1 )\n\t\t\t} ,\n\t\t\t\n\t\t\t'YY' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.year == null ) return ''\n\t\t\t\treturn String( moment.year % 100 )\n\t\t\t} ,\n\t\t\t\n\t\t\t'Month' : ( pattern => ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.month == null ) return ''\n\t\t\t\treturn pattern.format( moment.native )\n\t\t\t} )( new Intl.DateTimeFormat( undefined , { month : 'long' } ) ) ,\n\t\t\t\n\t\t\t'DD Month' : ( pattern => ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.month == null ) {\n\t\t\t\t\tif( moment.day == null ) {\n\t\t\t\t\t\treturn ''\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn $mol_time_moment.patterns[ 'DD' ]( moment )\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif( moment.day == null ) {\n\t\t\t\t\t\treturn $mol_time_moment.patterns[ 'Month' ]( moment )\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn pattern.format( moment.native )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} )(\n\t\t\t\tnew Intl.DateTimeFormat( undefined , { day : '2-digit' , month : 'long' } )\n\t\t\t) ,\n\t\t\t\n\t\t\t'D Month' : ( pattern => ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.month == null ) {\n\t\t\t\t\tif( moment.day == null ) {\n\t\t\t\t\t\treturn ''\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn $mol_time_moment.patterns[ 'D' ]( moment )\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif( moment.day == null ) {\n\t\t\t\t\t\treturn $mol_time_moment.patterns[ 'Month' ]( moment )\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn pattern.format( moment.native )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} )(\n\t\t\t\tnew Intl.DateTimeFormat( undefined , { day : 'numeric' , month : 'long' } )\n\t\t\t) ,\n\t\t\t\n\t\t\t'Mon' : ( pattern => ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.month == null ) return ''\n\t\t\t\treturn pattern.format( moment.native )\n\t\t\t} )( new Intl.DateTimeFormat( undefined , { month : 'short' } ) ) ,\n\t\t\t\n\t\t\t'DD Mon' : ( pattern => ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.month == null ) {\n\t\t\t\t\tif( moment.day == null ) {\n\t\t\t\t\t\treturn ''\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn $mol_time_moment.patterns[ 'DD' ]( moment )\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif( moment.day == null ) {\n\t\t\t\t\t\treturn $mol_time_moment.patterns[ 'Mon' ]( moment )\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn pattern.format( moment.native )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} )(\n\t\t\t\tnew Intl.DateTimeFormat( undefined , { day : '2-digit' , month : 'short' } )\n\t\t\t) ,\n\t\t\t\n\t\t\t'D Mon' : ( pattern => ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.month == null ) {\n\t\t\t\t\tif( moment.day == null ) {\n\t\t\t\t\t\treturn ''\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn $mol_time_moment.patterns[ 'D' ]( moment )\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif( moment.day == null ) {\n\t\t\t\t\t\treturn $mol_time_moment.patterns[ 'Mon' ]( moment )\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn pattern.format( moment.native )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} )(\n\t\t\t\tnew Intl.DateTimeFormat( undefined , { day : 'numeric' , month : 'short' } )\n\t\t\t) ,\n\t\t\t\n\t\t\t'-MM' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.month == null ) return ''\n\t\t\t\treturn '-' + $mol_time_moment.patterns[ 'MM' ]( moment )\n\t\t\t} ,\n\t\t\t\n\t\t\t'MM' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.month == null ) return ''\n\t\t\t\treturn String( 100 + moment.month + 1 ).slice(1)\n\t\t\t} ,\n\t\t\t\n\t\t\t'M' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.month == null ) return ''\n\t\t\t\treturn String( moment.month + 1 )\n\t\t\t} ,\n\t\t\t\n\t\t\t'WeekDay' : ( pattern => ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.day == null ) return ''\n\t\t\t\tif( moment.month == null ) return ''\n\t\t\t\tif( moment.year == null ) return ''\n\t\t\t\treturn pattern.format( moment.native )\n\t\t\t} )( new Intl.DateTimeFormat( undefined , { weekday : 'long' } ) ) ,\n\n\t\t\t'WD' : ( pattern => ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.day == null ) return ''\n\t\t\t\tif( moment.month == null ) return ''\n\t\t\t\tif( moment.year == null ) return ''\n\t\t\t\treturn pattern.format( moment.native )\n\t\t\t} )( new Intl.DateTimeFormat( undefined , { weekday : 'short' } ) ) ,\n\t\t\t\n\t\t\t'-DD' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.day == null ) return ''\n\t\t\t\treturn '-' + $mol_time_moment.patterns[ 'DD' ]( moment )\n\t\t\t} ,\n\t\t\t\n\t\t\t'DD' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.day == null ) return ''\n\t\t\t\treturn String( 100 + moment.day + 1 ).slice(1)\n\t\t\t} ,\n\t\t\t\n\t\t\t'D' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.day == null ) return ''\n\t\t\t\treturn String( moment.day + 1 )\n\t\t\t} ,\n\t\t\t\n\t\t\t'Thh' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.hour == null ) return ''\n\t\t\t\treturn 'T' + $mol_time_moment.patterns[ 'hh' ]( moment )\n\t\t\t} ,\n\t\t\t\n\t\t\t'hh' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.hour == null ) return ''\n\t\t\t\treturn String( 100 + moment.hour ).slice(1)\n\t\t\t} ,\n\t\t\t\n\t\t\t'h' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.hour == null ) return ''\n\t\t\t\treturn String( moment.hour )\n\t\t\t} ,\n\t\t\t\n\t\t\t':mm' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.minute == null ) return ''\n\t\t\t\treturn ':' + $mol_time_moment.patterns[ 'mm' ]( moment )\n\t\t\t} ,\n\t\t\t\n\t\t\t'mm' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.minute == null ) return ''\n\t\t\t\treturn String( 100 + moment.minute ).slice(1)\n\t\t\t} ,\n\t\t\t\n\t\t\t'm' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.minute == null ) return ''\n\t\t\t\treturn String( moment.minute )\n\t\t\t},\n\t\t\t\n\t\t\t':ss' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.second == null ) return ''\n\t\t\t\treturn ':' + $mol_time_moment.patterns[ 'ss' ]( moment )\n\t\t\t},\n\t\t\t\n\t\t\t'ss' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.second == null ) return ''\n\t\t\t\treturn String( 100 + moment.second | 0 ).slice(1)\n\t\t\t},\n\t\t\t\n\t\t\t's' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.second == null ) return ''\n\t\t\t\treturn String( moment.second | 0 )\n\t\t\t} ,\n\t\t\t\n\t\t\t'.sss' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.second == null ) return ''\n\t\t\t\tif( moment.second === ( moment.second | 0 ) ) return ''\n\t\t\t\treturn '.' + $mol_time_moment.patterns[ 'sss' ]( moment )\n\t\t\t},\n\t\t\t\n\t\t\t'sss' : ( moment : $mol_time_moment )=> {\n\t\t\t\tif( moment.second == null ) return ''\n\t\t\t\tconst millisecond = ( moment.second - Math.trunc( moment.second ) ).toFixed( 3 )\n\t\t\t\treturn millisecond.slice(2)\n\t\t\t},\n\t\t\t\n\t\t\t'Z' : ( moment : $mol_time_moment )=> {\n\t\t\t\t\n\t\t\t\tconst offset = moment.offset\n\t\t\t\tif( !offset ) return ''\n\t\t\t\t\n\t\t\t\tlet hour = offset.hour\n\n\t\t\t\tlet sign = '+'\n\t\t\t\tif( hour < 0 ) {\n\t\t\t\t\tsign = '-'\n\t\t\t\t\thour = -hour\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn sign + String( 100 + hour ).slice(1) + ':' + String( 100 + offset.minute ).slice(1)\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\t\n\t/** Moment from time. */\n\texport function $hyoo_crus_time_moment( time: number ) {\n\t\tconst stamp = Math.floor( time / 65536 ) * 1000\n\t\treturn new $mol_time_moment( stamp )\n\t}\n\t\n\t/** Tick from time. */\n\texport function $hyoo_crus_time_tick( time: number ) {\n\t\treturn time % 65536\n\t}\n\t\n\t/** User readable time+tick view. */\n\texport function $hyoo_crus_time_dump( time: number ) {\n\t\treturn $hyoo_crus_time_moment( time ).toString( 'YYYY-MM-DD hh:mm:ss' )\n\t\t+ ' @' + $hyoo_crus_time_tick( time )\n\t}\n\n\t/** Current time with 0 tick. */\n\texport function $hyoo_crus_time_now() {\n\t\treturn now || Math.floor( Date.now() / 1000 ) * 65536\n\t}\n\t\n\tlet now = 0\n\n\t/** Run atomic transaction by temp freezing time. */\n\texport function $hyoo_crus_time_freeze( task: ()=> void ) {\n\n\t\tif( now ) return task()\n\t\t\n\t\tnow = $hyoo_crus_time_now()\n\t\ttry {\n\t\t\treturn task()\n\t\t} finally {\n\t\t\tnow = 0\n\t\t}\n\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport type $hyoo_crus_face_data = Iterable< readonly [ peer: string, time: number ] >\n\t\n\t/** Statistics about Units in Land. it's total Units count & dictionary which maps Peer to Time */\n\texport class $hyoo_crus_face_map extends Map< string, number > {\n\t\t\n\t\t/** Maximum time for all peers. */\n\t\tlast_time = 0\n\t\t\n\t\t/** Total units count in Land. */\n\t\ttotal = 0\n\t\t\n\t\tconstructor(\n\t\t\tentries?: $hyoo_crus_face_data\n\t\t) {\n\t\t\tsuper()\n\t\t\tif( entries ) this.sync( entries )\n\t\t}\n\t\t\n\t\t/** Synchronize this clock with another. */\n\t\tsync( right: $hyoo_crus_face_data ) {\n\t\t\tif( right instanceof $hyoo_crus_face_map ) this.total = right.total\n\t\t\tfor( const [ peer, time ] of right ) this.time_max( peer, time )\n\t\t}\n\t\t\n\t\t/** Update last time for peer. */\n\t\ttime_max(\n\t\t\tpeer: string,\n\t\t\ttime: number,\n\t\t) {\n\t\t\t\n\t\t\tif( this.last_time < time ) this.last_time = time\n\t\t\t\n\t\t\tlet prev = this.get( peer ) ?? 0\n\t\t\tif( prev < time ) this.set( peer, time )\n\t\t\t\n\t\t}\n\t\t\n\t\t/** Generates new time for peer that greater then other seen. */\n\t\t@ $mol_action\n\t\ttick() {\n\t\t\treturn this.last_time = Math.max( this.last_time + 1, $hyoo_crus_time_now() )\n\t\t}\n\n\t\t/** Last change moment */\n\t\tlast_moment() {\n\t\t\treturn $hyoo_crus_time_moment( this.last_time )\n\t\t}\n\t\t\n\t\t[ $mol_dev_format_head ]() {\n\t\t\t\n\t\t\treturn $mol_dev_format_span( {} ,\n\t\t\t\t$mol_dev_format_native( this ) ,\n\t\t\t\t$mol_dev_format_shade( ' ', $hyoo_crus_time_dump( this.last_time ) ) ,\n\t\t\t\t$mol_dev_format_shade( ' #', this.total ) ,\n\t\t\t)\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport enum $hyoo_crus_part {\n\t\t\n\t\t/** Land header for the following parts. */\n\t\tland = 0b0000_0011,\n\t\t/** Land face. */\n\t\tface = 0b0000_1011,\n\t\t\n\t\t/** Public key. First writes wins. */\n\t\tpass = 0b1111_1111,\n\t\t/** Rights/Keys sharing. Last writes wins. */\n\t\tgift = 0b1111_0111,\n\t\t\n\t\t/** Changeable data. Last writes wins. */\n\t\tsand = 0b0000_1000,\n\t\t\n\t\t/** Blob response. */\n\t\trock = 0b0000_0101,\n\t\t\n\t\t/** B+Tree root bucket. */\n\t\troot = 0b0000_0001,\n\t\t/** B+Tree branch bucket. */\n\t\tbuck = 0b0000_1001,\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\n\texport function $mol_data_setup<\n\t\tValue extends $mol_data_value ,\n\t\tConfig = never\n\t>(\n\t\tvalue : Value ,\n\t\tconfig : Config ,\n\t) {\n\t\t\n\t\treturn Object.assign( value , {\n\t\t\tconfig ,\n\t\t\tValue : null as any as ReturnType< Value >\n\t\t} )\n\n\t}\n\n}\n","namespace $ {\n\n\texport function $mol_func_is_class<\n\t\tFunc extends Function\n\t>(\n\t\tfunc: Func\n\t): func is Func & ( new( ...args: any[] )=> any ) {\n\t\treturn Object.getOwnPropertyDescriptor( func, 'prototype' )?.writable === false\n\t}\n\n}\n","namespace $ {\n\n\ttype Guard_value<\n\t\tFuncs extends $mol_type_unary[] ,\n\t\tIndex extends keyof Funcs\n\t> = $mol_type_param<\n\t\tIndex extends keyof $mol_type_tail< Funcs >\n\t\t\t? $mol_type_tail< Funcs >[ Index ]\n\t\t\t: any ,\n\t\t0\n\t>\n\n\ttype Guard<\n\t\tFuncs extends $mol_type_unary[]\n\t> = {\n\t\t[ Index in keyof Funcs ] : (\n\t\t\tFuncs[Index] extends $mol_type_unary_func\n\t\t\t\t? (\n\t\t\t\t\tinput : $mol_type_param< Funcs[Index] , 0 >\n\t\t\t\t) => Guard_value< Funcs , Index >\n\t\t\t\t: new(\n\t\t\t\t\tinput : $mol_type_param< Funcs[Index] , 0 >\n\t\t\t\t) => Guard_value< Funcs , Index >\n\t\t)\n\t}\n\n\t/**\n\t * Combines list of unary functions/classes to one function.\n\t * \n\t * \tconst reparse = $mol_data_pipe( JSON.stringify , JSON.parse )\n\t **/\n\texport function $mol_data_pipe<\n\t\tFuncs extends $mol_type_unary[]\n\t>(\n\t\t... funcs : Funcs & Guard< Funcs >\n\t) {\n\n\t\treturn $mol_data_setup(\n\t\t\tfunction( this: any, input :  $mol_type_param< Funcs[0] , 0 > ) {\n\t\t\t\tlet value : any = input\n\t\t\t\tfor( const func of funcs ) value = $mol_func_is_class( func ) ? new func( value ) : ( func as any ).call( this, value )\n\t\t\t\treturn value as $mol_type_result<\n\t\t\t\t\t$mol_type_foot< Funcs >\n\t\t\t\t>\n\t\t\t},\n\t\t\t{ funcs }\n\t\t)\n\n\t}\n\n}\n","namespace $ {\n\n\texport class $mol_data_error extends $mol_error_mix {}\n\n}\n","namespace $ {\n\n\t/**\n\t * Checks for number and returns number type.\n\t * @see https://mol.hyoo.ru/#!section=demos/demo=mol_data_number_demo\n\t */\n\texport let $mol_data_number = ( val : number )=> {\n\t\t\n\t\tif( typeof val === 'number' ) return val\n\t\t\n\t\treturn $mol_fail( new $mol_data_error( `${ val } is not a number` ) )\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\n\t/**\n\t * Checks for integer and returns number type.\n\t * @see https://mol.hyoo.ru/#!section=demos/demo=mol_data_integer_demo\n\t */\n\texport function $mol_data_integer( val : number ) {\n\n\t\tconst val2 = $mol_data_number( val )\n\t\tif( Math.floor( val2 ) === val2 ) return val2\n\t\t\n\t\treturn $mol_fail( new $mol_data_error( `${ val } is not an integer` ) )\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport const { $hyoo_crus_rank } = $mol_data_tagged({\n\t\t$hyoo_crus_rank: $mol_data_pipe(\n\t\t\t$mol_data_integer,\n\t\t\t( rank: number )=> {\n\t\t\t\tif( rank >= $hyoo_crus_rank_deny && rank <= $hyoo_crus_rank_rule ) return rank\n\t\t\t\t$mol_fail( new $mol_data_error( `${rank} is out of Ran range` ) )\n\t\t\t}\n\t\t),\n\t}) \n\t\n\t/** Makes Rank from Tier and Fame names. */\n\texport function $hyoo_crus_rank_make(\n\t\ttier: keyof typeof $hyoo_crus_rank_tier,\n\t\tfame: keyof typeof $hyoo_crus_rank_rate,\n\t) {\n\t\treturn ( $hyoo_crus_rank_tier[ tier ] | $hyoo_crus_rank_rate[ fame ] ) as typeof $hyoo_crus_rank.Value\n\t}\n\n\t/** Access level: deny, read, join, post, rule */\n\texport enum $hyoo_crus_rank_tier {\n\n\t\t/** Forbidden. There is no access, neither read nor write. */\n\t\tdeny = 0b0_0000_0000,\n\n\t\t/** Read only */\n\t\tread = 0b0_0001_0000,\n\n\t\t/** Join only (Pass) */\n\t\tjoin = 0b0_0011_0000,\n\n\t\t/** Post changes (Pass, Sand) */\n\t\tpost = 0b0_0111_0000,\n\n\t\t/** Full control (Pass, Sand, Gift) */\n\t\trule = 0b0_1111_0000,\n\n\t}\n\n\t/** Ease of making changes, depends on fame: evil, harm, even, nice, good */\n\texport enum $hyoo_crus_rank_rate {\n\n\t\t/** Very hard challenge. Minutes to put. */\n\t\tlate = 0b0_0000,\n\t\t\n\t\t/** Hard challendge. Tens seconds to put. */\n\t\tlong = 0b0_0011,\n\n\t\t/** Required some work to prevent spam. Seconds to put. */\n\t\tslow = 0b0_0111,\n\n\t\t/** Slow mode. Hundred milliseconds to put. */\n\t\tfast = 0b0_1011,\n\n\t\t/** No work required. As fast as possble. Milliseconds to put. */\n\t\tjust = 0b0_1111,\n\n\t}\n\t\n\texport const $hyoo_crus_rank_deny = $hyoo_crus_rank_make( 'deny', 'late' )\n\texport const $hyoo_crus_rank_read = $hyoo_crus_rank_make( 'read', 'late' )\n\texport const $hyoo_crus_rank_rule = $hyoo_crus_rank_make( 'rule', 'just' )\n\t\n\texport function $hyoo_crus_rank_join(\n\t\trate: keyof typeof $hyoo_crus_rank_rate\n\t) {\n\t\treturn $hyoo_crus_rank_make( 'join', rate )\n\t}\n\n\texport function $hyoo_crus_rank_post(\n\t\trate: keyof typeof $hyoo_crus_rank_rate\n\t) {\n\t\treturn $hyoo_crus_rank_make( 'post', rate )\n\t}\n\n\t/** Mapping Auth to Rank */\n\texport type $hyoo_crus_rank_preset = Record< string, typeof $hyoo_crus_rank.Value >\n\n}\n","namespace $ {\n\t\n\texport function $mol_base64_url_encode( buffer: Uint8Array ) {\n\t\treturn $mol_base64_encode( buffer ).replace( /\\+/g, '-' ).replace( /\\//g, '_' ).replace( /=/g, '' )\n\t}\n\t\n\texport function $mol_base64_url_decode( str: string ) {\n\t\treturn $mol_base64_decode( str.replace( /-/g, '+' ).replace( /_/g, '/' ) )\n\t}\n\t\n}\n","namespace $ {\n\texport var $mol_crypto_native = $node.crypto.webcrypto as any as Crypto\n}\n","namespace $ {\n\t\n\t/** Derived debuggable error with stack */\n\texport function $mol_crypto_restack( error: any ): never {\n\t\terror = new Error( error instanceof Error ? error.message : String( error ), { cause: error } )\n\t\t$mol_fail_hidden( error )\n\t}\n\t\n}\n","namespace $ {\n\t\n\tconst ecdsa = {\n\t\tname: 'ECDSA',\n\t\thash: 'SHA-1',\n\t\tnamedCurve: \"P-256\",\n\t}\n\t\n\tconst ecdh = { name: \"ECDH\", namedCurve: \"P-256\" }\n\tconst jwk = { crv: 'P-256', ext: true, kty: 'EC' }\n\t\n\texport class $mol_crypto_key extends $mol_buffer {\n\t\t\n\t\tstatic from< This extends typeof $mol_crypto_key >(\n\t\t\tthis: This,\n\t\t\tserial: number | string | ArrayBufferView< ArrayBuffer >,\n\t\t) {\n\t\t\t\n\t\t\tif( typeof serial === 'string' ) {\n\t\t\t\tserial = new Uint8Array([\n\t\t\t\t\t... $mol_base64_url_decode( serial.slice( 0, 43 ) ),\n\t\t\t\t\t... $mol_base64_url_decode( serial.slice( 43, 86 ) ),\n\t\t\t\t\t... $mol_base64_url_decode( serial.slice( 86, 129 ) ),\n\t\t\t\t]) as Uint8Array< ArrayBuffer >\n\t\t\t}\n\t\t\t\n\t\t\treturn super.from( serial ) as InstanceType< This >\n\t\t}\n\t\t\n\t\t@ $mol_memo.method\n\t\ttoString() {\n\t\t\tconst arr = this.asArray()\n\t\t\treturn $mol_base64_url_encode( arr.subarray( 0, 32 ) )\n\t\t\t\t+ $mol_base64_url_encode( arr.subarray( 32, 64 ) )\n\t\t\t\t+ $mol_base64_url_encode( arr.subarray( 64 ) )\n\t\t}\n\t\t\n\t}\n\t\n\texport class $mol_crypto_key_public extends $mol_crypto_key {\n\t\t\n\t\tstatic size_str = 86\n\t\tstatic size_bin = 64\n\t\t\n\t\t@ $mol_memo.method\n\t\tasync native() {\n\t\t\tconst str = this.toString()\n\t\t\treturn $mol_crypto_native.subtle.importKey(\n\t\t\t\t'jwk',\n\t\t\t\t{\n\t\t\t\t\tcrv: \"P-256\",\n\t\t\t\t\text: true,\n\t\t\t\t\tkey_ops: [ 'verify' ],\n\t\t\t\t\tkty: \"EC\",\n\t\t\t\t\tx: str.slice( 0, 43 ),\n\t\t\t\t\ty: str.slice( 43, 86 ),\n\t\t\t\t},\n\t\t\t\tecdsa,\n\t\t\t\tBoolean( 'extractable' ),\n\t\t\t\t[ 'verify' ],\n\t\t\t).catch( $mol_crypto_restack )\n\t\t}\n\t\t\n\t\t@ $mol_memo.method\n\t\tasync native_derive() {\n\t\t\t\n\t\t\tconst serial = this.toString()\n\t\t\t\n\t\t\treturn await $mol_crypto_native.subtle.importKey(\n\t\t\t\t'jwk',\n\t\t\t\t{\n\t\t\t\t\t... jwk,\n\t\t\t\t\tkey_ops: [],\n\t\t\t\t\tx: serial.slice( 0, 43 ),\n\t\t\t\t\ty: serial.slice( 43, 86 ),\n\t\t\t\t},\n\t\t\t\tecdh,\n\t\t\t\ttrue,\n\t\t\t\t[],\n\t\t\t).catch( $mol_crypto_restack )\n\t\t\t\n\t\t}\n\t\t\n\t\tasync verify( data: BufferSource, sign: BufferSource ) {\n\t\t\treturn await $mol_crypto_native.subtle.verify(\n\t\t\t\tecdsa,\n\t\t\t\tawait this.native(),\n\t\t\t\tsign,\n\t\t\t\tdata,\n\t\t\t).catch( $mol_crypto_restack )\n\t\t}\n\t\t\n\t}\n\t\n\texport class $mol_crypto_key_private extends $mol_crypto_key {\n\t\t\n\t\tstatic size_str = 129\n\t\tstatic size_bin = 96\n\t\tstatic size_sign = 64\n\t\t\n\t\tstatic async generate() {\n\t\t\t\n\t\t\tconst pair = await $mol_crypto_native.subtle.generateKey(\n\t\t\t\tecdsa,\n\t\t\t\tBoolean( 'extractable' ),\n\t\t\t\t[ 'sign', 'verify' ]\n\t\t\t).catch( $mol_crypto_restack )\n\t\t\t\n\t\t\tconst { x, y, d } = await $mol_crypto_native.subtle.exportKey( 'jwk', pair.privateKey ).catch( $mol_crypto_restack )\n\t\t\treturn this.from( x + y! + d! )\n\t\t\t\n\t\t}\n\t\t\n\t\t@ $mol_memo.method\n\t\tasync native() {\n\t\t\tconst str = this.toString()\n\t\t\treturn await $mol_crypto_native.subtle.importKey(\n\t\t\t\t'jwk',\n\t\t\t\t{\n\t\t\t\t\tcrv: \"P-256\",\n\t\t\t\t\text: true,\n\t\t\t\t\tkey_ops: [ 'sign' ],\n\t\t\t\t\tkty: \"EC\",\n\t\t\t\t\tx: str.slice( 0, 43 ),\n\t\t\t\t\ty: str.slice( 43, 86 ),\n\t\t\t\t\td: str.slice( 86, 129 ),\n\t\t\t\t},\n\t\t\t\tecdsa,\n\t\t\t\tBoolean( 'extractable' ),\n\t\t\t\t[ 'sign' ],\n\t\t\t).catch( $mol_crypto_restack )\n\t\t}\n\t\t\n\t\t@ $mol_memo.method\n\t\tasync native_derive() {\n\t\t\t\n\t\t\tconst serial = this.toString()\n\t\t\t\n\t\t\treturn $mol_crypto_native.subtle.importKey(\n\t\t\t\t'jwk',\n\t\t\t\t{\n\t\t\t\t\t... jwk,\n\t\t\t\t\tkey_ops: [ 'deriveKey', 'deriveBits' ],\n\t\t\t\t\tx: serial.slice( 0, 43 ),\n\t\t\t\t\ty: serial.slice( 43, 86 ),\n\t\t\t\t\td: serial.slice( 86, 129 ),\n\t\t\t\t},\n\t\t\t\tecdh,\n\t\t\t\tBoolean( 'extractable' ),\n\t\t\t\t[ 'deriveKey', 'deriveBits' ],\n\t\t\t).catch( $mol_crypto_restack )\n\t\t\t\n\t\t}\n\t\t\n\t\t@ $mol_memo.method\n\t\tpublic() {\n\t\t\treturn new $mol_crypto_key_public( this.asArray().slice( 0, 64 ).buffer )\n\t\t}\n\t\t\n\t\tasync sign( data: BufferSource ) {\n\t\t\treturn new Uint8Array( await $mol_crypto_native.subtle.sign(\n\t\t\t\tecdsa,\n\t\t\t\tawait this.native(),\n\t\t\t\tdata\n\t\t\t).catch( $mol_crypto_restack ) )\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\texport let $mol_mem_persist = $mol_wire_solid\n}\n","namespace $ {\n\texport class $mol_storage extends $mol_object2 {\n\t\t\n\t\t@ $mol_mem\n\t\tstatic native() {\n\t\t\treturn this.$.$mol_dom_context.navigator.storage ?? { // exists only in secure context\n\t\t\t\tpersisted: async ()=> false,\n\t\t\t\tpersist: async ()=> false,\n\t\t\t\testimate: async ()=> ({}),\n\t\t\t\tgetDirectory: async ()=> null! as FileSystemHandle,\n\t\t\t} as StorageManager\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tstatic persisted( next?: boolean, cache?: 'cache' ): boolean {\n\t\t\t\n\t\t\t$mol_mem_persist()\n\t\t\t\n\t\t\tif( cache ) return Boolean( next )\n\t\t\t\n\t\t\tconst native = this.native()\n\t\t\tif( next && !$mol_mem_cached( ()=> this.persisted() ) ) {\n\t\t\t\tnative.persist().then( actual => {\n\t\t\t\t\t\n\t\t\t\t\tsetTimeout( ()=> this.persisted( actual, 'cache' ), 5000 )\n\t\t\t\t\t\n\t\t\t\t\tif( actual ) this.$.$mol_log3_done({ place: `$mol_storage`, message: `Persist: Yes` })\n\t\t\t\t\telse this.$.$mol_log3_fail({ place: `$mol_storage`, message: `Persist: No` })\n\t\t\t\t\t\n\t\t\t\t} )\n\t\t\t}\n\t\t\t\n\t\t\treturn next ?? $mol_wire_sync( native ).persisted()\n\t\t}\n\t\t\n\t\tstatic estimate() {\n\t\t\treturn $mol_wire_sync( this.native() ?? {} ).estimate()\n\t\t}\n\t\t\n\t\tstatic dir() {\n\t\t\treturn $mol_wire_sync( this.native() ).getDirectory()\n\t\t}\n\t\t\n\t}\n}\n","namespace $ {\n\t\n\texport class $mol_state_local< Value > extends $mol_object {\n\t\t\n\t\tstatic 'native()' : Pick< Storage , 'getItem'|'setItem'|'removeItem' >\n\t\tstatic native() {\n\t\t\tif( this['native()'] ) return this['native()']\n\n\t\t\tcheck : try {\n\t\t\t\tconst native = $mol_dom_context.localStorage\n\t\t\t\tif( !native ) break check\n\t\t\t\t\n\t\t\t\tnative.setItem( '' , '' )\n\t\t\t\tnative.removeItem( '' )\n\t\t\t\treturn this['native()'] = native\n\t\t\t} catch( error: any ) {\n\t\t\t\tconsole.warn( error )\n\t\t\t}\n\n\t\t\treturn this['native()'] = {\n\t\t\t\tgetItem( key : string ) {\n\t\t\t\t\treturn (this as any)[ ':' + key ]\n\t\t\t\t} ,\n\t\t\t\tsetItem( key : string , value : string ) {\n\t\t\t\t\t(this as any)[ ':' + key ] = value\n\t\t\t\t} ,\n\t\t\t\tremoveItem( key : string ) {\n\t\t\t\t\t(this as any)[ ':' + key ] = void 0\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tstatic changes( next?: StorageEvent ) { return next }\n\n\t\t@ $mol_mem_key\n\t\tstatic value< Value >(\n\t\t\tkey : string ,\n\t\t\tnext? : Value | null ,\n\t\t) : Value | null {\n\t\t\t\n\t\t\tthis.changes()\n\t\t\t\n\t\t\tif( next === void 0 ) return JSON.parse( this.native().getItem( key ) || 'null' )\n\t\t\t\n\t\t\tif( next === null ) {\n\t\t\t\tthis.native().removeItem( key )\n\t\t\t} else {\n\t\t\t\tthis.native().setItem( key , JSON.stringify( next ) )\n\t\t\t\tthis.$.$mol_storage.persisted( true )\n\t\t\t}\n\t\t\t\n\t\t\treturn next\n\t\t}\n\t\t\n\t\tprefix() { return '' }\n\t\t\n\t\tvalue( key : string , next? : Value ) {\n\t\t\treturn $mol_state_local.value( this.prefix() + '.' + key , next )\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\texport class $mol_state_local_node< Value > extends $mol_state_local< Value > {\n\t\t\n\t\t@ $mol_mem\n\t\tstatic dir() {\n\t\t\tconst base = process.env.XDG_DATA_HOME || ( $node.os.homedir() + '/.local/share' )\n\t\t\treturn $mol_file.absolute( base ).resolve( './mol_state_local' )\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tstatic value< Value >(\n\t\t\tkey : string ,\n\t\t\tnext? : Value | null ,\n\t\t) : Value | null {\n\t\t\t\n\t\t\tconst file = this.dir().resolve( encodeURIComponent( key ) + '.json' )\n\t\t\t\n\t\t\tif( next === null ) {\n\t\t\t\tfile.exists( false )\n\t\t\t\treturn null\n\t\t\t}\n\t\t\t\n\t\t\tconst arg = next === undefined ? undefined : JSON.stringify( next )\n\t\t\treturn JSON.parse( file.text( arg ) || 'null' )\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t$.$mol_state_local = $mol_state_local_node\n}\n","namespace $ {\n\t\n\t/** 16 byte */\n\texport function $mol_crypto_salt() {\n\t\treturn $mol_crypto_native.getRandomValues(\n\t\t\tnew Uint8Array( 16 )\n\t\t)\n\t}\n\t\n\t/** 16 byte */\n\texport const $mol_crypto_salt_once = new Uint8Array(\n\t\t[1,2,3,4,5,6,7,8,9,0,1,2,3,4,5,6]\n\t)\n\t\n}\n","namespace $ {\n\t\n\t/** Symmetric cipher with shortest payload. */\n\texport class $mol_crypto_sacred extends $mol_buffer {\n\t\t\n\t\t/** Key size in bytes. */\n\t\tstatic size = 16 as const\n\t\t\n\t\t/** Makes new random secret. */\n\t\tstatic make() {\n\t\t\treturn this.from( $mol_crypto_salt() )\n\t\t}\n\t\t\n\t\t/** Makes from string of buffer view. */\n\t\tstatic from< This extends typeof $mol_buffer >(\n\t\t\tthis: This,\n\t\t\tserial: string | ArrayBufferView< ArrayBuffer >,\n\t\t) {\n\t\t\t\n\t\t\tif( typeof serial === 'string' ) {\n\t\t\t\tserial = new Uint8Array([\n\t\t\t\t\t... $mol_base64_url_decode( serial ),\n\t\t\t\t]) as Uint8Array< ArrayBuffer >\n\t\t\t}\n\t\t\t\n\t\t\tif(!( serial instanceof Uint8Array )) {\n\t\t\t\tserial = new Uint8Array( serial.buffer, serial.byteOffset, serial.byteLength )\n\t\t\t}\n\t\t\t\n\t\t\t;( serial as Uint8Array )[0] = 0\n\t\t\t\n\t\t\tconst sacred = super.from( serial ) as InstanceType< This >\n\t\t\n\t\t\treturn sacred\n\t\t}\n\t\t\n\t\tstatic async from_native( native: CryptoKey ) {\n\t\t\t\n\t\t\tconst buf = await $mol_crypto_native.subtle.exportKey( 'raw', native ).catch( $mol_crypto_restack )\n\t\t\t\n\t\t\tconst sacred = this.from( new Uint8Array( buf ) )\n\t\t\tsacred._native = native as CryptoKey & { type: 'secret' }\n\t\t\t\n\t\t\treturn sacred\n\t\t}\n\t\t\n\t\tconstructor( buffer: ArrayBuffer, byteOffset?: number, byteLength?: number ) {\n\t\t\tsuper( buffer, byteOffset, byteLength )\n\t\t\tif( this.getUint8( 0 ) !== 0 ) $mol_fail( new Error( 'Buffer should starts with 0 byte' ) )\n\t\t}\n\t\t\n\t\t@ $mol_memo.method\n\t\ttoString() {\n\t\t\treturn $mol_base64_url_encode( this.asArray() )\n\t\t}\n\t\t\n\t\t_native: undefined | CryptoKey & { type: 'secret' }\n\t\t/** Native crypto secret */\n\t\tasync native() {\n\t\t\treturn this._native ?? ( this._native = await $mol_crypto_native.subtle.importKey(\n\t\t\t\t'raw',\n\t\t\t\tthis,\n\t\t\t\t{\n\t\t\t\t\tname: 'AES-CBC',\n\t\t\t\t\tlength: 128,\n\t\t\t\t},\n\t\t\t\ttrue,\n\t\t\t\t[ 'encrypt', 'decrypt' ],\n\t\t\t).catch( $mol_crypto_restack ) as CryptoKey & { type: 'secret' } )\n\t\t}\n\t\t\n\t\t/** Encrypt any binary message. 16n bytes */\n\t\tasync encrypt( open: BufferSource, salt: BufferSource ) {\n\t\t\treturn new Uint8Array( await $mol_crypto_native.subtle.encrypt(\n\t\t\t\t{\n\t\t\t\t\tname: 'AES-CBC',\n\t\t\t\t\tlength: 128,\n\t\t\t\t\ttagLength: 32,\n\t\t\t\t\tiv: salt,\n\t\t\t\t},\n\t\t\t\tawait this.native(),\n\t\t\t\topen\n\t\t\t).catch( $mol_crypto_restack ) )\n\t\t}\n\t\t\n\t\t/** Decrypt any binary message. */\n\t\tasync decrypt( closed: BufferSource, salt : BufferSource ) {\n\t\t\treturn new Uint8Array( await $mol_crypto_native.subtle.decrypt(\n\t\t\t\t{\n\t\t\t\t\tname: 'AES-CBC',\n\t\t\t\t\tlength: 128,\n\t\t\t\t\ttagLength: 32,\n\t\t\t\t\tiv: salt,\n\t\t\t\t},\n\t\t\t\tawait this.native(),\n\t\t\t\tclosed\n\t\t\t).catch( $mol_crypto_restack ) )\n\t\t}\n\t\t\n\t\t/** Encrypts this Sacred by another. 16 bytes */\n\t\tasync close( sacred: $mol_crypto_sacred, salt: BufferSource ) {\n\t\t\tconst buf = new Uint8Array( sacred.buffer, sacred.byteOffset + 1, sacred.byteLength - 1 )\n\t\t\treturn this.encrypt( buf, salt )\n\t\t}\n\t\t\n\t\t/** Encrypts this Sacred by another. 16 bytes */\n\t\tasync open( buf: Uint8Array, salt: BufferSource ) {\n\t\t\tconst buf2 = new Uint8Array( 16 )\n\t\t\tbuf2.set( await this.decrypt( buf, salt ), 1 )\n\t\t\treturn new $mol_crypto_sacred( buf2.buffer )\n\t\t}\n\t\t\n\t}\n\n}\n","namespace $ {\n\t\n\tconst algorithm = {\n\t\tname: 'AES-CBC',\n\t\tlength: 128,\n\t\ttagLength: 32,\n\t}\n\t\n\t/**\n\t * Symmetric cipher with shortest payload.\n\t * @deprecated Use $mol_crypto_sacred.\n\t */\n\texport class $mol_crypto_secret extends Object {\n\t\t\n\t\t/** Key size in bytes. */\n\t\tstatic size = 16\n\t\t\n\t\tconstructor(\n\t\t\treadonly native: CryptoKey & { type: 'secret' }\n\t\t) {\n\t\t\tsuper()\n\t\t}\n\t\t\n\t\tstatic async generate() {\n\t\t\treturn new this(\n\t\t\t\tawait $mol_crypto_native.subtle.generateKey(\n\t\t\t\t\talgorithm,\n\t\t\t\t\ttrue,\n\t\t\t\t\t[ 'encrypt', 'decrypt' ]\n\t\t\t\t) as CryptoKey & { type: 'secret' }\n\t\t\t)\n\t\t}\n\t\t\n\t\tstatic async from( serial: BufferSource ) {\n\t\t\t\n\t\t\treturn new this(\n\t\t\t\tawait $mol_crypto_native.subtle.importKey(\n\t\t\t\t\t'raw',\n\t\t\t\t\tserial,\n\t\t\t\t\talgorithm,\n\t\t\t\t\ttrue,\n\t\t\t\t\t[ 'encrypt', 'decrypt' ],\n\t\t\t\t) as CryptoKey & { type: 'secret' }\n\t\t\t)\n\t\t\t\n\t\t}\n\t\t\n\t\tstatic async pass( pass: string, salt: Uint8Array ) {\n\t\t\t\n\t\t\treturn new this(\n\t\t\t\tawait $mol_crypto_native.subtle.deriveKey(\n\t\t\t\t\t\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"PBKDF2\",\n\t\t\t\t\t\tsalt,\n\t\t\t\t\t\titerations: 10_000,\n\t\t\t\t\t\thash: \"SHA-256\",\n\t\t\t\t\t},\n\t\t\t\t\t\n\t\t\t\t\tawait $mol_crypto_native.subtle.importKey(\n\t\t\t\t\t\t\"raw\",\n\t\t\t\t\t\t$mol_charset_encode( pass ),\n\t\t\t\t\t\t\"PBKDF2\",\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t[ \"deriveKey\" ],\n\t\t\t\t\t),\n\t\t\t\t\t\n\t\t\t\t\talgorithm,\n\t\t\t\t\ttrue,\n\t\t\t\t\t[ 'encrypt', 'decrypt' ],\n\t\t\t\t\t\n\t\t\t\t) as CryptoKey & { type: 'secret' }\n\t\t\t)\n\t\t\t\n\t\t}\n\t\t\n\t\tstatic async derive( private_serial: string, public_serial: string ) {\n\t\t\t\n\t\t\tconst ecdh = { name: \"ECDH\", namedCurve: \"P-256\" }\n\t\t\tconst jwk = { crv: 'P-256', ext: true, kty: 'EC' }\n\t\t\t\n\t\t\tconst private_key = await $mol_crypto_native.subtle.importKey(\n\t\t\t\t'jwk',\n\t\t\t\t{\n\t\t\t\t\t... jwk,\n\t\t\t\t\tkey_ops: [ 'deriveKey' ],\n\t\t\t\t\tx: private_serial.slice( 0, 43 ),\n\t\t\t\t\ty: private_serial.slice( 43, 86 ),\n\t\t\t\t\td: private_serial.slice( 86, 129 ),\n\t\t\t\t},\n\t\t\t\tecdh,\n\t\t\t\ttrue,\n\t\t\t\t[ 'deriveKey' ],\n\t\t\t)\n\t\t\n\t\t\tconst public_key = await $mol_crypto_native.subtle.importKey(\n\t\t\t\t'jwk',\n\t\t\t\t{\n\t\t\t\t\t... jwk,\n\t\t\t\t\tkey_ops: [],\n\t\t\t\t\tx: public_serial.slice( 0, 43 ),\n\t\t\t\t\ty: public_serial.slice( 43, 86 ),\n\t\t\t\t},\n\t\t\t\tecdh,\n\t\t\t\ttrue,\n\t\t\t\t[],\n\t\t\t)\n\t\t\t\n\t\t\tconst secret = await $mol_crypto_native.subtle.deriveKey(\n\t\t\t\t{\n\t\t\t\t  name: \"ECDH\",\n\t\t\t\t  public: public_key,\n\t\t\t\t},\n\t\t\t\tprivate_key,\n\t\t\t\talgorithm,\n\t\t\t\ttrue,\n\t\t\t\t[ \"encrypt\", \"decrypt\" ],\n\t\t\t)\n\t\t\n\t\t\treturn new this( secret as CryptoKey & { type: 'secret' } )\n\t\t}\n\t\t\n\t\t/** 16 bytes */\n\t\tasync serial() {\n\t\t\treturn new Uint8Array( await $mol_crypto_native.subtle.exportKey(\n\t\t\t\t'raw',\n\t\t\t\tthis.native,\n\t\t\t) )\n\t\t}\n\n\t\t/** 16n bytes */\n\t\tasync encrypt( open: BufferSource, salt: BufferSource ) {\n\t\t\treturn new Uint8Array( await $mol_crypto_native.subtle.encrypt(\n\t\t\t\t{\n\t\t\t\t\t... algorithm,\n\t\t\t\t\tiv: salt,\n\t\t\t\t},\n\t\t\t\tthis.native,\n\t\t\t\topen\n\t\t\t) )\n\t\t}\n\t\t\n\t\tasync decrypt( closed: BufferSource, salt : BufferSource ) {\n\t\t\treturn new Uint8Array( await $mol_crypto_native.subtle.decrypt(\n\t\t\t\t{\n\t\t\t\t\t... algorithm,\n\t\t\t\t\tiv: salt,\n\t\t\t\t},\n\t\t\t\tthis.native,\n\t\t\t\tclosed\n\t\t\t) )\n\t\t}\n\t\t\n\t}\n\n}\n","namespace $ {\n\t\n\t/** Private key generated with Proof of Work */\n\texport class $hyoo_crus_auth extends $mol_crypto_key_private {\n\t\t\n\t\t/** Current Private key generated with Proof of Work  */\n\t\t@ $mol_mem\n\t\tstatic current( next?: $hyoo_crus_auth | null ) {\n\t\t\t\n\t\t\t$mol_wire_solid()\n\t\t\t\n\t\t\tif( next === undefined ) {\n\t\t\t\tconst key = String( $mol_state_local.value( '$hyoo_crus_auth' ) ?? '' )\n\t\t\t\tif( key ) return $hyoo_crus_auth.from( key )\n\t\t\t}\n\t\t\t\n\t\t\tif( !next ) next = this.grab()\n\t\t\t\n\t\t\t$mol_state_local.value( '$hyoo_crus_auth', next.toString() )\n\t\t\t\n\t\t\treturn next\n\t\t}\n\t\t\n\t\tstatic embryos = [] as string[]\n\t\t\n\t\t@ $mol_action\n\t\tstatic grab() {\n\t\t\tif( this.embryos.length ) return this.from( this.embryos.pop()! )\n\t\t\treturn $mol_wire_sync( this as typeof $hyoo_crus_auth ).generate()\n\t\t}\n\t\t\n\t\tstatic async generate() {\n\t\t\tfor( let i = 0; i < 4096; ++i ) {\n\t\t\t\tconst auth = await super.generate()\n\t\t\t\tif( auth.uint8(0) !== $hyoo_crus_unit_kind.pass ) continue\n\t\t\t\treturn this.from( auth )\n\t\t\t}\n\t\t\t$mol_fail( new Error( `Too long key generation` ) )\n\t\t}\n\t\t\n\t\t/** Independent actor with global unique id generated from Auth key */\n\t\t@ $mol_memo.method\n\t\tlord() {\n\t\t\treturn $hyoo_crus_ref_decode( new Uint8Array( this.buffer, 2, 12 ) )\n\t\t}\n\t\t\n\t\t/** Land local unique identifier of independent actor (first half of Lord) */\n\t\t@ $mol_memo.method\n\t\tpeer() {\n\t\t\treturn $mol_base64_ae_encode( new Uint8Array( this.buffer, 2, 6 ) )\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tsecret_mutual( pub: string ) {\n\t\t\treturn $mol_wire_sync( $mol_crypto_secret ).derive( this.toString(), pub.toString() )\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t/** reactive Dictionary */\n\texport class $mol_wire_dict< Key, Value > extends Map< Key, Value > {\n\n\t\tpub = new $mol_wire_pub\n\t\t\n\t\t// Accessors\n\t\t\n\t\thas( key: Key ) {\n\t\t\tthis.pub.promote()\n\t\t\treturn super.has( key )\n\t\t}\n\t\t\n\t\tget( key: Key ) {\n\t\t\tthis.pub.promote()\n\t\t\treturn super.get( key )\n\t\t}\n\t\t\n\t\tentries() {\n\t\t\tthis.pub.promote()\n\t\t\treturn super.entries()\n\t\t}\n\t\t\n\t\tkeys() {\n\t\t\tthis.pub.promote()\n\t\t\treturn super.keys()\n\t\t}\n\t\t\n\t\tvalues() {\n\t\t\tthis.pub.promote()\n\t\t\treturn super.values()\n\t\t}\n\t\t\n\t\tforEach(\n\t\t\ttask: ( value: Value, key: Key, dict: Map< Key, Value > ) => void,\n\t\t\tself?: any\n\t\t) {\n\t\t\tthis.pub.promote()\n\t\t\tsuper.forEach( task, self )\n\t\t}\n\t\t\n\t\t[Symbol.iterator]() {\n\t\t\tthis.pub.promote()\n\t\t\treturn super[Symbol.iterator]()\n\t\t}\n\t\t\n\t\tget size() {\n\t\t\tthis.pub.promote()\n\t\t\treturn super.size\t\n\t\t}\n\n\t\t// Mutators\n\n\t\tset( key: Key, value: Value ) {\n\t\t\tif( super.get( key ) === value ) return this\n\t\t\tsuper.set( key, value )\n\t\t\tthis.pub?.emit() // undefined in constructor\n\t\t\treturn this\n\t\t}\n\n\t\tdelete( key: Key ) {\n\t\t\tconst res = super.delete( key )\n\t\t\tif( res ) this.pub.emit()\n\t\t\treturn res\n\t\t}\n\t\t\n\t\tclear() {\n\t\t\tif( !super.size ) return\n\t\t\tsuper.clear()\n\t\t\tthis.pub.emit()\n\t\t}\n\t\t\n\t\t// Extensions\n\t\t\n\t\titem( key: Key, next?: Value | null ) {\n\t\t\t\n\t\t\tif( next === undefined ) return this.get( key ) ?? null\n\t\t\t\n\t\t\tif( next === null ) this.delete( key )\n\t\t\telse this.set( key, next )\n\t\t\t\n\t\t\treturn next\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\t\n\t/** Virtual Node that represents contained units as high-level data types. */\n\texport class $hyoo_crus_node extends $mol_object {\n\t\t\n\t\tstatic tag: keyof typeof $hyoo_crus_sand_tag = 'vals'\n\t\t\n\t\t/** Standalone part of Glob which syncs separately, have own rights, and contains Units */\n\t\tland() {\n\t\t\treturn null as any as $hyoo_crus_land\n\t\t}\n\t\t\n\t\t/** Land local Node id */\n\t\thead() {\n\t\t\treturn ''\n\t\t}\n\t\t\n\t\t/** Reference to Land/Lord. */\n\t\tland_ref() {\n\t\t\treturn this.land()?.ref() ?? this.$.$hyoo_crus_auth.current().lord()\n\t\t}\n\t\t\n\t\t/** Reference to Node/Land/Lord. */\n\t\t@ $mol_memo.method\n\t\tref() {\n\t\t\treturn $hyoo_crus_ref_resolve( this.land_ref(),  $hyoo_crus_ref( '___' + this.head() ) )\n\t\t}\n\t\t\n\t\ttoJSON() {\n\t\t\treturn this.ref().description\n\t\t}\n\t\t\n\t\t/** Returns another representation of this node. */\n\t\t@ $mol_mem_key\n\t\tcast< Node extends typeof $hyoo_crus_node >( Node: Node ): InstanceType< Node > {\n\t\t\treturn this.land().Node( Node ).Item( this.head() )\n\t\t}\n\t\t\n\t\t/** Ordered inner alive Node. */\n\t\t@ $mol_mem_key\n\t\tnodes< Node extends typeof $hyoo_crus_node >( Node: Node | null ): readonly InstanceType< Node >[] {\n\t\t\tconst land = this.land()\n\t\t\tconst map = {\n\t\t\t\tterm: ()=> land.Node( Node || $hyoo_crus_atom_vary ),\n\t\t\t\tsolo: ()=> land.Node( Node || $hyoo_crus_atom_vary ),\n\t\t\t\tvals: ()=> land.Node( Node || $hyoo_crus_list_vary ),\n\t\t\t\tkeys: ()=> land.Node( Node || $hyoo_crus_dict ),\n\t\t\t}\n\t\t\treturn this.units().map( unit => map[ unit.tag() ]().Item( unit.self() ) ) as any\n\t\t}\n\t\t\n\t\t/** All ordered alive Units */\n\t\tunits() {\n\t\t\treturn this.units_of( '' )\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tunits_of( peer: string | null ) {\n\t\t\treturn this.land().sand_ordered({ head: this.head(), peer }).filter( unit => unit.tip() !== 'nil' )\n\t\t}\n\t\t\n\t\tfilled() {\n\t\t\treturn this.units().length > 0\n\t\t}\n\t\t\n\t\t/** Ability to make changes by current peer. */\n\t\tcan_change() {\n\t\t\treturn this.land().lord_rank( this.land().auth().lord() ) >= $hyoo_crus_rank_tier.join\n\t\t}\n\t\t\n\t\t/** Time of last changed unit inside Node subtree */\n\t\t@ $mol_mem\n\t\tlast_change() {\n\t\t\t\n\t\t\tconst land = this.land()\n\t\t\tlet last = 0\n\t\t\t\n\t\t\tconst visit = ( sand: $hyoo_crus_sand )=> {\n\t\t\t\tif( sand.time() > last ) last = sand.time()\n\t\t\t\tif( sand.tag() === 'term' ) return\n\t\t\t\tland.Node( $hyoo_crus_node ).Item( sand.self() ).units().forEach( visit )\n\t\t\t}\n\t\t\tthis.units().forEach( visit )\n\t\t\t\n\t\t\treturn last ? $hyoo_crus_time_moment( last ) : null\n\t\t\t\n\t\t}\n\t\t\n\t\t/** All author Peers of Node subtree */\n\t\t@ $mol_mem\n\t\tauthor_peers() {\n\t\t\t\n\t\t\tconst land = this.land()\n\t\t\tconst peers = new Set< string >()\n\t\t\t\n\t\t\tconst visit = ( sand: $hyoo_crus_sand )=> {\n\t\t\t\tpeers.add( sand.peer() )\n\t\t\t\tif( sand.tag() === 'term' ) return\n\t\t\t\tland.Node( $hyoo_crus_node ).Item( sand.self() ).units_of( null ).forEach( visit )\n\t\t\t}\n\t\t\tthis.units_of( null ).forEach( visit )\n\t\t\t\n\t\t\treturn [ ... peers ]\n\t\t\t\n\t\t}\n\t\t\n\t\t/** All author Lords of Node subtree */\n\t\t@ $mol_mem\n\t\tauthor_lords() {\n\t\t\tconst land = this.land()\n\t\t\treturn this.author_peers()\n\t\t\t\t.map( peer => land.pass.get( peer )?.lord() )\n\t\t\t\t.filter( $mol_guard_defined )\n\t\t}\n\t\t\n\t\t;[ $mol_dev_format_head ]() {\n\t\t\treturn $mol_dev_format_span( {} ,\n\t\t\t\t$mol_dev_format_native( this ) ,\n\t\t\t\t' ',\n\t\t\t\tthis.head(),\n\t\t\t)\n\t\t}\n\t\t\n\t}\n\n}\n","namespace $ {\n\t\n\t/** Registry of nodes as domain entities. */\n\texport class $hyoo_crus_fund< Key, Node > extends $mol_object {\n\t\t\n\t\tconstructor(\n\t\t\treadonly item_make: ( head: Key )=> Node\n\t\t) { super() }\n\t\t\n\t\t@ $mol_mem_key\n\t\tItem( head: Key ) {\n\t\t\treturn this.item_make( head )\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\t/**\n\t * # Generic Graph model\n\t * - Supports any type of Nodes and Edges.\n\t * - All links are ordered, but this may be ignored.\n\t * - Multigraph supported using arrays of Edges.\n\t * - Hypergraph supported by reusing same Edge on set of links.\n\t * - Ubergraph supported using Edges as Nodes to.\n\t **/\n\texport class $mol_graph< Node , Edge > {\n\t\t\n\t\t/** All registered Nodes */\n\t\tnodes = new Set< Node >()\n\t\t\n\t\t/** Edges for Nodes pairs (from-to-edge) */\n\t\tedges_out = new Map< Node , Map< Node , Edge > >()\n\t\t/** Edges for Nodes pairs (to-from-edge) */\n\t\tedges_in = new Map< Node , Map< Node , Edge > >()\n\t\t\n\t\t// LINKING NODES\n\t\t\n\t\t/** Full connect two Nodes */\n\t\tlink( from : Node , to : Node , edge : Edge ) {\n\t\t\tthis.link_out( from , to , edge )\n\t\t\tthis.link_in( to , from , edge )\n\t\t}\n\t\t\n\t\t/** Full disconnect two Nodes */\n\t\tunlink( from : Node , to : Node ) {\n\t\t\tthis.edges_in.get( to )?.delete( from )\n\t\t\tthis.edges_out.get( from )?.delete( to )\n\t\t}\n\t\t\n\t\t/** Forward connect two Nodes */\n\t\tlink_out( from : Node , to : Node , edge : Edge ) {\n\t\t\t\n\t\t\tlet pair = this.edges_out.get( from )\n\t\t\t\n\t\t\tif( !pair ) {\n\t\t\t\tpair = new Map< Node , Edge >()\n\t\t\t\tthis.edges_out.set( from , pair )\n\t\t\t\tthis.nodes.add( from )\n\t\t\t}\n\t\t\t\n\t\t\tpair.set( to , edge )\n\t\t\tthis.nodes.add( to )\n\n\t\t}\n\t\t\n\t\t/** Backward connect two Nodes */\n\t\tlink_in( to : Node , from : Node , edge : Edge ) {\n\n\t\t\tlet pair = this.edges_in.get( to )\n\t\t\t\n\t\t\tif( !pair ) {\n\t\t\t\tpair = new Map< Node , Edge >()\n\t\t\t\tthis.edges_in.set( to , pair )\n\t\t\t\tthis.nodes.add( to )\n\t\t\t}\n\t\t\t\n\t\t\tpair.set( from , edge )\n\t\t\tthis.nodes.add( to )\n\n\t\t}\n\t\t\n\t\t// GETTING EDGES\n\t\t\n\t\t/** Return any Edge for two Nodes or null */\n\t\tedge( from : Node , to : Node ) {\n\t\t\treturn this.edge_out( from, to ) ?? this.edge_in( to, from )\n\t\t}\n\t\t\n\t\t/** Return output Edge for two Nodes or null */\n\t\tedge_out( from : Node , to : Node ) {\n\t\t\treturn this.edges_out.get( from )?.get( to ) ?? null\n\t\t}\n\t\t\n\t\t/** Return input Edge for two Nodes or null */\n\t\tedge_in( to : Node , from : Node ) {\n\t\t\treturn this.edges_in.get( to )?.get( from ) ?? null\n\t\t}\n\t\t\n\t\t// MUTATIONS\n\t\t\n\t\t/** Cut cycles at lowest priority of Edges */\n\t\tacyclic( get_weight : ( edge : Edge )=> number ) {\n\t\t\t\n\t\t\tconst checked = [] as Node[]\n\t\t\t\n\t\t\tfor( const start of this.nodes ) {\n\t\t\t\t\n\t\t\t\tconst path = [] as Node[]\n\t\t\t\t\n\t\t\t\tconst visit = ( from : Node ) : number => {\n\n\t\t\t\t\tif( checked.includes( from ) ) return Number.MAX_SAFE_INTEGER\n\n\t\t\t\t\tconst index = path.lastIndexOf( from )\n\t\t\t\t\tif( index > -1 ) {\n\n\t\t\t\t\t\tconst cycle = path.slice( index )\n\n\t\t\t\t\t\treturn cycle.reduce(\n\t\t\t\t\t\t\t( weight , node , index )=> Math.min(\n\t\t\t\t\t\t\t\tweight ,\n\t\t\t\t\t\t\t\tget_weight( this.edge_out( node , cycle[ ( index + 1 ) % cycle.length ] )! ) ,\n\t\t\t\t\t\t\t) ,\n\t\t\t\t\t\t\tNumber.MAX_SAFE_INTEGER ,\n\t\t\t\t\t\t)\n\n\t\t\t\t\t}\n\n\t\t\t\t\tpath.push( from )\n\n\t\t\t\t\tdive: try {\n\n\t\t\t\t\t\tconst deps = this.edges_out.get( from )\n\t\t\t\t\t\tif( !deps ) break dive\n\n\t\t\t\t\t\tfor( const [ to , edge ] of deps ) {\n\n\t\t\t\t\t\t\tif( to === from ) {\n\t\t\t\t\t\t\t\tthis.unlink( from , to )\n\t\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst weight_out = get_weight( edge )\n\t\t\t\t\t\t\tconst min = visit( to )\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif( weight_out > min ) return min\n\t\t\t\t\t\t\tif( weight_out === min ) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tthis.unlink( from , to )\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif( path.length > 1 ) {\n\t\t\t\t\t\t\t\t\tconst enter = path[ path.length - 2 ]\n\t\t\t\t\t\t\t\t\tthis.link( enter , to , edge )\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tpath.pop()\n\t\t\t\t\t}\n\n\t\t\t\t\tchecked.push( from )\n\n\t\t\t\t\treturn Number.MAX_SAFE_INTEGER\n\t\t\t\t}\n\n\t\t\t\tvisit( start )\n\n\t\t\t}\n\n\t\t}\n\t\t\n\t\t// NODES SELECTION\n\t\t\n\t\t/** Topoligical ordered set of all Nodes for acyclic graph */\n\t\tget sorted() {\n\n\t\t\tconst sorted = new Set< Node >()\n\t\t\t\n\t\t\tconst visit = ( node : Node ) => {\n\t\t\t\t\n\t\t\t\tif( sorted.has( node ) ) return\n\n\t\t\t\tconst deps = this.edges_out.get( node )\n\n\t\t\t\tif( deps ) {\n\t\t\t\t\tfor( const [dep] of deps ) visit( dep )\n\t\t\t\t}\n\n\t\t\t\tsorted.add( node )\n\t\t\t}\n\t\t\t\n\t\t\tfor( const node of this.nodes ) {\n\t\t\t\tvisit( node )\n\t\t\t}\n\t\t\t\n\t\t\treturn sorted\n\t\t}\n\t\t\n\t\t/** All Nodes which don't have input Edges */\n\t\tget roots() {\n\t\t\t\n\t\t\tconst roots = [] as Node[]\n\t\t\tfor( const node of this.nodes ) {\n\t\t\t\t\n\t\t\t\tif( this.edges_in.get( node )?.size ) continue\n\t\t\t\troots.push( node )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn roots\n\t\t}\n\t\t\n\t\t// DEPTH STATS\n\t\t\n\t\t/**\n\t\t * Nodes depth statistics for acyclic graph\n\t\t * @example\n\t\t * graph.depth_stat( Math.min )\n\t\t * graph.depth_stat( Math.max )\n\t\t **/\n\t\tnodes_depth( select: ( left: number, right: number )=> number ) {\n\t\t\t\n\t\t\tconst stat = new Map< Node, number >()\n\t\t\tconst visit = ( node: Node, depth = 0 )=> {\n\t\t\t\t\n\t\t\t\tif( stat.has( node ) ) stat.set( node, select( depth, stat.get( node )! ) )\n\t\t\t\telse stat.set( node, depth )\n\t\t\t\t\n\t\t\t\tfor( const kid of this.edges_out.get( node )?.keys() ?? [] ) visit( kid, depth + 1 )\n\t\t\t\t\n\t\t\t}\n\t\t\tfor( const root of this.roots ) visit( root )\n\t\t\t\n\t\t\treturn stat\n\t\t}\n\t\t\n\t\t/**\n\t\t * Depth's Nodes statistics for acyclic graph\n\t\t * @example\n\t\t * graph.depth_nodes( Math.min )\n\t\t * graph.depth_nodes( Math.max )\n\t\t **/\n\t\tdepth_nodes( select: ( left: number, right: number )=> number ) {\n\t\t\t\n\t\t\tconst groups = [] as Node[][]\n\t\t\tfor( const [ node, depth ] of this.nodes_depth( select ).entries() ) {\n\t\t\t\t\n\t\t\t\tif( groups[ depth ] ) groups[ depth ].push( node )\n\t\t\t\telse groups[ depth ] = [ node ]\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn groups\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\n\texport type $mol_time_interval_config = string | {\n\t\tstart? : $mol_time_moment_config\n\t\tend? : $mol_time_moment_config\n\t\tduration? : $mol_time_duration_config\n\t}\n\n\t/**\n\t * Small, simple, powerful, and fast TypeScript/JavaScript library for proper date/time/duration/interval arithmetic.\n\t *\n\t * Immutable iso8601 time interval representation.\n\t * @see http://localhost:9080/mol/app/docs/-/test.html#!demo=mol_time_demo\n\t */\n\texport class $mol_time_interval extends $mol_time_base {\n\n\t\tconstructor( config : $mol_time_interval_config ) {\n\t\t\t\n\t\t\tsuper()\n\t\t\t\n\t\t\tif( typeof config === 'string' ) {\n\t\t\t\t\n\t\t\t\tvar chunks = config.split( '/' )\n\t\t\t\t\n\t\t\t\tif( chunks[0] ) {\n\t\t\t\t\tif( chunks[0][0].toUpperCase() === 'P' ) {\n\t\t\t\t\t\tthis._duration = new $mol_time_duration( chunks[0] )\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._start = new $mol_time_moment( chunks[0] )\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._start = new $mol_time_moment()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( chunks[1] ) {\n\t\t\t\t\tif( chunks[1][0].toUpperCase() === 'P' ) {\n\t\t\t\t\t\tthis._duration = new $mol_time_duration( chunks[1] )\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._end = new $mol_time_moment( chunks[1] )\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._end = new $mol_time_moment()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tif( config.start !== undefined ) this._start = new $mol_time_moment( config.start )\n\t\t\tif( config.end !== undefined ) this._end = new $mol_time_moment( config.end )\n\t\t\tif( config.duration !== undefined ) this._duration = new $mol_time_duration( config.duration )\n\t\t}\n\n\t\tprivate _start : $mol_time_moment | undefined\n\t\tget start() {\n\t\t\tif( this._start ) return this._start\n\t\t\t\n\t\t\treturn this._start = this._end!.shift( this._duration!.mult( -1 ) )\n\t\t}\n\n\t\tprivate _end : $mol_time_moment | undefined\n\t\tget end() {\n\t\t\tif( this._end ) return this._end\n\t\t\t\n\t\t\treturn this._end = this._start!.shift( this._duration! )\n\t\t}\n\n\t\tprivate _duration : $mol_time_duration | undefined\n\t\tget duration() {\n\t\t\tif( this._duration ) return this._duration\n\t\t\t\n\t\t\treturn this._duration = new $mol_time_duration( this._end!.valueOf() - this._start!.valueOf() )\n\t\t}\n\n\t\ttoJSON() { return this.toString() }\n\n\t\ttoString( ) {\n\t\t\treturn ( this._start || this._duration || '' ).toString() + '/' + ( this._end || this._duration || '' ).toString()\n\t\t}\n\n\t\t[ Symbol.toPrimitive ]( mode: 'default' | 'number' | 'string' ) {\n\t\t\treturn this.toString()\n\t\t}\n\t\t\n\t}\n\n}\n","namespace $ {\n\t\n\ttype json = null | boolean | number | string | { [ key in string ]: json } | readonly json[]\n\t/** Supported primitive types. */\n\texport type $hyoo_crus_vary_type =\n\t| Uint8Array | bigint | $hyoo_crus_ref\n\t| BigInt64Array | Float64Array\n\t| $mol_time_moment | $mol_time_duration | $mol_time_interval\n\t| $mol_tree2 | json | Node\n\t\n\texport let $hyoo_crus_vary_mapping = {\n\t\t\n\t\tnil:   null,\n\t\tbin:   Uint8Array,\n\t\tbool:  Boolean,\n\t\tint:   BigInt,\n\t\treal:  Number,\n\t\tints:  BigInt64Array,\n\t\treals: Float64Array,\n\t\tref:   Symbol,\n\t\t\n\t\tstr:   String,\n\t\ttime:  $mol_time_moment,\n\t\tdur:   $mol_time_duration,\n\t\trange: $mol_time_interval,\n\t\tjson:  Object,\n\t\tjsan:  Array,\n\t\tdom:   $mol_dom_context.Element,\n\t\ttree:  $mol_tree2,\n\t\t\n\t}\n\t\n\texport type $hyoo_crus_vary_classes = typeof $hyoo_crus_vary_mapping[ keyof typeof $hyoo_crus_vary_mapping ]\n\t\n\t/** Universal binary package which contains some TIP and bin */\n\texport type $hyoo_crus_vary_pack = {\n\t\ttip: keyof typeof $hyoo_crus_vary_tip,\n\t\tbin: Uint8Array,\n\t}\n\t\n\t/** Hint how to interpret Data. */\n\texport enum $hyoo_crus_vary_tip {\n\t\t\n\t\t/** 0. No Data */\n\t\tnil = 0b00001,\n\t\t/** 0. Binary */\n\t\tbin = 0b00010,\n\t\t/** 1b * 32 * 8. Boolean */\n\t\tbool = 0b00011,\n\t\t/** 8B. int64 */\n\t\tint = 0b00100,\n\t\t/** 8B. float64 */\n\t\treal = 0b00101,\n\t\t/** 8B * n<=4. int64 */\n\t\tints = 0b00110,\n\t\t/** 8B * n<=4. float64 */\n\t\treals = 0b00111,\n\t\t/** 12B. Reference to Node/Land/Lord. */\n\t\tref = 0b01000,\n\t\t\n\t\t/** String */\n\t\tstr = 0b10000,\n\t\t/** iso8601 moment*/\n\t\ttime = 0b10001,\n\t\t/** iso8601 duration */\n\t\tdur = 0b10010,\n\t\t/** iso8601 interval */\n\t\trange = 0b10011,\n\t\t/** Plain Old JS Object. */\n\t\tjson = 0b10100, // json object\n\t\t/** Plain Old JS Array. */\n\t\tjsan = 0b10101,\n\t\t/** Document Object Model (xml, xhtml etc). */\n\t\tdom = 0b10110,\n\t\t/** Abstract Syntax Tree. */\n\t\ttree  = 0b10111,\n\n\t}\n\t\n\texport function $hyoo_crus_vary_switch< Ways extends {\n\t\t\t\n\t\tnil:   ( vary: null )=> any,\n\t\tbin:   ( vary: Uint8Array< ArrayBuffer > )=> any,\n\t\tbool:  ( vary: boolean )=> any,\n\t\tint:   ( vary: bigint )=> any,\n\t\tints:  ( vary: BigInt64Array< ArrayBuffer > )=> any,\n\t\treal:  ( vary: number )=> any,\n\t\treals: ( vary: Float64Array< ArrayBuffer > )=> any,\n\t\tref:   ( vary: $hyoo_crus_ref )=> any,\n\t\t\n\t\tstr:   ( vary: string )=> any,\n\t\ttime:  ( vary: $mol_time_moment )=> any,\n\t\tdur:   ( vary: $mol_time_duration )=> any,\n\t\trange: ( vary: $mol_time_interval )=> any,\n\t\tjson:  ( vary: {} )=> any,\n\t\tjsan:  ( vary: any[] )=> any,\n\t\tdom:   ( vary: Element )=> any,\n\t\ttree:  ( vary: $mol_tree2 )=> any,\n\t\t\n\t} >(\n\t\tvary: $hyoo_crus_vary_type,\n\t\tways: Ways,\n\t): $mol_type_result< Ways[ keyof Ways ] > {\n\t\t\n\t\tif( vary === null ) return ways.nil( vary )\n\t\t\t\n\t\tswitch( typeof vary ) {\n\t\t\tcase \"boolean\": return ways.bool( vary )\n\t\t\tcase \"bigint\": return ways.int( vary )\n\t\t\tcase \"number\": return ways.real( vary )\n\t\t\tcase \"string\": return ways.str( vary )\n\t\t\tcase 'symbol': return ways.ref( vary )\n\t\t}\n\t\t\n\t\tswitch( Reflect.getPrototypeOf( vary ) ) {\n\t\t\tcase Object.prototype: return ways.json( vary )\n\t\t\tcase Array.prototype: return ways.jsan( vary as any[] )\n\t\t\tcase Uint8Array.prototype: return ways.bin( vary as Uint8Array< ArrayBuffer > )\n\t\t\tcase BigInt64Array.prototype: return ways.ints( vary as BigInt64Array< ArrayBuffer > )\n\t\t\tcase Float64Array.prototype: return ways.reals( vary as Float64Array< ArrayBuffer > )\n\t\t\tcase $mol_time_moment.prototype: return ways.time( vary as $mol_time_moment )\n\t\t\tcase $mol_time_duration.prototype: return ways.dur( vary as $mol_time_duration )\n\t\t\tcase $mol_time_interval.prototype: return ways.range( vary as $mol_time_interval )\n\t\t\tcase $mol_tree2.prototype: return ways.tree( vary as $mol_tree2 )\n\t\t}\n\t\t\n\t\tif( vary instanceof $mol_dom_context.Element ) return ways.dom( vary )\n\t\t\n\t\treturn $mol_fail( new TypeError( `Unsupported vary type` ) )\n\t}\n\t\n\texport function $hyoo_crus_vary_encode( vary: $hyoo_crus_vary_type ): $hyoo_crus_vary_pack {\n\t\treturn $hyoo_crus_vary_switch( vary, {\n\t\t\t\n\t\t\tnil:   vary => ({ tip: 'nil' as const,   bin: new Uint8Array([]) }),\n\t\t\tbin:   vary => ({ tip: 'bin' as const,   bin: vary }),\n\t\t\tbool:  vary => ({ tip: 'bool' as const,  bin: new Uint8Array([ Number( vary ) ]) }),\n\t\t\tint:   vary => ({ tip: 'int' as const,   bin: new Uint8Array( new BigInt64Array([ vary ]).buffer ) }),\n\t\t\tints:  vary => ({ tip: 'ints' as const,  bin: new Uint8Array( vary.buffer, vary.byteLength, vary.byteLength ) }),\n\t\t\treal:  vary => ({ tip: 'real' as const,  bin: new Uint8Array( new Float64Array([ vary ]).buffer ) }),\n\t\t\treals: vary => ({ tip: 'reals' as const, bin: new Uint8Array( vary.buffer, vary.byteLength, vary.byteLength ) }),\n\t\t\tref:   vary => ({ tip: 'ref' as const,   bin: $hyoo_crus_ref_encode( vary ) }),\n\t\t\t\n\t\t\tstr:   vary => ({ tip: 'str' as const,   bin: $mol_charset_encode( vary ) }),\n\t\t\ttime:  vary => ({ tip: 'time' as const,  bin: $mol_charset_encode( String( vary ) ) }),\n\t\t\tdur:   vary => ({ tip: 'dur' as const,   bin: $mol_charset_encode( String( vary ) ) }),\n\t\t\trange: vary => ({ tip: 'range' as const, bin: $mol_charset_encode( String( vary ) ) }),\n\t\t\tjson:  vary => ({ tip: 'json' as const,  bin: $mol_charset_encode( JSON.stringify( vary ) ) }),\n\t\t\tjsan:  vary => ({ tip: 'jsan' as const,  bin: $mol_charset_encode( JSON.stringify( vary ) ) }),\n\t\t\tdom:   vary => ({ tip: 'dom' as const,   bin: $mol_charset_encode( $mol_dom_serialize( vary ) ) }),\n\t\t\ttree:  vary => ({ tip: 'tree' as const,  bin: $mol_charset_encode( String( vary ) ) }),\n\t\t\t\n\t\t} )\n\t}\n\t\n\texport function $hyoo_crus_vary_decode( { tip, bin }: $hyoo_crus_vary_pack ): $hyoo_crus_vary_type {\n\t\tswitch( tip ) {\n\t\t\t\n\t\t\tcase 'nil':   return null\n\t\t\tcase 'bin':   return bin\n\t\t\tcase 'bool':  return Boolean( bin[0] )\n\t\t\tcase 'int':   return new BigInt64Array( bin.buffer, bin.byteOffset, bin.byteLength / 8 )[0]\n\t\t\tcase 'ints':  return new BigInt64Array( bin.buffer, bin.byteOffset, bin.byteLength / 8 )\n\t\t\tcase 'real':  return new Float64Array( bin.buffer, bin.byteOffset, bin.byteLength / 8 )[0]\n\t\t\tcase 'reals': return new Float64Array( bin.buffer, bin.byteOffset, bin.byteLength / 8 )\n\t\t\tcase 'ref':   return $hyoo_crus_ref_decode( bin )\n\t\t\t\n\t\t\tcase 'str':   return $mol_charset_decode( bin )\n\t\t\tcase 'time':  return new $mol_time_moment( $mol_charset_decode( bin ) )\n\t\t\tcase 'dur':   return new $mol_time_duration( $mol_charset_decode( bin ) )\n\t\t\tcase 'range': return new $mol_time_interval( $mol_charset_decode( bin ) )\n\t\t\tcase 'json':  return JSON.parse( $mol_charset_decode( bin ) )\n\t\t\tcase 'jsan':  return JSON.parse( $mol_charset_decode( bin ) )\n\t\t\tcase 'dom':   return $mol_dom_parse( $mol_charset_decode( bin ) ).documentElement\n\t\t\tcase 'tree':  return $$.$mol_tree2_from_string( $mol_charset_decode( bin ) )\n\t\t\t\n\t\t}\n\t}\n\t\n}\n","namespace $ {\n\n\texport function $mol_tree2_bin_to_bytes( tree : $mol_tree2 ) {\n\t\treturn Uint8Array.from( tree.kids , kid => parseInt( kid.value , 16 ) )\n\t}\n\n\texport function $mol_tree2_bin_from_bytes(\n\t\tbytes : ArrayLike< number >,\n\t\tspan  = $mol_span.unknown,\n\t) {\n\t\t\n\t\treturn $mol_tree2.list( Array.from( bytes , code => {\n\t\t\treturn $mol_tree2.data( code.toString( 16 ).padStart( 2 , '0' ) , [] , span )\n\t\t} ) , span )\n\t\t\n\t}\n\n\texport function $mol_tree2_bin_from_string(\n\t\tstr : string,\n\t\tspan = $mol_span.unknown,\n\t) {\n\t\treturn $mol_tree2_bin_from_bytes( [ ... new TextEncoder().encode( str ) ] , span )\n\t}\n\n}\n","namespace $ {\n\t\n\texport function $mol_tree2_xml_from_dom( dom: Node ): $mol_tree2 {\n\t\t\n\t\tswitch( dom.nodeType ) {\n\t\t\t\n\t\t\tcase dom.DOCUMENT_NODE: {\n\t\t\t\tlet kids = [] as $mol_tree2[]\n\t\t\t\t\n\t\t\t\tfor( const kid of dom.childNodes ) {\n\t\t\t\t\tkids.push( $mol_tree2_xml_from_dom( kid ) )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn $mol_tree2.list( kids )\n\t\t\t}\n\t\t\t\n\t\t\tcase dom.PROCESSING_INSTRUCTION_NODE: {\n\t\t\t\treturn $mol_tree2.struct( '?', [\n\t\t\t\t\t$mol_tree2.struct( dom.nodeName, \n\t\t\t\t\t\tdom.nodeValue!.split(' ').map( chunk => {\n\t\t\t\t\t\t\tconst [, name, value ] = /^(.*?)(?:=\"(.*?)\")?$/.exec( chunk )!\n\t\t\t\t\t\t\tconst kids = value ? [ $mol_tree2.data( value ) ] : []\n\t\t\t\t\t\t\treturn $mol_tree2.struct( name, kids )\n\t\t\t\t\t\t} )\n\t\t\t\t\t)\n\t\t\t\t] )\n\t\t\t}\n\t\t\t\n\t\t\tcase dom.DOCUMENT_TYPE_NODE: {\n\t\t\t\tconst dom2 = dom as DocumentType\n\t\t\t\treturn $mol_tree2.struct( '!', [\n\t\t\t\t\t$mol_tree2.struct( 'DOCTYPE', [ \n\t\t\t\t\t\t$mol_tree2.struct( dom2.name )\n\t\t\t\t\t] )\n\t\t\t\t] )\n\t\t\t}\n\t\t\t\n\t\t\tcase dom.ELEMENT_NODE: {\n\t\t\t\tlet kids = [] as $mol_tree2[]\n\t\t\t\t\n\t\t\t\tfor( const attr of ( dom as Element ).attributes ) {\n\t\t\t\t\tkids.push(\n\t\t\t\t\t\t$mol_tree2.struct( '@', [\n\t\t\t\t\t\t\t$mol_tree2.struct( attr.nodeName, [\n\t\t\t\t\t\t\t\t$mol_tree2.data( attr.nodeValue! )\n\t\t\t\t\t\t\t] )\n\t\t\t\t\t\t] )\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor( const kid of dom.childNodes ) {\n\t\t\t\t\tconst k = $mol_tree2_xml_from_dom( kid ) \n\t\t\t\t\tif( k.type || k.value ) kids.push( k )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn $mol_tree2.struct( dom.nodeName, kids )\n\t\t\t}\n\t\t\t\n\t\t\tcase dom.COMMENT_NODE: {\n\t\t\t\treturn $mol_tree2.struct( '--', [\n\t\t\t\t\t$mol_tree2.data( dom.nodeValue! )\n\t\t\t\t] )\n\t\t\t}\n\t\t\t\n\t\t\tcase dom.TEXT_NODE: {\n\t\t\t\tif( !dom.nodeValue!.trim() ) return $mol_tree2.list([])\n\t\t\t\treturn $mol_tree2.data(\n\t\t\t\t\tdom.nodeValue!.replace( /\\s+/g, ' ' )\n\t\t\t\t)\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn $mol_fail( new Error( `Unsupported node ${ dom.nodeName }` ) )\n\t}\n\t\n}\n","/** @jsx $mol_jsx */\nnamespace $ {\n\t\n\texport function $hyoo_crus_vary_cast_bin( vary: $hyoo_crus_vary_type ): Uint8Array | null {\n\t\treturn vary === null || vary === '' ? null : $hyoo_crus_vary_encode( vary ).bin\n\t}\n\t\n\texport function $hyoo_crus_vary_cast_bool( vary: $hyoo_crus_vary_type ): boolean | null {\n\t\treturn $hyoo_crus_vary_switch( vary, {\n\t\t\t\n\t\t\tnil:   vary => null,\n\t\t\tbin:   vary => Boolean( vary.length ),\n\t\t\tbool:  vary => vary,\n\t\t\tint:   vary => Boolean( vary ),\n\t\t\treal:  vary => Boolean( vary ),\n\t\t\tints:  vary => Boolean( vary.length ),\n\t\t\treals: vary => Boolean( vary.length ),\n\t\t\tref:   vary => Boolean( vary.description ),\n\t\t\t\n\t\t\tstr:   vary => Boolean( vary ),\n\t\t\ttime:  vary => Boolean( vary.valueOf() ),\n\t\t\tdur:   vary => Boolean( vary.valueOf() ),\n\t\t\trange: vary => Boolean( vary.duration.valueOf() ),\n\t\t\tjson:  vary => Boolean( Reflect.ownKeys( vary ).length ),\n\t\t\tjsan:  vary => Boolean( vary.length ),\n\t\t\tdom:   vary => Boolean( vary.attributes.length + vary.childNodes.length ),\n\t\t\ttree:  vary => Boolean( vary.value || vary.kids.length ),\n\t\t\t\n\t\t})\n\t}\n\n\texport function $hyoo_crus_vary_cast_int( vary: $hyoo_crus_vary_type ): bigint | null {\n\t\treturn $hyoo_crus_vary_switch( vary, {\n\t\t\t\n\t\t\tnil:   vary => null,\n\t\t\tbin:   vary => BigInt( vary.length ),\n\t\t\tbool:  vary => BigInt( vary ),\n\t\t\tint:   vary => vary,\n\t\t\treal:  vary => Number.isFinite( vary ) ? BigInt( Math.trunc( vary ) ) : null,\n\t\t\tints:  vary => BigInt( vary.length ),\n\t\t\treals: vary => BigInt( vary.length ),\n\t\t\tref:   vary => null,//$mol_base64_ae_decode( vary.description!.slice( 0, 16 ) ) + ( BigInt( vary.land() ) << 64n ) + ( BigInt( vary.head() ) << 96n ),\n\t\t\t\n\t\t\tstr:   vary => {\n\t\t\t\ttry {\n\t\t\t\t\treturn vary ? BigInt( vary ) : null\n\t\t\t\t} catch {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\ttime:  vary => BigInt( vary.valueOf() ),\n\t\t\tdur:   vary => BigInt( vary.valueOf() ),\n\t\t\trange: vary => BigInt( vary.duration.valueOf() ),\n\t\t\t\n\t\t\tjson:  vary => BigInt( Reflect.ownKeys( vary ).length ),\n\t\t\tjsan:  vary => BigInt( vary.length ),\n\t\t\tdom:   vary => BigInt( vary.attributes.length + vary.childNodes.length ),\n\t\t\t\n\t\t\ttree:  vary => {\n\t\t\t\ttry {\n\t\t\t\t\treturn BigInt( vary.value )\n\t\t\t\t} catch {\n\t\t\t\t\treturn BigInt( vary.kids.length )\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\t\n\t\t})\n\t}\n\n\texport function $hyoo_crus_vary_cast_real( vary: $hyoo_crus_vary_type ): number | null {\n\t\treturn $hyoo_crus_vary_switch( vary, {\n\t\t\t\n\t\t\tnil:   vary => null,\n\t\t\tbin:   vary => vary.length,\n\t\t\tbool:  vary => Number( vary ),\n\t\t\tint:   vary => Number( vary ),\n\t\t\treal:  vary => vary,\n\t\t\tints:  vary => vary.length,\n\t\t\treals: vary => vary.length,\n\t\t\tref:   vary => null,\n\t\t\t\n\t\t\tstr:   vary => vary ? Number( vary ) : null,\n\t\t\ttime:  vary => vary.valueOf(),\n\t\t\tdur:   vary => vary.valueOf(),\n\t\t\trange: vary => vary.duration.valueOf(),\n\t\t\tjson:  vary => Reflect.ownKeys( vary ).length,\n\t\t\tjsan:  vary => vary.length,\n\t\t\tdom:   vary => Number( vary.attributes.length + vary.childNodes.length ),\n\t\t\ttree:  vary => Number( vary.value || vary.kids.length ),\n\t\t\t\n\t\t})\n\t}\n\n\texport function $hyoo_crus_vary_cast_ints( vary: $hyoo_crus_vary_type ): BigInt64Array | null {\n\t\treturn $hyoo_crus_vary_switch( vary, {\n\t\t\t\n\t\t\tnil:   vary => null,\n\t\t\tbin:   vary => new BigInt64Array( [ ... vary ].map( BigInt ) ),\n\t\t\tbool:  vary => vary ? new BigInt64Array([ 1n ]) : null,\n\t\t\tint:   vary => new BigInt64Array([ vary ]),\n\t\t\treal:  vary => Number.isFinite( vary ) ? new BigInt64Array([ BigInt( vary ) ]) : null,\n\t\t\tints:  vary => vary,\n\t\t\treals: vary => new BigInt64Array( [ ... vary ].map( BigInt ) ),\n\t\t\tref:   vary => null,\n\t\t\t\n\t\t\tstr:   vary => {\n\t\t\t\tif( !vary ) return null\n\t\t\t\treturn new BigInt64Array( vary.split( ',' ).map( v => BigInt(v) || 0n ) )\n\t\t\t},\n\t\t\ttime:  vary => new BigInt64Array([ BigInt( vary.valueOf() ) ]),\n\t\t\tdur:   vary => new BigInt64Array([ BigInt( vary.valueOf() ) ]),\n\t\t\trange: vary => null,\n\t\t\tjson:  vary => null,\n\t\t\tjsan:  vary => null,\n\t\t\tdom:   vary => null,\n\t\t\ttree:  vary => null,\n\t\t\t\n\t\t})\n\t}\n\n\texport function $hyoo_crus_vary_cast_reals( vary: $hyoo_crus_vary_type ): Float64Array | null {\n\t\treturn $hyoo_crus_vary_switch( vary, {\n\t\t\t\n\t\t\tnil:   vary => null,\n\t\t\tbin:   vary => new Float64Array( [ ... vary ] ),\n\t\t\tbool:  vary => vary ? new Float64Array([ 1 ]) : null,\n\t\t\tint:   vary => new Float64Array([ Number( vary ) ]),\n\t\t\treal:  vary => ( vary && Number.isFinite( vary ) ) ? new Float64Array([ vary ]) : null,\n\t\t\tints:  vary => new Float64Array( [ ... vary ].map( Number ) ),\n\t\t\treals: vary => vary,\n\t\t\tref:   vary => null,\n\t\t\t\n\t\t\tstr:   vary => {\n\t\t\t\tif( !vary ) return null\n\t\t\t\treturn new Float64Array( vary.split( ',' ).map( v => Number(v) || 0 ) )\n\t\t\t},\n\t\t\ttime:  vary => new Float64Array([ vary.valueOf() ]),\n\t\t\tdur:   vary => new Float64Array([ vary.valueOf() ]),\n\t\t\trange: vary => null,\n\t\t\tjson:  vary => null,\n\t\t\tjsan:  vary => null,\n\t\t\tdom:   vary => null,\n\t\t\ttree:  vary => null,\n\t\t\t\n\t\t})\n\t}\n\n\texport function $hyoo_crus_vary_cast_ref( vary: $hyoo_crus_vary_type ): $hyoo_crus_ref | null {\n\t\treturn $hyoo_crus_vary_switch( vary, {\n\t\t\t\n\t\t\tnil:   vary => null,\n\t\t\tbin:   vary => ( !vary.length || vary.length % 6 ) ? null : $hyoo_crus_ref_decode( vary ),\n\t\t\tbool:  vary => null,\n\t\t\tint:   vary => null,\n\t\t\treal:  vary => null,\n\t\t\tints:  vary => null,\n\t\t\treals: vary => null,\n\t\t\tref:   vary => vary,\n\t\t\t\n\t\t\tstr:   vary => {\n\t\t\t\ttry {\n\t\t\t\t\treturn $hyoo_crus_ref( vary )\n\t\t\t\t} catch {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t},\n\t\t\ttime:  vary => null,\n\t\t\tdur:   vary => null,\n\t\t\trange: vary => null,\n\t\t\tjson:  vary => null,\n\t\t\tjsan:  vary => null,\n\t\t\tdom:   vary => null,\n\t\t\ttree:  vary => {\n\t\t\t\ttry {\n\t\t\t\t\treturn $hyoo_crus_ref( vary.type )\n\t\t\t\t} catch {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t})\n\t}\n\n\texport function $hyoo_crus_vary_cast_str( vary: $hyoo_crus_vary_type ): string | null {\n\t\treturn $hyoo_crus_vary_switch( vary, {\n\t\t\t\n\t\t\tnil:   vary => null,\n\t\t\tbin:   vary => [ ... vary ].map( n => n.toString(16).padStart( 2, '0' ) ).join( '' ),\n\t\t\tbool:  vary => String( vary ),\n\t\t\tint:   vary => String( vary ),\n\t\t\treal:  vary => String( vary ),\n\t\t\tints:  vary => vary.join(','),\n\t\t\treals: vary => vary.join(','),\n\t\t\tref:   vary => vary.description!,\n\t\t\t\n\t\t\tstr:   vary => vary,\n\t\t\ttime:  vary => String( vary ),\n\t\t\tdur:   vary => String( vary ),\n\t\t\trange: vary => String( vary ),\n\t\t\tjson:  vary => JSON.stringify( vary ),\n\t\t\tjsan:  vary => JSON.stringify( vary ),\n\t\t\tdom:   vary => $mol_dom_serialize( vary ),\n\t\t\ttree:  vary => String( vary ),\n\t\t\t\n\t\t})\n\t}\n\n\texport function $hyoo_crus_vary_cast_time( vary: $hyoo_crus_vary_type ): $mol_time_moment | null {\n\t\treturn $hyoo_crus_vary_switch( vary, {\n\t\t\t\n\t\t\tnil:   vary => null,\n\t\t\tbin:   vary => null,\n\t\t\tbool:  vary => null,\n\t\t\tint:   vary => new $mol_time_moment( Number( vary & 0xFFFFFFFFFFFFn ) ),\n\t\t\treal:  vary => {\n\t\t\t\ttry {\n\t\t\t\t\treturn new $mol_time_moment( vary )\n\t\t\t\t} catch {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t},\n\t\t\tints:  vary => null,\n\t\t\treals: vary => null,\n\t\t\tref:   vary => null,\n\t\t\t\n\t\t\tstr:   vary => {\n\t\t\t\ttry {\n\t\t\t\t\treturn vary ? new $mol_time_moment( vary ) : null\n\t\t\t\t} catch {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t},\n\t\t\ttime:  vary => vary,\n\t\t\tdur:   vary => null,\n\t\t\trange: vary => null,\n\t\t\tjson:  vary => {\n\t\t\t\ttry {\n\t\t\t\t\treturn new $mol_time_moment( vary )\n\t\t\t\t} catch {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t},\n\t\t\tjsan:  vary => null,\n\t\t\tdom:   vary => null,\n\t\t\ttree:  vary => null,\n\t\t\t\n\t\t})\n\t}\n\n\texport function $hyoo_crus_vary_cast_dur( vary: $hyoo_crus_vary_type ): $mol_time_duration | null {\n\t\treturn $hyoo_crus_vary_switch( vary, {\n\t\t\t\n\t\t\tnil:   vary => null,\n\t\t\tbin:   vary => null,\n\t\t\tbool:  vary => null,\n\t\t\tint:   vary => new $mol_time_duration( Number( vary & 0xFFFFFFFFFFFFn ) ),\n\t\t\treal:  vary => {\n\t\t\t\ttry {\n\t\t\t\t\treturn new $mol_time_duration( vary )\n\t\t\t\t} catch {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t},\n\t\t\tints:  vary => null,\n\t\t\treals: vary => null,\n\t\t\tref:   vary => null,\n\t\t\t\n\t\t\tstr:   vary => {\n\t\t\t\ttry {\n\t\t\t\t\treturn new $mol_time_duration( vary )\n\t\t\t\t} catch {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t},\n\t\t\ttime:  vary => null,\n\t\t\tdur:   vary => vary,\n\t\t\trange: vary => null,\n\t\t\tjson:  vary => new $mol_time_duration( vary as any ),\n\t\t\tjsan:  vary => null,\n\t\t\tdom:   vary => null,\n\t\t\ttree:  vary => null,\n\t\t\t\n\t\t})\n\t}\n\n\texport function $hyoo_crus_vary_cast_range( vary: $hyoo_crus_vary_type ): $mol_time_interval | null {\n\t\treturn $hyoo_crus_vary_switch( vary, {\n\t\t\t\n\t\t\tnil:   vary => null,\n\t\t\tbin:   vary => null,\n\t\t\tbool:  vary => null,\n\t\t\tint:   vary => null,\n\t\t\treal:  vary => null,\n\t\t\tints:  vary => null,\n\t\t\treals: vary => null,\n\t\t\tref:   vary => null,\n\t\t\t\n\t\t\tstr:   vary => {\n\t\t\t\ttry {\n\t\t\t\t\treturn vary ? new $mol_time_interval( vary ) : null\n\t\t\t\t} catch {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t},\n\t\t\ttime:  vary => new $mol_time_interval({ start: vary, duration: 0 }),\n\t\t\tdur:   vary => null,\n\t\t\trange: vary => vary,\n\t\t\tjson:  vary => {\n\t\t\t\ttry {\n\t\t\t\t\treturn new $mol_time_interval( vary )\n\t\t\t\t} catch {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t},\n\t\t\tjsan:  vary => null,\n\t\t\tdom:   vary => null,\n\t\t\ttree:  vary => null,\n\t\t\t\n\t\t})\n\t}\n\n\texport function $hyoo_crus_vary_cast_json( vary: $hyoo_crus_vary_type ): {} | null {\n\t\treturn $hyoo_crus_vary_switch( vary, {\n\t\t\t\n\t\t\tnil:   vary => null,\n\t\t\tbin:   vary => null,\n\t\t\tbool:  vary => null,\n\t\t\tint:   vary => null,\n\t\t\treal:  vary => null,\n\t\t\tints:  vary => null,\n\t\t\treals: vary => null,\n\t\t\tref:   vary => null,\n\t\t\t\n\t\t\tstr:   vary => {\n\t\t\t\tif( !vary ) return null\n\t\t\t\ttry {\n\t\t\t\t\tconst res = JSON.parse( vary )\n\t\t\t\t\tif( typeof res === 'object' ) return res\n\t\t\t\t\treturn null\n\t\t\t\t} catch {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t},\n\t\t\ttime:  vary => ({ ... vary }),\n\t\t\tdur:   vary => ({ ... vary }),\n\t\t\trange: vary => ({ ... vary }),\n\t\t\tjson:  vary => vary,\n\t\t\tjsan:  vary => Object( vary[0] ),\n\t\t\tdom:   vary => null,\n\t\t\ttree:  vary => null,\n\t\t\t\n\t\t})\n\t}\n\n\texport function $hyoo_crus_vary_cast_jsan( vary: $hyoo_crus_vary_type ): any[] | null {\n\t\treturn $hyoo_crus_vary_switch( vary, {\n\t\t\t\n\t\t\tnil:   vary => null,\n\t\t\tbin:   vary => [ ... vary ],\n\t\t\tbool:  vary => [ vary ],\n\t\t\tint:   vary => [ vary.toString() ],\n\t\t\treal:  vary => Number.isFinite( vary ) ? [ vary ] : null,\n\t\t\tints:  vary => [ ... vary ].map( v => Number( v ) ),\n\t\t\treals: vary => [ ... vary ],\n\t\t\tref:   vary => [ vary.description! ],\n\t\t\t\n\t\t\tstr:   vary => {\n\t\t\t\tif( !vary ) return null\n\t\t\t\ttry {\n\t\t\t\t\treturn [].concat( JSON.parse( vary ) )\n\t\t\t\t} catch {\n\t\t\t\t\treturn [ vary ]\n\t\t\t\t}\n\t\t\t},\n\t\t\ttime:  vary => [ vary.toJSON() ],\n\t\t\tdur:   vary => [ vary.toJSON() ],\n\t\t\trange: vary => [ vary.toJSON() ],\n\t\t\tjson:  vary => [ vary ],\n\t\t\tjsan:  vary => vary,\n\t\t\tdom:   vary => [ $mol_dom_serialize( vary ) ],\n\t\t\ttree:  vary => [ vary.toString() ],\n\t\t\t\n\t\t})\n\t}\n\n\texport function $hyoo_crus_vary_cast_dom( vary: $hyoo_crus_vary_type ): Element | null {\n\t\treturn $hyoo_crus_vary_switch( vary, {\n\t\t\t\n\t\t\tnil:   vary => null,\n\t\t\tbin:   vary => <body>{ vary && $mol_base64_ae_encode( vary ) }</body>,\n\t\t\tbool:  vary => <body>{ vary }</body>,\n\t\t\tint:   vary => <body>{ vary }</body>,\n\t\t\treal:  vary => <body>{ vary }</body>,\n\t\t\tints:  vary => <body>{ vary.join(',') }</body>,\n\t\t\treals: vary => <body>{ vary.join(',') }</body>,\n\t\t\tref:   vary => <body>{ vary.description }</body>,\n\t\t\t\n\t\t\tstr:   vary => {\n\t\t\t\tif( !vary ) return null\n\t\t\t\ttry {\n\t\t\t\t\treturn vary ? $mol_dom_parse( vary, 'application/xhtml+xml' ).documentElement : null\n\t\t\t\t} catch {\n\t\t\t\t\treturn <body>{ vary }</body>\n\t\t\t\t}\n\t\t\t},\n\t\t\ttime:  vary => <body>{ vary }</body>,\n\t\t\tdur:   vary => <body>{ vary }</body>,\n\t\t\trange: vary => <body>{ vary }</body>,\n\t\t\tjson:  vary => <body>{ JSON.stringify( vary ) }</body>,\n\t\t\tjsan:  vary => <body>{ JSON.stringify( vary ) }</body>,\n\t\t\tdom:   vary => vary,\n\t\t\ttree:  vary => <body>{ vary }</body>,\n\t\t\t\n\t\t})\n\t}\n\n\texport function $hyoo_crus_vary_cast_tree( vary: $hyoo_crus_vary_type ): $mol_tree2 | null {\n\t\treturn $hyoo_crus_vary_switch( vary, {\n\t\t\t\n\t\t\tnil:   vary => null,\n\t\t\tbin:   vary => $mol_tree2_bin_from_bytes( vary ),\n\t\t\tbool:  vary => $mol_tree2.struct( vary.toString() ),\n\t\t\tint:   vary => $mol_tree2.struct( vary.toString() ),\n\t\t\treal:  vary => $mol_tree2.struct( vary.toString() ),\n\t\t\tints:  vary => $mol_tree2.list( [ ... vary ].map( v => $mol_tree2.struct( v.toString() ) ) ),\n\t\t\treals: vary => $mol_tree2.list( [ ... vary ].map( v => $mol_tree2.struct( v.toString() ) ) ),\n\t\t\tref:   vary => $mol_tree2.struct( vary.description! ),\n\t\t\t\n\t\t\tstr:   vary => {\n\t\t\t\tif( !vary ) return null\n\t\t\t\ttry {\n\t\t\t\t\treturn $$.$mol_tree2_from_string( vary )\n\t\t\t\t} catch {\n\t\t\t\t\treturn $$.$mol_tree2.data( vary )\n\t\t\t\t}\n\t\t\t},\n\t\t\ttime:  vary => $mol_tree2.struct( vary.toString() ),\n\t\t\tdur:   vary => $mol_tree2.struct( vary.toString() ),\n\t\t\trange: vary => $mol_tree2.struct( vary.toString() ),\n\t\t\tjson:  vary => $$.$mol_tree2_from_json( vary ),\n\t\t\tjsan:  vary => $$.$mol_tree2_from_json( vary ),\n\t\t\tdom:   vary => $$.$mol_tree2_xml_from_dom( vary ),\n\t\t\ttree:  vary => vary,\n\t\t\t\n\t\t})\n\t}\n\n\texport const $hyoo_crus_vary_cast_funcs = {\n\t\t\t\n\t\tnil: ()=> null,\n\t\tbin: $hyoo_crus_vary_cast_bin,\n\t\tbool: $hyoo_crus_vary_cast_bool,\n\t\tint: $hyoo_crus_vary_cast_int,\n\t\treal: $hyoo_crus_vary_cast_real,\n\t\tints: $hyoo_crus_vary_cast_ints,\n\t\treals: $hyoo_crus_vary_cast_reals,\n\t\tref: $hyoo_crus_vary_cast_ref,\n\t\t\n\t\tstr: $hyoo_crus_vary_cast_str,\n\t\ttime: $hyoo_crus_vary_cast_time,\n\t\tdur: $hyoo_crus_vary_cast_dur,\n\t\trange: $hyoo_crus_vary_cast_range,\n\t\tjson: $hyoo_crus_vary_cast_json,\n\t\tjsan: $hyoo_crus_vary_cast_jsan,\n\t\tdom: $hyoo_crus_vary_cast_dom,\n\t\ttree: $hyoo_crus_vary_cast_tree,\n\t\t\n\t} as const\n\t\n\texport function $hyoo_crus_vary_cast<\n\t\tTip extends keyof typeof $hyoo_crus_vary_tip\n\t>(\n\t\ttip: Tip,\n\t\tvary: $hyoo_crus_vary_type,\n\t) {\n\t\treturn $hyoo_crus_vary_cast_funcs[ tip ]( vary )\n\t}\n\t\n}\n","namespace $ {\n    export class $mol_bus< Data > extends $mol_object {\n\t\t\n        readonly channel: BroadcastChannel\n\t\t\n\t\tconstructor(\n\t\t\treadonly name: string,\n\t\t\treadonly handle: ( data: Data )=> void\n\t\t) {\n\t\t\tsuper()\n            const channel = new BroadcastChannel( name )\n            channel.onmessage = ( event: MessageEvent< Data > )=> this.handle( event.data )\n\t\t\tthis.channel = channel\n        }\n\t\t\n\t\tdestructor() {\n\t\t\tthis.channel.close()\n\t\t}\n\t\t\n\t\tsend( data: Data ) {\n\t\t\tthis.channel.postMessage( data )\n\t\t}\n\t\t\n    }\n}\n","namespace $ {\n\texport function $hyoo_crus_log( this: $ ) {\n\t\treturn this.$mol_state_arg.value( 'hyoo_crus_log' ) !== null\n\t}\n}\n","namespace $ {\n\t\n\t/** Starts subtasks concurrently instead of serial. */\n\texport function $mol_wire_race<\n\t\tTasks extends ( ( ... args: any )=> any )[]\n\t>( ... tasks: Tasks ): {\n\t\t[ index in keyof Tasks ]: ReturnType< Tasks[ index ] > \n\t} {\n\t\t\n\t\tconst results = tasks.map( task => {\n\t\t\t\n\t\t\ttry {\n\t\t\t\treturn task()\n\t\t\t} catch( error ) {\n\t\t\t\treturn error\n\t\t\t}\n\t\t\t\n\t\t} )\n\t\t\n\t\tconst promises = results.filter( res => $mol_promise_like( res ) )\n\t\tif( promises.length ) $mol_fail( Promise.race( promises ) )\n\t\t\n\t\tconst error = results.find( res => res instanceof Error )\n\t\tif( error ) $mol_fail( error )\n\t\t\n\t\treturn results as any\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport enum $hyoo_crus_land_root {\n\t\tdata = '', // 0\n\t\ttine = 'AQAAAAAA', // 1\n\t}\n\t\n\t/** Standalone part of Glob which syncs separately, have own rights, and contains Units */\n\texport class $hyoo_crus_land extends $mol_object {\n\t\t\n\t\t/** Auth Independent actor with global unique id generated from Auth key */\n\t\tref() {\n\t\t\treturn this.auth().lord()\n\t\t}\n\t\t\n\t\t/** Auth Private key generated with Proof of Work  */\n\t\tauth() {\n\t\t\treturn this.$.$hyoo_crus_auth.current()\n\t\t}\n\t\t\n\t\tfaces = new $hyoo_crus_face_map\n\n\t\tpass = new $mol_wire_dict< string /*peer*/, $hyoo_crus_pass >()\n\t\tgift = new $mol_wire_dict< $hyoo_crus_ref /*lord*/, $hyoo_crus_gift >()\n\t\tsand = new $mol_wire_dict< string /*head*/, $mol_wire_dict< string /*peer*/, $mol_wire_dict< string /*self*/, $hyoo_crus_sand > > >()\n\t\t\n\t\tself_all = new $mol_wire_dict< string, $hyoo_crus_sand | null >()\n\t\t\n\t\t@ $mol_action\n\t\tself_make( idea = Math.floor( Math.random() * 2**48 ) ) {\n\t\t\t\n\t\t\tconst auth = this.auth()\n\t\t\tconst rank = this.lord_rank( auth.lord() )\n\t\t\t\n\t\t\tif( rank < $hyoo_crus_rank_tier.post ) $mol_fail( new Error( `Rank too low (${ rank })` ) )\n\t\t\t\n\t\t\tfor( let i = 0; i < 4096; ++i ) {\n\t\t\t\t\n\t\t\t\tidea = ( idea + 1 ) % 2**48\n\t\t\t\tif( !idea ) continue\n\t\t\t\t\n\t\t\t\tconst idea_str = $mol_base64_ae_encode( new Uint8Array( new BigUint64Array([ BigInt( idea ) ]).buffer, 0, 6 ) )\n\t\t\t\tif( this.self_all.has( idea_str ) ) continue\n\t\t\t\t\n\t\t\t\tthis.self_all.set( idea_str, null )\n\t\t\t\treturn idea_str\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_fail( new Error( `Too long self generation` ) )\n\t\t}\n\t\t\n\t\t/** Land where Lord is King. Contains only ain info */\n\t\thome() {\n\t\t\treturn this.Data( $hyoo_crus_home )\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tarea_make( idea = Math.floor( Math.random() * 2**48 ) ) {\n\t\t\t\n\t\t\tthis.loading()\n\t\t\t\n\t\t\tconst id = $mol_base64_ae_encode( new Uint8Array( new BigUint64Array([ BigInt( idea ) ]).buffer, 0, 6 ) )\n\t\t\tconst ref = $hyoo_crus_ref( $hyoo_crus_ref_lord( this.ref() ).description! + '_' + id )\n\t\t\t\n\t\t\tconst area = this.$.$hyoo_crus_glob.Land( ref )\n\t\t\tconst units = this.unit_sort([ ... this.pass.values(), ... this.gift.values() ]).map( unit => {\n\t\t\t\tconst clone = $hyoo_crus_unit.from( unit ).narrow()\n\t\t\t\tclone._land = area\n\t\t\t\t$hyoo_crus_unit_trusted.add( clone )\n\t\t\t\treturn clone\n\t\t\t} )\n\t\t\tconst errors = area.apply_unit( units, 'skip_check' ).filter( Boolean )\n\t\t\t\n\t\t\tfor( const error of errors ) this.$.$mol_log3_warn({\n\t\t\t\tplace: `${this}.area_make()`,\n\t\t\t\tmessage: error,\n\t\t\t\thint: 'Send it to developer',\n\t\t\t})\n\t\t\t\n\t\t\tarea.bus()\n\t\t\tarea.sync_mine()\n\t\t\tarea.sync_yard()\n\t\t\t\n\t\t\treturn area\n\t\t}\n\t\t\n\t\t/** Data root */\n\t\t@ $mol_mem_key\n\t\tData< Node extends typeof $hyoo_crus_node >( Node: Node ) {\n\t\t\treturn this.Node( Node ).Item( $hyoo_crus_land_root.data )\n\t\t} \n\t\t\n\t\t/** Lands for inheritance */\n\t\t@ $mol_mem\n\t\tTine() {\n\t\t\treturn this.Node( $hyoo_crus_list_ref ).Item( $hyoo_crus_land_root.tine ) \n\t\t} \n\t\t\n\t\t/** High level representation of stored data */\n\t\t@ $mol_mem_key\n\t\tNode< Node extends typeof $hyoo_crus_node >( Node: Node ): $hyoo_crus_fund< string, InstanceType< Node > > {\n\t\t\treturn new $hyoo_crus_fund( ( head: string )=> {\n\t\t\t\tif( head === 'AAAAAAAA' ) return this.Node( Node ).Item( $hyoo_crus_land_root.data )\n\t\t\t\treturn ( Node as typeof $hyoo_crus_node ).make({\n\t\t\t\t\tland: ()=> this.sync(),\n\t\t\t\t\thead: $mol_const( head ),\n\t\t\t\t}) as InstanceType< Node >\n\t\t\t} )\n\t\t} \n\t\t\n\t\t/** Total count of Units inside Land. */\n\t\t@ $mol_mem\n\t\ttotal() {\n\t\t\tlet total = this.pass.size + this.gift.size\n\t\t\tfor( const peers of this.sand.values() ) {\n\t\t\t\tfor( const units of peers.values() ) {\n\t\t\t\t\ttotal += units.size\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn total\n\t\t}\n\t\t\n\t\t/** All joined Lords. */\n\t\t@ $mol_mem\n\t\tjoined_list() {\n\t\t\treturn [ ... this.pass.values() ].map( unit => unit.lord() )\n\t\t}\n\t\t\n\t\t/** Public key of Land Lord. */\n\t\t@ $mol_mem\n\t\tkey() {\n\t\t\tconst pass = this.pass.get( $hyoo_crus_ref_peer( this.ref() ) )\n\t\t\tif( !pass ) return null\n\t\t\treturn $hyoo_crus_auth.from( pass.auth() )\n\t\t}\n\t\t\n\t\t/** Rights level of Lord for Land. */\n\t\t@ $mol_mem_key\n\t\tlord_rank( lord: $hyoo_crus_ref, next?: typeof $hyoo_crus_rank.Value ): typeof $hyoo_crus_rank.Value {\n\t\t\t\n\t\t\tif( lord === $hyoo_crus_ref_lord( this.ref() ) ) return $hyoo_crus_rank_rule\n\t\t\t\n\t\t\tconst prev = this.gift.get( lord )?.rank()\n\t\t\t\t?? this.gift.get( $hyoo_crus_ref( '' ) )?.rank()\n\t\t\t\t?? ( this.encrypted() ? $hyoo_crus_rank_deny : $hyoo_crus_rank_read )\n\t\t\t\n\t\t\tif( next === undefined ) return prev\n\t\t\tif( next === prev ) return prev\n\t\t\t\n\t\t\tthis.give( lord, next )\n\t\t\treturn next\n\t\t\t\n\t\t}\n\t\t\n\t\t/** Rights level of Peer for Land. */\n\t\tpeer_rank( peer: string ) {\n\t\t\t\n\t\t\tconst auth = this.pass.get( peer )!\n\t\t\tif( auth ) return this.lord_rank( auth.lord() )\n\t\t\t\n\t\t\treturn this.encrypted() ? $hyoo_crus_rank_deny : $hyoo_crus_rank_read\n\t\t\t\n\t\t}\n\t\t\n\t\tunit_sort( units: readonly $hyoo_crus_unit[] ) {\n\t\t\n\t\t\tconst dict = new Map< string, $hyoo_crus_unit >()\n\t\t\tfor( const unit of units ) dict.set( unit.key(), unit )\n\t\t\t\n\t\t\tconst lord = $hyoo_crus_ref_lord( this.ref() )\n\t\t\t\n\t\t\tconst graph = new $mol_graph< string, void >()\n\t\t\tfor( const unit of units ) {\n\t\t\t\tunit.choose({\n\t\t\t\t\tpass: pass => {\n\t\t\t\t\t\tif( pass.lord() === lord ) return\n\t\t\t\t\t\tgraph.link( pass.key(), 'gift:' )\n\t\t\t\t\t},\n\t\t\t\t\tgift: gift => {\n\t\t\t\t\t\tgraph.link( 'pass:' + $hyoo_crus_ref_peer( gift.dest() ), gift.key() )\n\t\t\t\t\t\tgraph.link( gift.key(), 'pass:' + gift.peer() )\n\t\t\t\t\t},\n\t\t\t\t\tsand: sand=> {\n\t\t\t\t\t\tgraph.link( sand.key(), 'pass:' + sand.peer() )\n\t\t\t\t\t},\n\t\t\t\t})\n\t\t\t}\n\t\t\t\n\t\t\tgraph.acyclic( ()=> 1 ) \n\t\t\t\n\t\t\treturn [ ... graph.sorted ].map( key => dict.get( key )! ).filter( Boolean )\n\t\n\t\t}\n\t\t\n\t\t/** Picks units between Face and current state. */\n\t\tdelta_unit( face = new $hyoo_crus_face_map ): $hyoo_crus_unit[] {\n\t\t\t\n\t\t\tthis.loading()\n\t\t\t\n\t\t\tconst delta = [] as $hyoo_crus_unit[]\n\t\t\t\n\t\t\tconst passed = new Set< string >()\n\t\t\tconst auth = ( peer: string )=> {\n\t\t\t\t\n\t\t\t\tif( passed.has( peer ) ) return\n\t\t\t\tif( face.get( peer ) ) return\n\t\t\t\t\n\t\t\t\tconst pass = this.pass.get( peer )\n\t\t\t\tif( !pass ) $mol_fail( new Error( `No pass for Peer (${ peer })` ) )\n\t\t\t\t\n\t\t\t\tdelta.push( pass )\n\t\t\t\tpassed.add( peer )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tfor( const [ lord, unit ] of this.gift ) {\n\t\t\t\t\n\t\t\t\tconst time = face.get( unit.peer() ) ?? 0\n\t\t\t\tif( time >= unit.time() ) continue\n\t\t\t\t\n\t\t\t\tauth( unit.peer() )\n\t\t\t\tdelta.push( unit )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tfor( const kids of this.sand.values() ) {\n\t\t\t\tfor( const peers of kids.values() ) {\n\t\t\t\t\tfor( const unit of peers.values() ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst time = face.get( unit.peer() ) ?? 0\n\t\t\t\t\t\tif( time >= unit.time() ) continue\n\t\t\t\t\t\t\n\t\t\t\t\t\tauth( unit.peer() )\n\t\t\t\t\t\tdelta.push( unit )\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor( const [ peer, unit ] of this.pass ) {\n\t\t\t\t\n\t\t\t\tif( passed.has( peer ) ) continue\n\t\t\t\tif( face.has( unit.peer() ) ) continue\n\t\t\t\t\n\t\t\t\tdelta.push( unit )\n\t\t\t\tpassed.add( peer )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif( delta.length || this.faces.total <= this.faces.total ) return delta\n\t\t\t\n\t\t\tthis.$.$mol_log3_warn({\n\t\t\t\tplace: this,\n\t\t\t\tmessage: 'Unit Absent',\n\t\t\t\thint: 'Relax, Delta contains all Units to restore',\n\t\t\t\tface,\n\t\t\t})\n\t\t\t\n\t\t\treturn this.delta_unit()\n\t\t\t\n\t\t}\n\t\t\n\t\t/** Makes binary Delta between Face and current state. */\n\t\tdelta_pack( face = new $hyoo_crus_face_map ) {\n\t\t\t\n\t\t\tconst parts = this.delta_parts( face )\n\t\t\tif( !parts ) return null\n\t\t\t\n\t\t\tconst pack = $hyoo_crus_pack.make( parts )\n\t\t\t\n\t\t\treturn pack\n\t\t}\n\t\t\n\t\tdelta_parts( face = new $hyoo_crus_face_map ) {\n\t\t\t\n\t\t\tconst units = this.delta_unit( face )\n\t\t\tif( !units.length ) return null\n\t\t\t\n\t\t\tconst rocks = [] as [ Uint8Array, null | Uint8Array ][]\n\t\t\t\n\t\t\tfor( let unit of units ) {\n\t\t\t\t\n\t\t\t\tif( unit.kind() !== 'sand' ) continue\n\t\t\t\t\n\t\t\t\tconst sand = unit.narrow() as $hyoo_crus_sand\n\t\t\t\tif( sand.size() <= 32 ) continue\n\t\t\t\t\n\t\t\t\tconst rock = this.$.$hyoo_crus_mine.rock( sand.hash() ) ?? null\n\t\t\t\trocks.push([ sand.hash(), rock ])\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn {\n\t\t\t\tlands: {\n\t\t\t\t\t[ this.ref() ]: {\n\t\t\t\t\t\tfaces: new $hyoo_crus_face_map,\n\t\t\t\t\t\tunits,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\trocks,\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tfaces_pack() {\n\t\t\tconst pack = $hyoo_crus_pack.make({\n\t\t\t\tlands: {\n\t\t\t\t\t[ this.ref() ]: { faces: this.faces, units: [] },\n\t\t\t\t},\n\t\t\t\trocks: [],\n\t\t\t})\n\t\t\treturn pack\n\t\t}\n\t\t\n\t\t/** Applies Delta to current state with verify. */\n\t\t@ $mol_action\n\t\tapply_unit( delta: readonly $hyoo_crus_unit[], skip_check?: 'skip_check' ) {\n\t\t\t\n\t\t\tif( !delta.length ) return []\n\t\t\t\n\t\t\tif( !skip_check ) this.loading()\n\t\t\t\n\t\t\tconst doubt = delta.filter( unit => !$hyoo_crus_unit_trusted.has( unit ) )\n\t\t\tif( doubt.length ) {\n\t\t\t\tconst errors = $mol_wire_sync( this ).units_verify( doubt )\n\t\t\t\tif( errors.some( v => v ) ) return errors\n\t\t\t}\n\t\t\t\n\t\t\tconst errors = this.apply_unit_trust( delta, skip_check )\n\t\t\t\n\t\t\tfor( const unit of doubt ) $hyoo_crus_unit_trusted.add( unit )\n\t\t\t\n\t\t\treturn errors\n\t\t}\n\t\t\n\t\tasync units_verify( units: readonly $hyoo_crus_unit[] ) {\n\t\t\t\n\t\t\tconst passes = units.filter( unit => unit.kind() === 'pass' ) as $hyoo_crus_pass[]\n\t\t\tconst auth = new Map( passes.map( ( unit: $hyoo_crus_pass )=> [\n\t\t\t\tunit.peer(),\n\t\t\t\t$mol_crypto_key_public.from( unit.auth() ),\n\t\t\t] ) )\n\t\t\t\n\t\t\tconst mixin = $hyoo_crus_ref_encode( this.ref() )\n\t\t\tconst mixin_lord = $hyoo_crus_ref_encode( $hyoo_crus_ref_lord( this.ref() ) )\n\t\t\t\n\t\t\treturn await Promise.all( units.map( async unit => {\n\t\t\t\t\n\t\t\t\tlet key_public = this.key_public( unit.peer() )\n\t\t\t\tif( !key_public ) key_public = auth.get( unit.peer() ) ?? null\n\t\t\t\tif( !key_public ) return `No public key for peer (${unit.peer()})`\n\t\t\t\t\n\t\t\t\tconst sign = unit.sign()\n\t\t\t\t\n\t\t\t\tlet sens = unit.sens().slice()\n\t\t\t\tfor( let i = 0; i < mixin.length; ++i ) sens[i+2] ^= mixin[i]\n\t\t\t\tif( await key_public.verify( sens, sign ) ) return ''\n\t\t\t\t\n\t\t\t\tsens = unit.sens().slice()\n\t\t\t\tfor( let i = 0; i < mixin_lord.length; ++i ) sens[i+2] ^= mixin_lord[i]\n\t\t\t\tif( await key_public.verify( sens, sign ) ) return ''\n\t\t\t\t\n\t\t\t\treturn `Wrong unit sign`\n\t\n\t\t\t} ) )\n\t\t\t\n\t\t}\n\t\t\n\t\t/** Applies Delta to current state without verifying. */\n\t\t@ $mol_action\n\t\tapply_unit_trust( delta: readonly $hyoo_crus_unit[], skip_check?: 'skip_check' ) {\n\t\t\treturn delta.map( unit => {\n\t\t\t\t\n\t\t\t\tlet need_recheck = false\n\t\t\t\tconst res = unit.choose({\n\t\t\t\t\t\n\t\t\t\t\tpass: next => {\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst lord = next.lord()\n\t\t\t\t\t\tconst peer = next.peer()\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( !skip_check && this.lord_rank( lord ) < next.rank_min() ) return 'Need reg rank to join'\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst exists = this.pass.get( peer )\n\t\t\t\t\t\tif( exists ) return ''\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.pass.set( peer, next )\n\t\t\t\t\t\tthis.faces.time_max( peer, 0 )\n\t\t\t\t\t\tthis.faces.total ++\n\t\t\t\t\t\t\n\t\t\t\t\t},\n\t\t\t\t\t\n\t\t\t\t\tgift: next => {\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst peer = next.peer()\n\t\t\t\t\t\tconst dest = next.dest()\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( !skip_check && this.peer_rank( peer ) < next.rank_min() ) return 'Need law rank to change rank'\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst prev = this.gift.get( dest )\n\t\t\t\t\t\tif( prev && $hyoo_crus_gift.compare( prev, next ) <= 0 ) return ''\n\t\t\t\t\t\t\n\t\t\t\t\t\tthis.gift.set( dest, next )\n\t\t\t\t\t\tthis.faces.time_max( peer, next.time() )\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( !prev ) this.faces.total ++\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( ( prev?.rank() ?? $hyoo_crus_rank_deny ) > next.rank() ) need_recheck = true\n\t\t\t\t\t\t\n\t\t\t\t\t},\n\t\t\t\t\t\n\t\t\t\t\tsand: next => {\n\t\t\t\t\t\t\n\t\t\t\t\t\tconst head = next.head()\n\t\t\t\t\t\tconst peer = next.peer()\n\t\t\t\t\t\tconst self = next.self()\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( !skip_check && this.peer_rank( peer ) < next.rank_min() ) return 'Need mod rank to post data'\n\n\t\t\t\t\t\tlet peers = this.sand.get( head )\n\t\t\t\t\t\tif( !peers ) this.sand.set( head, peers = new $mol_wire_dict )\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tlet units = peers.get( peer )\n\t\t\t\t\t\tif( !units ) peers.set( peer, units = new $mol_wire_dict )\n\t\t\t\t\t\t\t\n\t\t\t\t\t\tconst prev = units.get( self )\n\t\t\t\t\t\tif( prev && $hyoo_crus_sand.compare( prev, next ) <= 0 ) return ''\n\t\t\t\t\t\t\n\t\t\t\t\t\tunits.set( self, next )\n\t\t\t\t\t\tthis.self_all.set( self, next )\n\t\t\t\t\t\tthis.faces.time_max( peer, next.time() )\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( !prev ) this.faces.total ++\n\t\t\t\t\t\t\n\t\t\t\t\t},\n\t\t\t\t\t\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tif( need_recheck ) this.recheck()\n\t\t\t\treturn res ?? ''\n\t\t\t\t\n\t\t\t})\n\t\t}\n\t\t\n\t\tapply_land( land: $hyoo_crus_land ) {\n\t\t\treturn this.apply_unit( land.delta_unit() )\n\t\t}\n\t\t\n\t\trecheck() {\n\t\t\t\n\t\t\tfor( const [ peer, pass ] of this.pass ) {\n\t\t\t\tif( this.lord_rank( pass.lord() ) >= pass.rank_min() ) continue\n\t\t\t\tthis.pass.delete( peer )\n\t\t\t\tthis.faces.total --\n\t\t\t}\n\t\t\t\n\t\t\tfor( const [ lord, gift ] of this.gift ) {\n\t\t\t\tif( this.peer_rank( gift.peer() ) >= gift.rank_min() ) continue\n\t\t\t\tthis.gift.delete( lord )\n\t\t\t\tthis.faces.total --\n\t\t\t}\n\t\t\t\n\t\t\tfor( const [ head, peers ] of this.sand ) {\n\t\t\t\tfor( const [ peer, sands ] of peers ) {\n\t\t\t\t\tconst rank = this.peer_rank( peer )\n\t\t\t\t\tfor( const [ self, sand ] of sands ) {\n\t\t\t\t\t\tif( rank >= sand.rank_min() ) continue\n\t\t\t\t\t\tsands.delete( self )\n\t\t\t\t\t\tthis.faces.total --\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tfork( preset: $hyoo_crus_rank_preset = { '': $hyoo_crus_rank_read } ) {\n\t\t\tconst land = this.$.$hyoo_crus_glob.land_grab( preset )\n\t\t\tland.Tine().items_vary([ this.ref() ])\n\t\t\treturn land\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tsand_ordered( { head, peer }: { head: string, peer: string | null } ) {\n\t\t\t\n\t\t\tthis.sync()\n\t\t\t// this.secret() // early async to prevent async on put\n\t\t\t\n\t\t\tconst queue = peer\n\t\t\t\t? [ ... this.sand.get( head )?.get( peer )?.values() ?? [] ]\n\t\t\t\t: [ ... this.sand.get( head )?.values() ?? [] ].flatMap( units => [ ... units.values() ] )\n\t\t\t\n\t\t\tconst slices = new Map\n\t\t\tfor( const sand of queue ) slices.set( sand, 0 )\n\t\t\t\n\t\t\tmerge: if( head !== $hyoo_crus_land_root.tine ) {\n\t\t\t\t\n\t\t\t\tconst tines = ( this.Tine()?.items_vary().slice().reverse() ?? [] )\n\t\t\t\t\t.map( $hyoo_crus_vary_cast_ref )\n\t\t\t\t\t.filter( $mol_guard_defined )\n\t\t\t\tif( !tines.length ) break merge\n\t\t\t\t\n\t\t\t\tconst exists = new Set( queue.map( sand => sand.self() ) )\n\t\t\t\t\n\t\t\t\tconst glob = this.$.$hyoo_crus_glob\n\t\t\t\tlet slice = 0\n\t\t\t\tfor( const ref of tines ) {\n\t\t\t\t\t++ slice\n\t\t\t\t\tconst land = glob.Land( ref )\n\t\t\t\t\tfor( const sand of land.sand_ordered({ head, peer }) ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( exists.has( sand.self() ) ) continue\n\t\t\t\t\t\tqueue.push( sand )\n\t\t\t\t\t\texists.add( sand.self() )\n\t\t\t\t\t\tslices.set( sand, slice )\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif( queue.length < 2 ) return queue\n\t\t\t\n\t\t\tconst compare = ( left: $hyoo_crus_sand, right: $hyoo_crus_sand )=> {\n\t\t\t\treturn ( slices.get( left ) - slices.get( right ) ) || $hyoo_crus_sand.compare( left, right )\n\t\t\t}\n\t\t\t\n\t\t\tqueue.sort( compare )\n\t\t\t\n\t\t\tlet entry = {\n\t\t\t\tsand: null as null | $hyoo_crus_sand,\n\t\t\t\tnext: '',\n\t\t\t\tprev: '',\n\t\t\t}\n\t\t\t\n\t\t\tconst key = peer === null ? ( sand: $hyoo_crus_sand )=> sand.key() : ( sand: $hyoo_crus_sand )=> sand.self()\n\t\t\t\n\t\t\tconst by_key = new Map([ [ '', entry  ] ])\n\t\t\tconst by_self = new Map([ [ '', entry ] ])\n\t\t\t\n\t\t\twhile( queue.length ) {\n\t\t\t\t\n\t\t\t\tconst last = queue.pop()!\n\t\t\t\tby_key.get( entry.prev )!.next = key( last )\n\t\t\t\t\n\t\t\t\tconst item = { sand: last, next: '', prev: entry.prev }\n\t\t\t\tby_key.set( key( last ), item )\n\t\t\t\t\n\t\t\t\tconst exists = by_self.get( last.self() )\n\t\t\t\tif( !exists || compare( exists.sand!, last ) < 0 ) {\n\t\t\t\t\tby_self.set( last.self(), item )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tentry.prev = key( last )\n\t\t\t\t\n\t\t\t\tfor( let cursor = queue.length - 1; cursor >= 0; --cursor ) {\n\t\t\t\t\t\n\t\t\t\t\tconst kid = queue[cursor]\n\t\t\t\t\t\n\t\t\t\t\tlet lead = by_self.get( kid.lead() )\n\t\t\t\t\tif( !lead ) continue\n\t\t\t\t\t\n\t\t\t\t\twhile( lead.next && ( compare( by_key.get( lead.next )!.sand!, kid ) < 0 ) ) lead = by_key.get( lead.next )!\n\t\t\t\t\t\n\t\t\t\t\tconst exists1 = by_key.get( key( kid ) )\n\t\t\t\t\tif( exists1 ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( ( lead.sand ? key( lead.sand ) : '' ) === exists1.prev ) {\n\t\t\t\t\t\t\texists1.sand = kid\n\t\t\t\t\t\t\tif( cursor === queue.length - 1 ) queue.pop()\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tby_key.get( exists1.prev )!.next = exists1.next\n\t\t\t\t\t\tby_key.get( exists1.next )!.prev = exists1.prev\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tconst follower = by_key.get( lead.next )!\n\t\t\t\t\tfollower.prev = key( kid )\n\t\t\t\t\t\n\t\t\t\t\tconst item = { sand: kid, next: lead.next, prev: lead.sand ? key( lead.sand ) : '' }\n\t\t\t\t\tby_key.set( key( kid ), item )\n\t\t\t\t\t\n\t\t\t\t\tconst exists2 = by_self.get( kid.self() )\n\t\t\t\t\tif( !exists2 || compare( exists2.sand!, kid ) < 0 ) {\n\t\t\t\t\t\tby_self.set( kid.self(), item )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tlead.next = key( kid )\n\t\t\t\t\t\n\t\t\t\t\tif( cursor === queue.length - 1 ) queue.pop()\n\t\t\t\t\tcursor = queue.length\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tconst res = [] as $hyoo_crus_sand[]\n\t\t\t\n\t\t\twhile( entry.next ) {\n\t\t\t\tentry = by_key.get( entry.next )!\n\t\t\t\tres.push( entry.sand! )\n\t\t\t}\n\t\t\t\n\t\t\treturn res\n\t\t}\n\t\t\n\t\t/** Register public key **/\n\t\t@ $mol_action\n\t\tjoin() {\n\t\t\t\n\t\t\tconst auth = this.auth()\n\t\t\t\n\t\t\tconst prev = this.pass.get( auth.peer() )\n\t\t\tif( prev ) return prev\n\t\t\t\n\t\t\tconst next = new $hyoo_crus_pass\n\t\t\t$hyoo_crus_unit_trusted.add( next )\n\t\t\tnext.auth( auth.public().asArray() )\n\t\t\tnext._land = this\n\t\t\t\n\t\t\tconst error = this.apply_unit([ next ])[0]\n\t\t\tif( error ) $mol_fail( new Error( error ) )\n\t\t\t\n\t\t\tthis.broadcast()\n\t\t\treturn next\n\t\t}\n\t\t\n\t\t/**\n\t\t * Gives access rights to Lord by Auth key.\n\t\t * `null` - gives rights for all Peers.\n\t\t */\n\t\t@ $mol_action\n\t\tgive(\n\t\t\tdest: $hyoo_crus_auth | $hyoo_crus_ref | null,\n\t\t\trank: typeof $hyoo_crus_rank.Value,\n\t\t) {\n\t\t\t\t\n\t\t\tthis.join()\n\t\t\t\n\t\t\tconst auth = this.auth()\n\t\t\tconst unit = new $hyoo_crus_gift\n\t\t\t$hyoo_crus_unit_trusted.add( unit )\n\t\t\t\n\t\t\tunit.rank( rank )\n\t\t\tunit.time( this.faces.tick() )\n\t\t\tunit.peer( auth.peer() )\n\t\t\tunit.dest( dest ? dest instanceof $hyoo_crus_auth ? dest.lord() : dest : $hyoo_crus_ref('') )\n\t\t\tunit._land = this\n\t\t\t\n\t\t\tif( rank >= $hyoo_crus_rank_read ) {\n\t\t\t\t\n\t\t\t\tconst secret_land = this.secret()\n\t\t\t\tif( secret_land ) {\n\t\t\t\t\t\n\t\t\t\t\tif( !dest ) $mol_fail( new Error( `Encrypted land can't be shared to everyone` ) )\n\t\t\t\t\t\n\t\t\t\t\t// const prev = this.gift.get( dest instanceof $hyoo_crus_auth ? dest.lord() : dest )\n\t\t\t\t\t// if( prev && prev.rank() >= $hyoo_crus_rank_read ) {\n\t\t\t\t\t// \tunit.bill().set( prev.bill() ) // need reencrypt with new salt\n\t\t\t\t\t// } else {\n\t\t\t\t\t\t\n\t\t\t\t\t\tif( typeof dest === 'symbol' ) {\n\t\t\t\t\t\t\t$mol_fail( new Error( `No pub key for lord (${ dest.description! })` ) )\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t\tconst secret_mutual = this.secret_mutual( dest.toString() )\n\t\t\t\t\t\tif( secret_mutual ) {\n\t\t\t\t\t\t\tconst secret_bin = $mol_wire_sync( secret_land ).serial()\n\t\t\t\t\t\t\tconst bill = $mol_wire_sync( secret_mutual ).encrypt( secret_bin, unit.salt() )\n\t\t\t\t\t\t\tunit.bill().set( bill )\n\t\t\t\t\t\t}\n\t\t\t\t\t// }\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tconst error = this.apply_unit([ unit ])[0]\n\t\t\tif( error ) $mol_fail( new Error( error ) )\n\t\t\t\n\t\t\tthis.broadcast()\n\t\t\treturn unit\n\t\t}\n\t\t\n\t\t/** Places data to tree. */\n\t\t@ $mol_action\n\t\tpost(\n\t\t\tlead: string,\n\t\t\thead: string,\n\t\t\tself: string,\n\t\t\tvary: $hyoo_crus_vary_type,\n\t\t\ttag: keyof typeof $hyoo_crus_sand_tag = 'term',\n\t\t) {\n\t\t\t\n\t\t\tif( typeof vary === 'symbol' ) vary = $hyoo_crus_ref_relate( this.ref(), vary )\n\t\t\t\n\t\t\tthis.join()\n\t\t\t\n\t\t\tconst auth = this.auth()\n\t\t\tconst unit = new $hyoo_crus_sand\n\t\t\t$hyoo_crus_unit_trusted.add( unit )\n\t\t\t\n\t\t\tunit.time( this.faces.tick() )\n\t\t\tunit.peer( auth.peer() )\n\t\t\tunit.lead( lead )\n\t\t\tunit.head( head )\n\t\t\tunit._vary = vary\n\t\t\tunit._land = this\n\t\t\t\n\t\t\tlet { tip, bin } = $hyoo_crus_vary_encode( vary )\n\t\t\tunit._open = bin\n\t\t\t\n\t\t\tif( vary !== null && this.encrypted() ) {\n\t\t\t\tunit.hash( $mol_crypto_hash( bin ), tip, tag )\n\t\t\t} else {\n\t\t\t\tif( bin.byteLength > 32 ) unit.hash( this.$.$hyoo_crus_mine.hash( bin ), tip, tag )\n\t\t\t\telse unit.data( bin, tip, tag )\n\t\t\t}\n\t\t\t\n\t\t\tunit.self( self || this.self_make( unit.idea() ) )\n\t\t\t\n\t\t\tconst error = this.apply_unit([ unit ])[0]\n\t\t\tif( error ) $mol_fail( new Error( error ) )\n\t\t\t\n\t\t\tthis.broadcast()\n\t\t\treturn unit\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tsand_move(\n\t\t\tsand: $hyoo_crus_sand,\n\t\t\thead: string,\n\t\t\tseat: number,\n\t\t\tpeer = '' as string | null\n\t\t) {\n\t\t\t\n\t\t\tif( sand.tip() === 'nil' ) $mol_fail( new RangeError( `Can't move wiped sand` ) )\n\t\t\t\n\t\t\tconst units = this.sand_ordered({ head, peer }).filter( unit => unit.tip() !== 'nil' )\n\t\t\tif( seat > units.length ) $mol_fail( new RangeError( `Seat (${seat}) out of units length (${units.length})` ) )\n\t\t\t\n\t\t\tconst lead = seat ? units[ seat - 1 ].self() : ''\n\t\t\tconst vary = this.sand_decode( sand )\n\t\t\t\n\t\t\tif( sand.head() === head ) {\n\t\t\t\t\n\t\t\t\tconst seat_prev = units.indexOf( sand )\n\t\t\t\t\n\t\t\t\tif( seat === seat_prev ) return\n\t\t\t\tif( seat === seat_prev + 1 ) return\n\t\t\t\t\n\t\t\t\tconst prev = seat_prev ? units[ seat_prev - 1 ].self() : ''\n\t\t\t\tconst next = units[ seat_prev + 1 ]\n\t\t\t\t\n\t\t\t\tif( next ) this.post(\n\t\t\t\t\tprev,\n\t\t\t\t\thead,\n\t\t\t\t\tnext.self(),\n\t\t\t\t\tthis.sand_decode( next ),\n\t\t\t\t\tnext.tag(),\n\t\t\t\t)\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tthis.sand_wipe( sand )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn this.post(\n\t\t\t\tlead,\n\t\t\t\thead,\n\t\t\t\tsand.self(),\n\t\t\t\tvary,\n\t\t\t\tsand.tag(),\n\t\t\t)\n\t\t\t\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tsand_wipe(\n\t\t\tsand: $hyoo_crus_sand,\n\t\t\tpeer = '' as string | null,\n\t\t) {\n\t\t\t\n\t\t\tconst head = sand.head()\n\t\t\tconst units = this.sand_ordered({ head, peer }).filter( unit => unit.tip() !== 'nil' )\n\t\t\tconst seat = units.indexOf( sand )\n\t\t\tif( seat < 0 ) return sand\n\t\t\t\n\t\t\treturn this.post(\n\t\t\t\tseat ? units[ seat - 1 ].self() : '',\n\t\t\t\thead,\n\t\t\t\tsand.self(),\n\t\t\t\tnull,\n\t\t\t\t'term',\n\t\t\t)\n\t\t\t\n\t\t}\n\t\t\n\t\tbroadcast() {\n\t\t\tthis.$.$hyoo_crus_glob.yard().lands_news.add( this.ref() )\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tsync() {\n\t\t\tthis.loading()\n\t\t\tthis.bus()\n\t\t\tthis.sync_mine()\n\t\t\tthis.sync_yard()\n\t\t\treturn this\n\t\t}\n\t\t\n\t\tdestructor() {\n\t\t\tthis.$.$hyoo_crus_glob.yard().forget_land( this )\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tsync_mine() {\n\t\t\treturn new $mol_wire_atom( '', ()=> this.saving() ).fresh()\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tsync_yard() {\n\t\t\treturn new $mol_wire_atom( '', ()=> this.$.$hyoo_crus_glob.yard().sync_land( this.ref() ) ).fresh()\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tbus() {\n\t\t\treturn new this.$.$mol_bus< ArrayBuffer[] >(\n\t\t\t\t`$hyoo_crus_land:${ this.ref().description }`,\n\t\t\t\t$mol_wire_async( bins => {\n\t\t\t\t\t\n\t\t\t\t\tthis.apply_unit( bins.map( bin => {\n\t\t\t\t\t\tconst unit = new $hyoo_crus_unit( bin ).narrow()\n\t\t\t\t\t\t$hyoo_crus_unit_trusted.add( unit )\n\t\t\t\t\t\tthis.$.$hyoo_crus_mine.units_persisted.add( unit )\n\t\t\t\t\t\treturn unit\n\t\t\t\t\t} ) )\n\t\t\t\t\t\n\t\t\t\t} ),\n\t\t\t)\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tloading() {\n\t\t\t\n\t\t\t// $mol_wire_solid()\n\t\t\t\n\t\t\tlet units = this.unit_sort( this.$.$hyoo_crus_mine.units( this.ref() ) ?? [] )\n\t\t\t\n\t\t\tif( this.$.$hyoo_crus_log() ) $mol_wire_sync( this.$ ).$mol_log3_rise({\n\t\t\t\tplace: this,\n\t\t\t\tmessage: 'Load Unit',\n\t\t\t\tunits: units.length,\n\t\t\t})\n\t\t\t\n\t\t\tconst errors = this.apply_unit( units, 'skip_check' ).filter( Boolean )\n\t\t\t\n\t\t\tif( errors.length ) this.$.$mol_log3_fail({\n\t\t\t\tplace: this,\n\t\t\t\tmessage: errors.join( '\\n' ),\n\t\t\t})\n\t\t\t\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tsaving() {\n\t\t\t\n\t\t\tconst mine = this.$.$hyoo_crus_mine\n\t\t\tif( !mine ) return\n\t\t\t\n\t\t\tthis.loading()\n\t\t\t\n\t\t\tconst encoding = [] as $hyoo_crus_sand[]\n\t\t\tconst signing = [] as $hyoo_crus_unit[]\n\t\t\tconst persisting = [] as $hyoo_crus_unit[]\n\t\t\t\n\t\t\tfor( const pass of this.pass.values() ) {\n\t\t\t\tif( !pass.signed() ) signing.push( pass )\n\t\t\t\tif( !mine.units_persisted.has( pass ) ) persisting.push( pass )\n\t\t\t}\n\t\t\t\n\t\t\tfor( const gift of this.gift.values() ) {\n\t\t\t\tif( !gift.signed() ) signing.push( gift )\n\t\t\t\tif( !mine.units_persisted.has( gift ) ) persisting.push( gift )\n\t\t\t}\n\t\t\t\n\t\t\tfor( const kids of this.sand.values() ) {\n\t\t\t\tfor( const units of kids.values() ) {\n\t\t\t\t\tfor( const sand of units.values() ) {\n\t\t\t\t\t\tif( !sand.signed() ) {\n\t\t\t\t\t\t\tencoding.push( sand )\n\t\t\t\t\t\t\tsigning.push( sand )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif( !mine.units_persisted.has( sand ) ) persisting.push( sand )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t$mol_wire_race( ... encoding.map( unit => ()=> this.sand_encode( unit ) ) )\n\t\t\t$mol_wire_race( ... signing.map( unit => ()=> this.unit_sign( unit ) ) )\n\t\t\t\n\t\t\tif( persisting.length )\t{\n\t\t\t\t\n\t\t\t\tthis.bus().send( persisting.map( unit => unit.buffer ) )\n\t\t\t\tmine.units( this.ref(), persisting )\n\t\t\t\n\t\t\t\tif( this.$.$hyoo_crus_log() ) $mol_wire_sync( this.$ ).$mol_log3_done({\n\t\t\t\t\tplace: this,\n\t\t\t\t\tmessage: 'Saved Units',\n\t\t\t\t\tunits: persisting.length,\n\t\t\t\t})\n\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tunit_sign( unit: $hyoo_crus_unit ) {\n\t\t\tif( unit.signed() ) return\n\t\t\t\n\t\t\tconst key = $mol_wire_sync( unit._land!.auth() )\n\t\t\tconst mixin = $hyoo_crus_ref_encode( unit._land!.ref() )\n\t\t\t\n\t\t\tconst sens = unit.sens().slice()\n\t\t\tfor( let i = 0; i < mixin.length; ++i ) sens[i+2] ^= mixin[i]\n\t\t\t\n\t\t\twhile( true ) {\n\t\t\t\t\n\t\t\t\tconst sign = key.sign( sens )\n\t\t\t\tunit.sign( sign.slice( 0, 2 ) )\n\t\t\t\t\n\t\t\t\tconst rank = unit instanceof $hyoo_crus_pass\n\t\t\t\t\t? this.lord_rank( unit.lord() )\n\t\t\t\t\t: this.peer_rank( unit.peer() )\n\t\t\t\t\n\t\t\t\tif( rank >= unit.rank_min() ) {\n\t\t\t\t\tunit.sign( sign )\n\t\t\t\t\treturn\n\t\t\t\t} else {\n\t\t\t\t\tunit.sign( new Uint8Array([ 0, 0 ]) )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tsand_encode( sand: $hyoo_crus_sand ) {\n\t\t\t\n\t\t\tif( sand._open === null ) return sand\n\t\t\tif( sand.tip() === 'nil' ) return sand\n\t\t\t\n\t\t\tlet bin = sand._open\n\t\t\tconst secret = sand._land!.secret()!\n\t\t\t\n\t\t\tif( secret ) bin = $mol_wire_sync( secret ).encrypt( bin, sand.salt() )\n\t\t\t\n\t\t\tif( bin.byteLength > 32 ) sand.hash( this.$.$hyoo_crus_mine.rock_save( bin ), sand.tip(), sand.tag() )\n\t\t\telse sand.data( bin, sand.tip(), sand.tag() )\n\t\t\t\n\t\t\treturn sand\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tsand_decode( sand: $hyoo_crus_sand ): $hyoo_crus_vary_type {\n\t\t\t\n\t\t\ttry {\n\n\t\t\t\tlet vary = this.sand_decode_raw( sand )\n\t\t\t\tif( typeof vary === 'symbol' ) vary = $hyoo_crus_ref_resolve( this.ref(), vary )\n\t\t\t\treturn vary\n\n\t\t\t} catch( error ) {\n\t\t\t\t\n\t\t\t\tif( error instanceof Promise ) return $mol_fail_hidden( error )\n\t\t\t\tthis.$.$mol_fail_log( error )\n\t\t\t\treturn null\n\n\t\t\t}\n\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tsand_decode_raw( sand: $hyoo_crus_sand ): $hyoo_crus_vary_type {\n\t\t\t\n\t\t\tif( this.sand.get( sand.head() )?.get( sand.peer() )?.get( sand.self() ) !== sand ) {\n\t\t\t\tfor( const id of this.Tine().items_vary() ?? [] ) {\n\t\t\t\t\tconst vary = this.$.$hyoo_crus_glob.Land( $hyoo_crus_vary_cast_ref( id! )! ).sand_decode_raw( sand )\n\t\t\t\t\tif( vary !== undefined ) return vary\n\t\t\t\t}\n\t\t\t\treturn undefined!\n\t\t\t}\n\t\t\t\n\t\t\tconst secret = this.secret()\n\t\t\t\n\t\t\tif( sand._vary !== undefined ) return sand._vary\n\t\t\tif( sand._open !== null ) return sand._vary = $hyoo_crus_vary_decode({ tip: sand.tip(), bin: sand._open })\n\t\t\t\n\t\t\tlet bin = sand.size() > 32 ? this.$.$hyoo_crus_mine.rock( sand.hash() ) : sand.data()\n\t\t\tif( secret && bin && sand.tip() !== 'nil' ) {\n\t\t\t\ttry {\n\t\t\t\t\tbin = $mol_wire_sync( secret ).decrypt( bin, sand.salt() )\n\t\t\t\t} catch( error: any ) {\n\t\t\t\t\tif( $mol_fail_catch( error ) ) {\n\t\t\t\t\t\tif( error.message ) $mol_fail_hidden( error )\n\t\t\t\t\t\telse $mol_fail_hidden( new Error( `Can't decrypt`, { cause: error } ) )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tsand._open = bin\n\t\t\treturn sand._vary = ( bin ? $hyoo_crus_vary_decode({ tip: sand.tip(), bin }) : null )\n\t\t\t\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tkey_public( peer: string ) {\n\t\t\tconst key = this.pass.get( peer )?.auth()\n\t\t\treturn key ? $mol_crypto_key_public.from( key ) : null\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tsecret_mutual( key_public: string ) {\n\t\t\treturn $mol_wire_sync( $mol_crypto_secret ).derive(\n\t\t\t\tthis.auth().toString(),\n\t\t\t\tkey_public,\n\t\t\t)\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tencryptable() {\n\t\t\treturn !this.sand.size\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tencrypted( next?: boolean ) {\n\t\t\t\n\t\t\t// $mol_wire_solid()\n\t\t\t\n\t\t\tconst gift = this.gift.get( this.ref() )\n\t\t\tconst prev = gift?.bill().some( b => b ) ?? false\n\t\t\t\n\t\t\tif( next === undefined ) return prev\n\t\t\tif( prev === next ) return prev\n\t\t\t\n\t\t\tif( !this.encryptable() ) $mol_fail( new Error( `Non empty Land never encrypted` ) )\n\t\t\t\n\t\t\tthis.join()\n\t\t\t\n\t\t\tconst auth = this.auth()\n\t\t\tconst secret = $mol_wire_sync( $mol_crypto_secret ).generate()\n\t\t\tconst secret_land = $mol_wire_sync( secret ).serial()\n\t\t\tconst secret_mutual = auth.secret_mutual( auth.public().toString() )\n\t\t\t\n\t\t\tconst unit = new $hyoo_crus_gift\n\t\t\t$hyoo_crus_unit_trusted.add( unit )\n\t\t\t\n\t\t\tunit.rank( $hyoo_crus_rank_rule )\n\t\t\tunit.time( this.faces.tick() )\n\t\t\tunit.peer( auth.peer() )\n\t\t\tunit.dest( auth.lord() )\n\t\t\tunit._land = this\n\t\t\t\n\t\t\tconst secret_closed = $mol_wire_sync( secret_mutual ).encrypt( secret_land, unit.salt() )\n\t\t\tunit.bill().set( secret_closed )\n\t\t\t\n\t\t\tconst error = this.apply_unit([ unit ])[0]\n\t\t\tif( error ) $mol_fail( new Error( error ) )\n\t\t\t\n\t\t\treturn next\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tsecret() {\n\t\t\t\n\t\t\tif( !this.encrypted() ) return null\n\t\t\t\n\t\t\tconst auth = this.auth()\n\t\t\tconst gift = this.gift.get( auth.lord() )\n\t\t\tif( !gift ) return $mol_fail( new Error( `Access denied` ) )\n\t\t\t\n\t\t\tconst bill = gift.bill()\n\t\t\tif( !bill.some( b => b ) ) return $mol_fail( new Error( `No key to decrypt` ) )\n\t\t\t\n\t\t\tconst secret_mutual = auth.secret_mutual( this.key_public( gift.peer() )!.toString() )\n\t\t\tif( !secret_mutual ) return $mol_fail( new Error( `Can't decrypt secret` ) )\n\t\t\t\n\t\t\tconst secret_land = $mol_wire_sync( secret_mutual ).decrypt( bill, gift.salt() )\n\t\t\treturn $mol_wire_sync( $mol_crypto_secret ).from( secret_land )\n\t\t\t\n\t\t}\n\t\t\n\t\tdump() {\n\t\t\t\n\t\t\tthis.saving()\n\t\t\t\n\t\t\tconst units = [] as $hyoo_crus_unit[]\n\t\t\tconst rocks = [] as [ Uint8Array, Uint8Array ][]\n\t\t\t\n\t\t\tfor( const pass of this.pass.values() ) units.push( pass )\n\t\t\tfor( const gift of this.gift.values() ) units.push( gift )\n\t\t\t\n\t\t\tfor( const heads of this.sand.values() ) {\n\t\t\t\tfor( const sands of heads.values() ) {\n\t\t\t\t\tfor( const sand of sands.values() ) {\n\t\t\t\t\t\tunits.push( sand )\n\t\t\t\t\t\tif( sand.size() <= 32 ) continue\n\t\t\t\t\t\tconst rock = this.$.$hyoo_crus_mine.rock( sand.hash() )\n\t\t\t\t\t\tif( !rock ) continue\n\t\t\t\t\t\trocks.push([ sand.hash(), rock ])\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn {\n\t\t\t\tland: this.ref(),\n\t\t\t\tunits, rocks,\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t;[ $mol_dev_format_head ]() {\n\t\t\treturn $mol_dev_format_span( {},\n\t\t \t\t$mol_dev_format_native( this ),\n\t\t\t\t' ',\n\t\t\t\t$mol_dev_format_auto( this.faces.total ),\n\t\t \t)\n\t\t }\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\t/** Kind of Unit */\n\texport enum $hyoo_crus_unit_kind {\n\t\t\n\t\t/** Public key. First writes wins. */\n\t\tpass = $hyoo_crus_part.pass,\n\t\t\n\t\t/** Rights sharing. More power wins. */\n\t\tgift = $hyoo_crus_part.gift,\n\t\t\n\t\t/** Changeable data. Last writes wins. */\n\t\tsand = $hyoo_crus_part.sand,\n\t\t\n\t}\n\t\n\texport let $hyoo_crus_unit_trusted = new WeakSet< $hyoo_crus_unit >()\n\t\n\t/** Minimal independent stable part of information. Actually it's edge between nodes in graph model */\n\texport class $hyoo_crus_unit extends $mol_buffer {\n\t\t\n\t\tstatic size = 128 as const\n\t\t\t\t\n\t\tconstructor(\n\t\t\tbuffer = new ArrayBuffer( $hyoo_crus_unit.size ),\n\t\t\tbyteOffset = 0,\n\t\t\tbyteLength = buffer.byteLength,\n\t\t) {\n\t\t\tsuper( buffer, byteOffset, byteLength )\n\t\t}\n\t\t\n\t\tkind(): keyof typeof $hyoo_crus_unit_kind {\n\t\t\t\n\t\t\tconst val = this.uint8( 0 )\n\t\t\tif( !val ) $mol_fail( new Error( `Empty unit` ) )\n\t\t\tif( ( val & 1 ) === 0 ) return 'sand'\n\t\t\t\n\t\t\tconst kind = $hyoo_crus_unit_kind[ val ] as keyof typeof $hyoo_crus_unit_kind\n\t\t\tif( kind ) return kind\n\t\t\t\n\t\t\t$mol_fail( new Error( `Unknown unit kind (${val})` ) )\n\t\t}\n\t\t\n\t\tchoose< Res >( ways: {\n\t\t\tpass: ( unit: $hyoo_crus_pass )=> Res,\n\t\t\tgift: ( unit: $hyoo_crus_gift )=> Res,\n\t\t\tsand: ( unit: $hyoo_crus_sand )=> Res,\n\t\t} ) {\n\t\t\tconst way = this.kind()\n\t\t\tconst Unit = {\n\t\t\t\tpass: $hyoo_crus_pass,\n\t\t\t\tgift: $hyoo_crus_gift,\n\t\t\t\tsand: $hyoo_crus_sand,\n\t\t\t}[ way ]\n\t\t\tif( this instanceof Unit ) return ways[ way ]( this as any )\n\t\t\tconst unit = new Unit( this.buffer, this.byteOffset, this.byteLength ) as any\n\t\t\treturn ways[ way ]( unit )\n\t\t}\n\t\t\n\t\tnarrow() {\n\t\t\treturn this.choose< $hyoo_crus_pass | $hyoo_crus_gift | $hyoo_crus_sand >({\n\t\t\t\tsand: unit => unit,\n\t\t\t\tpass: unit => unit,\n\t\t\t\tgift: unit => unit,\n\t\t\t})\n\t\t}\n\t\t\n\t\tkey(): string {\n\t\t\treturn this.narrow().key()\n\t\t}\n\t\t\n\t\tid6( offset: number, next?: string ) {\n\t\t\tif( next === undefined ) {\n\t\t\t\tconst str = $mol_base64_ae_encode( new Uint8Array( this.buffer, this.byteOffset + offset, 6 ) )\n\t\t\t\treturn str === 'AAAAAAAA' ? '' : str\n\t\t\t} else {\n\t\t\t\tthis.asArray().set( $mol_base64_ae_decode( next || 'AAAAAAAA' ), this.byteOffset + offset )\n\t\t\t\treturn next\n\t\t\t}\n\t\t}\n\t\t\n\t\tid12( offset: number, next?: $hyoo_crus_ref ) {\n\t\t\tif( next === undefined ) {\n\t\t\t\treturn $hyoo_crus_ref_decode( new Uint8Array( this.buffer, this.byteOffset + offset, 12 ) )\n\t\t\t} else {\n\t\t\t\tthis.asArray().set( $hyoo_crus_ref_encode( next ), this.byteOffset + offset )\n\t\t\t\treturn next\n\t\t\t}\n\t\t}\n\t\t\n\t\t_peer!: string\n\t\tpeer( next?: string ) {\n\t\t\tif( next === undefined && this._peer !== undefined ) return this._peer\n\t\t\telse return this._peer = this.id6( 2, next )\n\t\t}\n\t\t\n\t\tsalt() {\n\t\t\treturn new Uint8Array( this.buffer, this.byteOffset + 2, 16 )\n\t\t}\n\t\t\n\t\tsens( next?: ArrayLike< number > ) {\n\t\t\tconst prev = new Uint8Array( this.buffer, this.byteOffset, 64 )\n\t\t\tif( next ) prev.set( next )\n\t\t\treturn prev\n\t\t}\n\t\t\n\t\tmix( mixin: Uint8Array ) {\n\t\t\tfor( let i = 0; i < mixin.length; ++i ) {\n\t\t\t\tthis.uint8( 2 + i, this.uint8( 2 + i ) ^ mixin[i] )\n\t\t\t}\n\t\t}\n\t\t\n\t\tsign( next?: ArrayLike< number > ) {\n\t\t\tconst prev = new Uint8Array( this.buffer, this.byteOffset + 64, 64 )\n\t\t\tif( next ) prev.set( next )\n\t\t\treturn prev\n\t\t}\n\t\t\n\t\tsigned() {\n\t\t\treturn this.sign().some( b => b )\n\t\t}\n\t\t\n\t\twork() {\n\t\t\t\n\t\t\tif( !this.signed() ) {\n\t\t\t\treturn $hyoo_crus_rank_rate.just\n\t\t\t}\n\t\t\t\n\t\t\tconst sign = this.sign()\n\t\t\tlet int = sign[0] | ( sign[1] << 8 )\n\t\t\t\n\t\t\tlet count = 0\n\t\t\twhile( int & 1 ) {\n\t\t\t\tint >>>= 1\n\t\t\t\t++ count\n\t\t\t}\n\t\t\t\n\t\t\treturn count\n\t\t}\n\t\t\n\t\trank_min() {\n\t\t\treturn $hyoo_crus_rank_rule\n\t\t}\n\t\t\n\t\t_land = null as null | $hyoo_crus_land\n\t\t\n\t\tdump() {\n\t\t\treturn {}\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\t/** Public key of Peer */\n\texport class $hyoo_crus_pass extends $hyoo_crus_unit {\n\t\t\n\t\t_lord!: $hyoo_crus_ref\n\t\tlord( next?: $hyoo_crus_ref ) {\n\t\t\tif( next === undefined && this._lord !== undefined ) return this._lord\n\t\t\telse return this._lord = this.id12( 2, next )\n\t\t}\n\t\t\n\t\tkey(): string {\n\t\t\treturn `pass:${ this.id6( 2 ) }`\n\t\t}\n\t\t\n\t\tauth( next?: ArrayLike< number > ) {\n\t\t\tconst prev = new Uint8Array( this.buffer, this.byteOffset, 64 )\n\t\t\tif( next ) prev.set( next )\n\t\t\treturn prev\n\t\t}\n\t\t\n\t\tdump() {\n\t\t\treturn {\n\t\t\t\tkind: this.kind(),\n\t\t\t\tlord: this.lord().description!,\n\t\t\t}\n\t\t}\n\t\t\n\t\trank_min() {\n\t\t\treturn $hyoo_crus_rank( $hyoo_crus_rank_tier.join | ( $hyoo_crus_rank_rate.just - this.work() ) )\n\t\t}\n\t\t\n\t\t[ $mol_dev_format_head ]() {\n\t\t\treturn $mol_dev_format_span( {} ,\n\t\t\t\t$mol_dev_format_native( this ) ,\n\t\t\t\t' ',\n\t\t\t\tthis.peer(),\n\t\t\t\t' 🔑 ',\n\t\t\t\t$mol_dev_format_span( {}, this.lord().description ),\n\t\t\t)\n\t\t}\n\t\t\n\t}\n\t\n\n}\n","namespace $ {\n\t\n\t/** Given Rank and Secret */\n\texport class $hyoo_crus_gift extends $hyoo_crus_unit {\n\t\t\n\t\trank( next?: typeof $hyoo_crus_rank.Value ) {\n\t\t\t\n\t\t\tif( next !== undefined ) this.uint8( 0, $hyoo_crus_unit_kind.gift )\n\t\t\tconst res = this.uint8( 1, next ) as typeof $hyoo_crus_rank.Value\n\t\t\t\n\t\t\tif( res < $hyoo_crus_rank_deny || res > $hyoo_crus_rank_rule ) {\n\t\t\t\t$mol_fail( new RangeError( `Wrong rank ${ res }` ) )\n\t\t\t}\n\t\t\t\n\t\t\treturn res\n\t\t}\n\t\t\n\t\ttime( next?: number ) {\n\t\t\treturn this.uint48( 8, next )\n\t\t}\n\t\t\n\t\tfree() {\n\t\t\treturn new Uint8Array( this.buffer, this.byteOffset + 26, 6 )\n\t\t}\n\t\t\n\t\t_dest!: $hyoo_crus_ref\n\t\tdest( next?: $hyoo_crus_ref ) {\n\t\t\tif( next === undefined && this._dest !== undefined ) return this._dest\n\t\t\telse return this._dest = this.id12( 14, next )\n\t\t}\n\t\t\n\t\tkey(): string {\n\t\t\treturn `gift:${ this.dest().description! }`\n\t\t}\n\t\t\n\t\tbill() {\n\t\t\treturn new Uint8Array( this.buffer, this.byteOffset + 32, 32 )\n\t\t}\n\t\t\n\t\tstatic compare(\n\t\t\tleft: $hyoo_crus_gift,\n\t\t\tright: $hyoo_crus_gift,\n\t\t) {\n\t\t\treturn ( right.time() - left.time() ) || ( right.peer() > left.peer() ? 1 : right.peer() < left.peer() ? -1 : 0 )\n\t\t}\n\t\t\n\t\tdump() {\n\t\t\treturn {\n\t\t\t\tkind: this.kind(),\n\t\t\t\tpeer: this.peer(),\n\t\t\t\tdest: this.dest().description!,\n\t\t\t\ttier: $hyoo_crus_rank_tier[ this.rank() &~ $hyoo_crus_rank_rate.just ],\n\t\t\t\twork: this.work(),\n\t\t\t\ttime: $hyoo_crus_time_dump( this.time() ),\n\t\t\t}\n\t\t}\n\t\t\n\t\trank_min() {\n\t\t\treturn $hyoo_crus_rank( $hyoo_crus_rank_rule | ( $hyoo_crus_rank_rate.just - this.work() ) )\n\t\t}\n\t\t\n\t\t[ $mol_dev_format_head ]() {\n\t\t\treturn $mol_dev_format_span( {} ,\n\t\t\t\t$mol_dev_format_native( this ) ,\n\t\t\t\t' ',\n\t\t\t\tthis.peer(),\n\t\t\t\t' 🏅 ',\n\t\t\t\t$mol_dev_format_span( {}, this.dest().description || '_' ),\n\t\t\t\tthis.bill().some( v => v ) ? ' 🔐' : ' 👀',\n\t\t\t\t$hyoo_crus_rank_tier[ this.rank() &~ $hyoo_crus_rank_rate.just ],\n\t\t\t\t':',\n\t\t\t\tthis.rank() & $hyoo_crus_rank_rate.just,\n\t\t\t\t' ',\n\t\t\t\t$mol_dev_format_shade( $hyoo_crus_time_dump( this.time() ) ),\n\t\t\t)\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\n\t/** Hint how interpret inner Units: term, solo, vals, keys */\n\texport enum $hyoo_crus_sand_tag {\n\t\t/** Itself value. Ignore */\n\t\tterm = 0b00,\n\t\t/** Value in first sub node. Ignore all after first */\n\t\tsolo = 0b01,\n\t\t/** List of values */\n\t\tvals = 0b10,\n\t\t/** List of keys */\n\t\tkeys = 0b11,\n\t}\n\n\t/**  (Meta) Data */\n\texport class $hyoo_crus_sand extends $hyoo_crus_unit {\n\n\t\t_vary = undefined as undefined | $hyoo_crus_vary_type\n\t\t_open = null as null | Uint8Array\n\n\t\thint(\n\t\t\ttip: keyof typeof $hyoo_crus_vary_tip = 'nil',\n\t\t\ttag: keyof typeof $hyoo_crus_sand_tag = 'term',\n\t\t) {\n\t\t\tthis.uint8( 0, ( $hyoo_crus_sand_tag[ tag ] << 1 ) | ( $hyoo_crus_vary_tip[ tip ] << 3 ) )\n\t\t}\n\n\t\ttag() {\n\t\t\treturn $hyoo_crus_sand_tag[ ( this.uint8( 0 ) >> 1 ) & 0b11 ] as keyof typeof $hyoo_crus_sand_tag\n\t\t}\n\n\t\ttip() {\n\t\t\tconst tip = $hyoo_crus_vary_tip[ this.uint8( 0 ) >> 3 ] || $hyoo_crus_vary_tip.nil\n\t\t\t// if( !tip ) $mol_fail( new Error( 'Empty tip' ) )\n\t\t\treturn tip as keyof typeof $hyoo_crus_vary_tip\n\t\t}\n\n\t\tutf() {\n\t\t\treturn Boolean( this.uint8( 0 ) & 0b10000000 )\n\t\t}\n\n\t\tsize( next?: number ) {\n\t\t\treturn this.uint8( 1, next )\n\t\t}\n\n\t\ttime( next?: number ) {\n\t\t\treturn this.uint48( 8, next )\n\t\t}\n\n\t\t_head!: string\n\t\thead( next?: string ) {\n\t\t\tif( next === undefined && this._head !== undefined ) return this._head\n\t\t\telse return this._head = this.id6( 14, next )\n\t\t}\n\n\t\t_self!: string\n\t\tself( next?: string ) {\n\t\t\tif( next === undefined && this._self !== undefined ) return this._self\n\t\t\telse return this._self = this.id6( 20, next )\n\t\t}\n\n\t\tkey(): string {\n\t\t\treturn `sand:${ this.head() }/${ this.peer() }/${ this.self() }`\n\t\t}\n\n\t\t_lead!: string\n\t\tlead( next?: string ) {\n\t\t\tif( next === undefined && this._lead !== undefined ) return this._lead\n\t\t\telse return this._lead = this.id6( 26, next )\n\t\t}\n\n\t\thash(\n\t\t\tnext?: Uint8Array,\n\t\t\ttip: keyof typeof $hyoo_crus_vary_tip = 'nil' as const,\n\t\t\ttag: keyof typeof $hyoo_crus_sand_tag = 'term',\n\t\t) {\n\t\t\tconst bin = new Uint8Array( this.buffer, this.byteOffset + 32, 20 )\n\t\t\tif( next !== undefined ) {\n\t\t\t\tthis.hint( tip, tag )\n\t\t\t\tthis.size( 255 )\n\t\t\t\tbin.set( next )\n\t\t\t}\n\t\t\tif( this.size() > 32 ) return bin\n\t\t\t$mol_fail( new Error( 'No stored hash' ) )\n\t\t}\n\n\t\tmeta() {\n\t\t\treturn new Uint8Array( this.buffer, this.byteOffset + 42, 12 )\n\t\t}\n\n\t\tdata(\n\t\t\tnext?: Uint8Array,\n\t\t\ttip: keyof typeof $hyoo_crus_vary_tip = 'nil',\n\t\t\ttag: keyof typeof $hyoo_crus_sand_tag = 'term',\n\t\t) {\n\t\t\tif( next === undefined ) {\n\t\t\t\tconst size = this.size()\n\t\t\t\tif( size > 32 ) $mol_fail( new Error( 'Too long data' ) )\n\t\t\t\treturn new Uint8Array( this.buffer, this.byteOffset + 32, size )\n\t\t\t} else {\n\t\t\t\tthis.hint( tip, tag )\n\t\t\t\tif( next.byteLength > 32 ) $mol_fail( new Error( 'Too long data' ) )\n\t\t\t\tthis.uint8( 1, next.byteLength )\n\t\t\t\tconst bin = new Uint8Array( this.buffer, this.byteOffset + 32, next.byteLength )\n\t\t\t\tbin.set( next )\n\t\t\t\tnew Uint8Array( this.buffer, this.byteOffset + 32 + next.length, 32 - next.length ).fill( 0 )\n\t\t\t\treturn bin\n\t\t\t}\n\t\t}\n\n\t\tidea() {\n\t\t\tconst bin = new Uint8Array( this.buffer, this.byteOffset + 20, 44 )\n\t\t\tconst hash = $mol_crypto_hash( bin )\n\t\t\tconst buf = new $mol_buffer( hash.buffer )\n\t\t\treturn buf.uint48( 0 )\n\t\t}\n\n\t\t/**\n\t\t * Compare Sands on timeline ( right - left )\n\t\t * Priority: time > peer > tick\n\t\t */\n\t\tstatic compare(\n\t\t\tleft: $hyoo_crus_sand,\n\t\t\tright: $hyoo_crus_sand,\n\t\t) {\n\t\t\treturn ( Math.floor( right.time() / 65536 ) - Math.floor( left.time() / 65536 ) )\n\t\t\t\t|| ( right.peer() > left.peer() ? 1 : right.peer() < left.peer() ? -1 : 0 )\n\t\t\t\t|| ( right.time() - left.time() )\n\t\t}\n\n\t\tdump() {\n\t\t\treturn {\n\t\t\t\tkind: this.kind(),\n\t\t\t\tpeer: this.peer(),\n\t\t\t\tlead: this.lead(),\n\t\t\t\thead: this.head(),\n\t\t\t\tself: this.self(),\n\t\t\t\ttip: this.tip(),\n\t\t\t\ttag: this.tag(),\n\t\t\t\tsize: this.size(),\n\t\t\t\ttime: $hyoo_crus_time_dump( this.time() ),\n\t\t\t}\n\t\t}\n\n\t\trank_min() {\n\t\t\treturn $hyoo_crus_rank( $hyoo_crus_rank_tier.post | ( $hyoo_crus_rank_rate.just - this.work() ) )\n\t\t}\n\t\t\n\t\t[ $mol_dev_format_head ]() {\n\t\t\treturn $mol_dev_format_span( {},\n\t\t\t\t$mol_dev_format_native( this ),\n\t\t\t\t' ',\n\t\t\t\tthis.peer(),\n\t\t\t\t' ',\n\t\t\t\tthis.lead() || 'AAAAAAAA',\n\t\t\t\t$mol_dev_format_shade( '\\\\' ),\n\t\t\t\t$mol_dev_format_accent( this.head() || 'AAAAAAAA' ),\n\t\t\t\t$mol_dev_format_shade( '/' ),\n\t\t\t\tthis.self() || 'AAAAAAAA',\n\t\t\t\t' ',\n\t\t\t\t$mol_dev_format_shade( $hyoo_crus_time_dump( this.time() ) ),\n\t\t\t\t' ',\n\t\t\t\t{\n\t\t\t\t\tterm: '💼',\n\t\t\t\t\tsolo: '1️⃣',\n\t\t\t\t\tvals: '🎹',\n\t\t\t\t\tkeys: '🔑',\n\t\t\t\t}[ this.tag() ],\n\t\t\t\tthis.tip(),\n\t\t\t\t' ',\n\t\t\t\t$mol_dev_format_native( this._vary ) //??\n\t\t\t\t// ( this.size() > 32\n\t\t\t\t// \t? $mol_dev_format_shade( this.hash() )\n\t\t\t\t// \t: $mol_dev_format_native( $hyoo_crus_vary_decode({ tip: this.tip(), bin: this.data() }) )\n\t\t\t\t// ),\n\t\t\t)\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\t\n\texport function $mol_reconcile< Prev, Next >( {\n\t\tprev,\n\t\tfrom,\n\t\tto,\n\t\tnext,\n\t\tequal,\n\t\tdrop,\n\t\tinsert,\n\t\tupdate,\n\t\treplace,\n\t}: {\n\t\tprev: readonly Prev[],\n\t\tfrom: number,\n\t\tto: number,\n\t\tnext: ArrayLike<Next>,\n\t\tequal: ( next: Next, prev: Prev )=> boolean,\n\t\tdrop: ( prev: Prev, lead: Prev | null )=> Prev | null,\n\t\tinsert: ( next: Next, lead: Prev | null )=> Prev,\n\t\tupdate?: ( next: Next, prev: Prev, lead: Prev | null )=> Prev,\n\t\treplace?: ( next: Next, prev: Prev, lead: Prev | null )=> Prev,\n\t} ) {\n\t\t\n\t\tif( !update ) update = ( next, prev, lead )=> prev\n\t\tif( !replace ) replace = ( next, prev, lead )=> insert( next, drop( prev, lead ) )\n\t\t\n\t\tif( to > prev.length ) to = prev.length // $mol_fail( new RangeError( `To(${ to }) greater then length(${ prev.length })` ) )\n\t\tif( from > to ) from = to // $mol_fail( new RangeError( `From(${ to }) greater then to(${ to })` ) )\n\t\n\t\tlet p = from\n\t\tlet n = 0\n\t\tlet lead = p ? prev[ p - 1 ] : null\n\t\t\n\t\twhile( p < to || n < next.length ) {\n\t\t\t\n\t\t\tif( p < to && n < next.length && equal( next[n], prev[p] ) ) {\n\t\t\t\t\n\t\t\t\tlead = update( next[n], prev[p], lead )\n\t\t\t\t++ p\n\t\t\t\t++ n\n\t\t\t\t\n\t\t\t} else if( next.length - n > to - p ) {\n\t\t\t\t\n\t\t\t\tlead = insert( next[n], lead )\n\t\t\t\t++ n\n\t\t\t\t\n\t\t\t} else if( next.length - n < to - p ) {\n\t\t\t\t\n\t\t\t\tlead = drop( prev[p], lead )\n\t\t\t\t++ p\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tlead = replace( next[n], prev[p], lead )\n\t\t\t\t++ p\n\t\t\t\t++ n\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\n\t/** Reactive convergent list. */\n\texport class $hyoo_crus_list_vary extends $hyoo_crus_node {\n\t\t\n\t\tstatic tag = $hyoo_crus_sand_tag[ $hyoo_crus_sand_tag.vals ] as keyof typeof $hyoo_crus_sand_tag\n\t\t\n\t\t/** All Vary in the list. */\n\t\t@ $mol_mem\n\t\titems_vary(\n\t\t\tnext?: readonly $hyoo_crus_vary_type[],\n\t\t\ttag: keyof typeof $hyoo_crus_sand_tag = 'term',\n\t\t): readonly $hyoo_crus_vary_type[] {\n\t\t\t\n\t\t\tconst units = this.units()\n\t\t\tif( next === undefined ) return units.map( unit => this.land().sand_decode( unit ) )\n\t\t\t\n\t\t\tthis.splice( next, 0, units.length, tag )\n\t\t\treturn this.items_vary()\n\t\t\t\n\t\t}\n\t\t\n\t\t/** Replace sublist by  new one with reconciliation. */\n\t\t@ $mol_action\n\t\tsplice(\n\t\t\tnext: readonly $hyoo_crus_vary_type[],\n\t\t\tfrom = this.units().length,\n\t\t\tto = from,\n\t\t\ttag: keyof typeof $hyoo_crus_sand_tag = 'term',\n\t\t) {\n\t\t\tconst land = this.land()\n\t\t\t$mol_reconcile({\n\t\t\t\tprev: this.units(),\n\t\t\t\tfrom,\n\t\t\t\tto,\n\t\t\t\tnext,\n\t\t\t\tequal: ( next, prev )=> $mol_compare_deep( this.land().sand_decode( prev ), next ),\n\t\t\t\tdrop: ( prev, lead )=> this.land().post( lead?.self() ?? '', prev.head(), prev.self(), null ),\n\t\t\t\tinsert: ( next, lead )=> this.land().post( lead?.self() ?? '', this.head(), land.self_make(), next, tag ),\n\t\t\t\treplace: ( next, prev, lead )=> this.land().post( lead?.self() ?? '', prev.head(), prev.self(), next, prev.tag() ),\n\t\t\t})\n\t\t}\n\t\t\n\t\t/** Unit by Vary. */\n\t\tfind( vary: $hyoo_crus_vary_type ) {\n\t\t\tfor( const unit of this.units() ) {\n\t\t\t\tif( $mol_compare_deep( this.land().sand_decode( unit ), vary ) ) return unit\n\t\t\t}\n\t\t\treturn null\n\t\t}\n\t\t\n\t\t/** Existence of Vary in the list. */\n\t\thas(\n\t\t\tvary: $hyoo_crus_vary_type,\n\t\t\tnext?: boolean,\n\t\t\ttag: keyof typeof $hyoo_crus_sand_tag = 'term',\n\t\t) {\n\t\t\tif( next === undefined ) return Boolean( this.find( vary ) )\n\t\t\tif( next ) this.add( vary, tag )\n\t\t\telse this.cut( vary )\n\t\t\treturn next\n\t\t}\n\t\t\n\t\t/** Add Vary a the beginning if it doesn't exists. */\n\t\tadd(\n\t\t\tvary: $hyoo_crus_vary_type,\n\t\t\ttag: keyof typeof $hyoo_crus_sand_tag = 'term',\n\t\t) {\n\t\t\tif( this.has( vary ) ) return\n\t\t\tthis.land().post( '', this.head(), '', vary, tag )\n\t\t}\n\t\t\n\t\t/** Removes all Vary presence. */\n\t\tcut( vary: $hyoo_crus_vary_type ) {\n\t\t\t\n\t\t\tconst units = [ ... this.units() ]\n\t\t\tfor( let i = 0; i < units.length; ++ i ) {\n\t\t\t\t\n\t\t\t\tif( ! $mol_compare_deep( this.land().sand_decode( units[i] ), vary ) ) continue\n\t\t\t\t\n\t\t\t\tthis.land().post(\n\t\t\t\t\tunits[i-1]?.self() ?? 0,\n\t\t\t\t\tunits[i].head(),\n\t\t\t\t\tunits[i].self(),\n\t\t\t\t\tnull,\n\t\t\t\t)\n\t\t\t\t\n\t\t\t\tunits.splice( i, 1 )\n\t\t\t\t-- i\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t/** Moves item from one Seat to another. */\n\t\tmove( from: number, to: number ) {\n\t\t\tthis.land().sand_move( this.units()[ from ], this.head(), to )\n\t\t}\n\t\t\n\t\t/** Remove item by Seat. */\n\t\twipe( seat: number ) {\n\t\t\tthis.land().sand_wipe( this.units()[ seat ] )\n\t\t}\n\t\t\n\t\t/** Add vary at the end and use maked Self as Node Head. */\n\t\tnode_make< Node extends typeof $hyoo_crus_node >(\n\t\t\tNode: Node,\n\t\t\tvary: $hyoo_crus_vary_type,\n\t\t\ttag: keyof typeof $hyoo_crus_sand_tag = 'term',\n\t\t) {\n\t\t\tthis.splice( [ vary ], undefined, undefined, tag )\n\t\t\treturn this.land().Node( Node ).Item( this.units().at(-1)!.self() )\n\t\t}\n\t\t\n\t\t;[ $mol_dev_format_head ]() {\n\t\t\treturn $mol_dev_format_span( {} ,\n\t\t\t\t$mol_dev_format_native( this ) ,\n\t\t\t\t' ',\n\t\t\t\tthis.head(),\n\t\t\t\t' ',\n\t\t\t\t$mol_dev_format_auto( this.items_vary() ),\n\t\t\t)\n\t\t}\n\t\t\n\t}\n\n\t/** Mergeable list of atomic vary type factory */\n\texport function $hyoo_crus_list<\n\t\tParse extends $mol_data_value\n\t>( parse: Parse ) {\n\n\t\tabstract class $hyoo_crus_list extends $hyoo_crus_list_vary {\n\n\t\t\tstatic parse = parse;\n\n\t\t\t@ $mol_mem\n\t\t\titems( next?: readonly ReturnType< Parse >[] ): readonly ReturnType< Parse >[] {\n\t\t\t\treturn this.items_vary( next?.map( parse ) ).map( parse )\n\t\t\t}\n\n\t\t\tstatic toString() {\n\t\t\t\treturn this === $hyoo_crus_list ? '$hyoo_crus_list<' + this.$.$mol_func_name( parse ) + '>' : super.toString()\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\treturn $hyoo_crus_list\n\t}\n\n\t/** Mergeable list of atomic non empty binaries */\n\texport class $hyoo_crus_list_bin extends $hyoo_crus_list( $hyoo_crus_vary_cast_bin ) {}\n\t/** Mergeable list of atomic booleans */\n\texport class $hyoo_crus_list_bool extends $hyoo_crus_list( $hyoo_crus_vary_cast_bool ) {}\n\t/** Mergeable list of atomic int64s */\n\texport class $hyoo_crus_list_int extends $hyoo_crus_list( $hyoo_crus_vary_cast_int ) {}\n\t/** Mergeable list of atomic float64s */\n\texport class $hyoo_crus_list_real extends $hyoo_crus_list( $hyoo_crus_vary_cast_real ) {}\n\t/** Mergeable list of atomic int64 arrays */\n\texport class $hyoo_crus_list_ints extends $hyoo_crus_list( $hyoo_crus_vary_cast_ints ) {}\n\t/** Mergeable list of atomic float64 arrays */\n\texport class $hyoo_crus_list_reals extends $hyoo_crus_list( $hyoo_crus_vary_cast_reals ) {}\n\t/** Mergeable list of atomic some references */\n\texport class $hyoo_crus_list_ref extends $hyoo_crus_list( $hyoo_crus_vary_cast_ref ) {}\n\n\t/** Mergeable list of atomic strings */\n\texport class $hyoo_crus_list_str extends $hyoo_crus_list( $hyoo_crus_vary_cast_str ) {}\n\t/** Mergeable list of atomic iso8601 time moments */\n\texport class $hyoo_crus_list_time extends $hyoo_crus_list( $hyoo_crus_vary_cast_time ) {}\n\t/** Mergeable list of atomic iso8601 time durations */\n\texport class $hyoo_crus_list_dur extends $hyoo_crus_list( $hyoo_crus_vary_cast_dur ) {}\n\t/** Mergeable list of atomic iso8601 time intervals */\n\texport class $hyoo_crus_list_range extends $hyoo_crus_list( $hyoo_crus_vary_cast_range ) {}\n\t/** Mergeable list of atomic plain old js objects */\n\texport class $hyoo_crus_list_json extends $hyoo_crus_list( $hyoo_crus_vary_cast_json ) {}\n\t/** Mergeable list of atomic plain old js arrays */\n\texport class $hyoo_crus_list_jsan extends $hyoo_crus_list( $hyoo_crus_vary_cast_jsan ) {}\n\t/** Mergeable list of atomic DOMs */\n\texport class $hyoo_crus_list_dom extends $hyoo_crus_list( $hyoo_crus_vary_cast_dom ) {}\n\t/** Mergeable list of atomic Trees*/\n\texport class $hyoo_crus_list_tree extends $hyoo_crus_list( $hyoo_crus_vary_cast_tree ) {}\n\n\texport class $hyoo_crus_list_ref_base extends $hyoo_crus_list_ref {\n\t}\n\t\n\t/** mergeable list of atomic references to some Node type */\n\texport function $hyoo_crus_list_ref_to<\n\t\tconst Value extends any,\n\t\tVals extends readonly any[] = readonly $mol_type_result< $mol_type_result< Value > >[]\n\t>( Value: Value ) {\n\t\t\n\t\tclass $hyoo_crus_list_ref_to extends $hyoo_crus_list_ref_base {\n\t\t\t\n\t\t\tstatic Value = $mol_memo.func( Value as any ) as Value\n\t\t\t\n\t\t\tstatic toString() {\n\t\t\t\treturn this === $hyoo_crus_list_ref_to ? '$hyoo_crus_list_ref_to<' + ( Value as any )() + '>' : super.toString()\n\t\t\t}\n\t\t\t\n\t\t\t/** List of referenced Nodes */\n\t\t\t@ $mol_mem\n\t\t\tremote_list( next?: Vals ) {\n\t\t\t\tconst glob = this.$.$hyoo_crus_glob\n\t\t\t\tconst Node = ( Value as any )()\n\t\t\t\treturn this.items_vary( next?.map( item => ( item as $hyoo_crus_node ).ref() ) )\n\t\t\t\t\t.map( $hyoo_crus_vary_cast_ref )\n\t\t\t\t\t.filter( $mol_guard_defined )\n\t\t\t\t\t.map( ref => glob.Node( ref, Node ) ) as readonly any[] as Vals\n\t\t\t}\n\t\t\t\n\t\t\t@ $mol_action\n\t\t\tremote_add( item: Vals[number] ) {\n\t\t\t\tthis.add( item.ref() )\n\t\t\t}\n\t\t\t\n\t\t\t/** Make new Node and place it at end. */\n\t\t\t@ $mol_action\n\t\t\tmake( config: null | number | $hyoo_crus_rank_preset | $hyoo_crus_land ): Vals[number] {\n\t\t\t\t\n\t\t\t\tif( config === null || typeof config === 'number' ) {\n\t\t\t\t\t\n\t\t\t\t\tconst self = this.land().self_make( config || undefined )\n\t\t\t\t\tconst node = this.land().Node( ( Value as any )() ).Item( self )\n\t\t\t\t\tthis.splice([ node.ref() ])\n\t\t\t\t\treturn node\n\t\t\t\t\t\n\t\t\t\t} else if( config instanceof $hyoo_crus_land ) {\n\t\t\t\t\t\n\t\t\t\t\tconst land = config.area_make()\n\t\t\t\t\tthis.splice([ land.ref() ])\n\t\t\t\t\treturn land.Node( ( Value as any )() ).Item('')\n\t\t\t\t\t\n\t\t\t\t} else if( config ) {\n\t\t\t\t\t\n\t\t\t\t\tconst land = this.$.$hyoo_crus_glob.land_grab( config )\n\t\t\t\t\tthis.splice([ land.ref() ])\n\t\t\t\t\treturn land.Node( ( Value as any )() ).Item('')\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t/** Add new Node which placed in new Land */\n\t\t\t/** @deprecated use make( ... ) */\n\t\t\tremote_make( config: $hyoo_crus_rank_preset ): Vals[number] {\n\t\t\t\treturn this.make( config )\n\t\t\t}\n\t\t\t\n\t\t\t/** Add new Node which placed in same Land */\n\t\t\t/** @deprecated use make( ... ) */\n\t\t\t@ $mol_action\n\t\t\tlocal_make( idea?: number ): Vals[number] {\n\t\t\t\tconst self = this.land().self_make( idea )\n\t\t\t\tconst node = this.land().Node( ( Value as any )() ).Item( self )\n\t\t\t\tthis.splice([ node.ref() ])\n\t\t\t\treturn node\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\treturn $hyoo_crus_list_ref_to\n\t}\n\t\n}\n","namespace $ {\n\t/** Mergeable dictionary node with any keys mapped to any embedded Node types */\n\texport class $hyoo_crus_dict extends $hyoo_crus_list_vary {\n\t\t\n\t\tstatic tag = $hyoo_crus_sand_tag[ $hyoo_crus_sand_tag.keys ] as keyof typeof $hyoo_crus_sand_tag\n\t\t\n\t\t/** List of Vary keys. */\n\t\t@ $mol_mem\n\t\tkeys(): readonly $hyoo_crus_vary_type[] {\n\t\t\treturn this.items_vary()\n\t\t}\n\t\t\n\t\t/** Inner Node by key. */\n\t\tdive< Node extends typeof $hyoo_crus_node >(\n\t\t\tkey: $hyoo_crus_vary_type,\n\t\t\tNode: Node,\n\t\t\tauto?: any,\n\t\t) {\n\t\t\tif( this.can_change() && auto !== undefined ) this.has( key, true, Node.tag )\n\t\t\tconst unit = this.find( key )\n\t\t\treturn unit ? this.land().Node( Node ).Item( unit.self() ) : null\n\t\t}\n\t\t\n\t\tstatic schema = {} as Record< string, typeof $hyoo_crus_node >\n\t\t\n\t\t/** Mergeable dictionary node with defined keys mapped to different embedded Node types */\n\t\tstatic with<\n\t\t\tThis extends typeof $hyoo_crus_dict,\n\t\t\tconst Schema extends Record< string, { tag: keyof typeof $hyoo_crus_sand_tag, new(): {} } >\n\t\t>( this: This, schema: Schema ) {\n\t\t\t\n\t\t\tconst $hyoo_crus_dict_with = class $hyoo_crus_dict_with extends ( this as any ) {\n\t\t\t\t// static get schema() { return { ... this.schema, ... schema } }\n\t\t\t\t\n\t\t\t\tstatic toString() {\n\t\t\t\t\t\n\t\t\t\t\tif( this !== $hyoo_crus_dict_with ) return super.toString()\n\t\t\t\t\t\n\t\t\t\t\tconst params = Object.entries( schema ).map( ([ name, type ])=> `${name}: ${type}` )\n\t\t\t\t\treturn '$hyoo_crus_dict.with<{' + params.join( ', ' ) + '}>'\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} as Omit< This, 'prototype' > & {\n\t\t\t\tnew( ...args: any[] ): $mol_type_override< InstanceType< This >, {\n\t\t\t\t\treadonly [ Key in keyof Schema ]: ( auto?: any )=> InstanceType< Schema[ Key ] > | null\n\t\t\t\t} >\n\t\t\t}\n\n\t\t\tfor( const Field in schema ) {\n\t\t\t\t\n\t\t\t\tObject.defineProperty( $hyoo_crus_dict_with.prototype, Field, {\n\t\t\t\t\tvalue: function( this: InstanceType< This >, auto?: any ) {\n\t\t\t\t\t\treturn this.dive( Field, schema[ Field ] as any, auto )\n\t\t\t\t\t}\n\t\t\t\t} )\n\t\t\t\t\n\t\t\t\t// $mol_wire_field( Entity.prototype, Field as any )\n\t\t\t}\n\t\t\t\n\t\t\treturn Object.assign( $hyoo_crus_dict_with, { schema: { ... this.schema, ... schema } } )\n\t\t\t\n\t\t}\n\t\t\n\t\t;[ $mol_dev_format_head ]() {\n\t\t\t\n\t\t\tconst keys = $mol_wire_probe( ()=> this.keys() )\n\t\t\tconst nodes = $mol_wire_probe( ()=> this.nodes(null) ) ?? []\n\t\t\t\n\t\t\treturn $mol_dev_format_span( {} ,\n\t\t\t\t$mol_dev_format_native( this ) ,\n\t\t\t\t' ',\n\t\t\t\tthis.head(),\n\t\t\t\t' ',\n\t\t\t\t$mol_dev_format_auto( keys?.map( ( key, index )=> new Pair( key, nodes[ index ] ) ) ),\n\t\t\t)\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\tclass Pair {\n\t\tconstructor( readonly key: any, readonly val: any ) {\n\t\t}\n\t\t;[ $mol_dev_format_head ]() {\n\t\t\treturn $mol_dev_format_tr( {} ,\n\t\t\t\t$mol_dev_format_td( {}, $mol_dev_format_auto(this.key) ),\n\t\t\t\t$mol_dev_format_td( {},': '),\n\t\t\t\t$mol_dev_format_td( {}, $mol_dev_format_auto(this.val) ),\n\t\t\t)\n\t\t}\n\t}\n\t\n\t/** Mergeable dictionary with any keys mapped to any embedded Node types */\n\texport function $hyoo_crus_dict_to<\n\t\tValue extends { tag: keyof typeof $hyoo_crus_sand_tag, new(): {} }\n\t>( Value: Value ) {\n\t\t\n\t\treturn class $hyoo_crus_dict_to extends $hyoo_crus_dict {\n\t\t\t\n\t\t\tValue = Value\n\t\t\t\n\t\t\tkey( key: $hyoo_crus_vary_type, auto?: any ) {\n\t\t\t\treturn this.dive( key, this.Value as any as typeof $hyoo_crus_node, auto ) as InstanceType< Value >\n\t\t\t}\n\t\t\t\n\t\t\tstatic toString() {\n\t\t\t\treturn this === $hyoo_crus_dict_to ? '$hyoo_crus_dict_to<' + Value + '>' : super.toString()\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\n\t/**\n\t * 48-bit streamable string hash function\n\t * Based on cyrb53: https://stackoverflow.com/a/52171480\n\t */\n\texport function $mol_hash_string( str: string, seed = 0 ) {\n\t\t\n\t\tlet h1 = 0xdeadbeef ^ seed\n\t\tlet h2 = 0x41c6ce57 ^ seed\n\t\t\n\t\tfor( let i = 0; i < str.length; i++ ) {\n\t\t\tconst ch = str.charCodeAt(i)\n\t\t\th1 = Math.imul( h1 ^ ch, 2654435761 )\n\t\t\th2 = Math.imul( h2 ^ ch, 1597334677 )\n\t\t}\n\t\t\n\t\th1 = Math.imul( h1 ^ ( h1 >>> 16 ), 2246822507 ) ^ Math.imul( h2 ^ ( h2 >>> 13 ), 3266489909 )\n\t\th2 = Math.imul( h2 ^ ( h2 >>> 16 ), 2246822507 ) ^ Math.imul( h1 ^ ( h1 >>> 13 ), 3266489909 )\n\t\t\n\t\treturn 4294967296 * ( ( ( 1 << 16 ) - 1 ) & h2 ) + ( h1 >>> 0 )\n\t}\n\n}\n","\nnamespace $ {\n\n\t/** Atomic dynamic register */\n\texport class $hyoo_crus_atom_vary extends $hyoo_crus_node {\n\n\t\tstatic tag = $hyoo_crus_sand_tag[ $hyoo_crus_sand_tag.solo ] as keyof typeof $hyoo_crus_sand_tag;\n\t\t\n\t\tpick_unit( peer: string | null ) {\n\t\t\treturn this.units_of( peer ).at(0)\n\t\t}\n\t\t\n\t\tvary( next?: $hyoo_crus_vary_type ): $hyoo_crus_vary_type {\n\t\t\treturn this.vary_of( '', next )\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tvary_of( peer: string | null, next?: $hyoo_crus_vary_type ): $hyoo_crus_vary_type {\n\t\t\t\n\t\t\tlet unit_prev = this.pick_unit( peer )\n\t\t\tlet prev = unit_prev ? this.land().sand_decode( unit_prev ) : null\n\t\t\t\n\t\t\tif( next === undefined ) return prev\n\t\t\tif( $mol_compare_deep( prev , next ) ) return next\n\t\t\t\n\t\t\tthis.land().post(\n\t\t\t\t'', \n\t\t\t\tunit_prev?.head() ?? this.head(),\n\t\t\t\tunit_prev?.self() ?? '',\n\t\t\t\tnext\n\t\t\t)\n\t\t\t\n\t\t\treturn this.vary_of( peer )\n\t\t}\n\t\t\n\t\t;[ $mol_dev_format_head ]() {\n\t\t\treturn $mol_dev_format_span( {} ,\n\t\t\t\t$mol_dev_format_native( this ) ,\n\t\t\t\t' ',\n\t\t\t\tthis.head(),\n\t\t\t\t' ',\n\t\t\t\t$mol_dev_format_auto( this.vary() ),\n\t\t\t)\n\t\t}\n\t\t\n\t}\n\t\n\n\texport class $hyoo_crus_atom_enum_base extends $hyoo_crus_atom_vary {\n\n\t\tstatic options = [] as readonly $hyoo_crus_vary_type[]\n\t\t\n\t}\n\t\n\texport function $hyoo_crus_atom_enum<\n\t\tconst Options extends readonly $hyoo_crus_vary_type[]\n\t>( options: Options ) {\n\n\t\tabstract class $hyoo_crus_atom_enum extends $hyoo_crus_atom_enum_base {\n\n\t\t\tstatic options = options;\n\n\t\t\tstatic toString() {\n\t\t\t\treturn this === $hyoo_crus_atom_enum ? '$hyoo_crus_atom_enum<' + options.map( $hyoo_crus_vary_cast_str ) + '>' : super.toString()\n\t\t\t}\n\t\t\t\n\t\t\tval( next?: Options[number] ): Options[number] | null {\n\t\t\t\treturn this.val_of( '', next )\n\t\t\t}\n\t\t\t\n\t\t\t@ $mol_mem_key\n\t\t\tval_of( peer: string | null, next?: Options[number] ): Options[number] | null {\n\t\t\t\t\n\t\t\t\tvalidate: if( next !== undefined ) {\n\t\t\t\t\tfor( const option of options ) {\n\t\t\t\t\t\tif( $mol_compare_deep( option, next ) ) break validate\n\t\t\t\t\t}\n\t\t\t\t\t$mol_fail( new Error( `Wrong value (${ $hyoo_crus_vary_cast_str( next ) })` ) )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tconst val = this.vary_of( peer, next )\n\t\t\t\t\n\t\t\t\tfor( const option of options ) {\n\t\t\t\t\tif( $mol_compare_deep( option, val ) ) return val\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn null\n\t\t\t}\n\n\t\t}\n\n\t\treturn $hyoo_crus_atom_enum\n\t}\n\n\t/** Atomic narrowed register factory */\n\texport function $hyoo_crus_atom<\n\t\tParse extends $mol_data_value\n\t>( parse: Parse ) {\n\n\t\tabstract class $hyoo_crus_atom extends $hyoo_crus_atom_vary {\n\n\t\t\tstatic parse = parse;\n\n\t\t\t/** Get/Set value of Node field */\n\t\t\tval( next?: ReturnType< Parse > ): ReturnType< Parse > | null {\n\t\t\t\treturn this.val_of( '', next )\n\t\t\t}\n\t\t\t\n\t\t\tval_of( peer: string | null, next?: ReturnType< Parse > ): ReturnType< Parse > | null {\n\t\t\t\t\n\t\t\t\tif( next !== undefined ) parse( next )\n\t\t\t\t\n\t\t\t\tconst res = this.vary_of( peer, next )\n\t\t\t\ttry {\n\t\t\t\t\treturn parse( res )\n\t\t\t\t} catch {\n\t\t\t\t\treturn null\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t\tstatic toString() {\n\t\t\t\treturn this === $hyoo_crus_atom ? '$hyoo_crus_atom<' + this.$.$mol_func_name( parse ) + '>' : super.toString()\n\t\t\t}\n\t\t\t\n\t\t}\n\n\t\treturn $hyoo_crus_atom\n\t}\n\t\n\t/** Atomic non empty binary register */\n\texport class $hyoo_crus_atom_bin extends $hyoo_crus_atom( $hyoo_crus_vary_cast_bin ) {}\n\t/** Atomic boolean register */\n\texport class $hyoo_crus_atom_bool extends $hyoo_crus_atom( $hyoo_crus_vary_cast_bool ) {}\n\t/** Atomic int64 register */\n\texport class $hyoo_crus_atom_int extends $hyoo_crus_atom( $hyoo_crus_vary_cast_int ) {}\n\t/** Atomic float64 register */\n\texport class $hyoo_crus_atom_real extends $hyoo_crus_atom( $hyoo_crus_vary_cast_real ) {}\n\t/** Atomic int64 array register */\n\texport class $hyoo_crus_atom_ints extends $hyoo_crus_atom( $hyoo_crus_vary_cast_ints ) {}\n\t/** Atomic float64 array register */\n\texport class $hyoo_crus_atom_reals extends $hyoo_crus_atom( $hyoo_crus_vary_cast_reals ) {}\n\t/** Atomic some reference register */\n\texport class $hyoo_crus_atom_ref extends $hyoo_crus_atom( $hyoo_crus_vary_cast_ref ) {}\n\n\t/** Atomic string register */\n\texport class $hyoo_crus_atom_str extends $hyoo_crus_atom( $hyoo_crus_vary_cast_str ) {}\n\t/** Atomic iso8601 time moment register*/\n\texport class $hyoo_crus_atom_time extends $hyoo_crus_atom( $hyoo_crus_vary_cast_time ) {}\n\t/** Atomic iso8601 time duration register */\n\texport class $hyoo_crus_atom_dur extends $hyoo_crus_atom( $hyoo_crus_vary_cast_dur ) {}\n\t/** Atomic iso8601 time interval register */\n\texport class $hyoo_crus_atom_range extends $hyoo_crus_atom( $hyoo_crus_vary_cast_range ) {}\n\n\t/** Atomic plain old js object register */\n\texport class $hyoo_crus_atom_json extends $hyoo_crus_atom( $hyoo_crus_vary_cast_json ) {}\n\t/** Atomic plain old js array register */\n\texport class $hyoo_crus_atom_jsan extends $hyoo_crus_atom( $hyoo_crus_vary_cast_jsan ) {}\n\t/** Atomic DOM register */\n\texport class $hyoo_crus_atom_dom extends $hyoo_crus_atom( $hyoo_crus_vary_cast_dom ) {}\n\t/** Atomic Tree register */\n\texport class $hyoo_crus_atom_tree extends $hyoo_crus_atom( $hyoo_crus_vary_cast_tree ) {}\n\t\n\texport class $hyoo_crus_atom_ref_base extends $hyoo_crus_atom_ref {\n\t\t\n\t\tstatic Value = $hyoo_crus_dict;\n\t\t\n\t}\n\t\n\t/** Atomic reference to some Node type register */\n\texport function $hyoo_crus_atom_ref_to< const Value extends any >( Value: Value ) {\n\n\t\tclass $hyoo_crus_atom_ref_to extends $hyoo_crus_atom_ref_base {\n\n\t\t\tValue = $mol_memo.func( Value as any ) as Value;\n\n\t\t\tstatic toString() {\n\t\t\t\treturn this === $hyoo_crus_atom_ref_to ? '$hyoo_crus_atom_ref_to<' + ( Value as any )() + '>' : super.toString()\n\t\t\t}\n\t\t\t\n\t\t\t/** Target Node */\n\t\t\tremote(\n\t\t\t\tnext?: null | $mol_type_result< $mol_type_result< this['Value'] > >\n\t\t\t): null | $mol_type_result< $mol_type_result< this['Value'] > > {\n\t\t\t\treturn this.remote_of( '', next )\n\t\t\t}\n\t\t\t\n\t\t\t@ $mol_mem_key\n\t\t\tremote_of(\n\t\t\t\tpeer: string | null,\n\t\t\t\tnext?: null | $mol_type_result< $mol_type_result< this['Value'] > >\n\t\t\t): null | $mol_type_result< $mol_type_result< this['Value'] > > {\n\t\t\t\t\n\t\t\t\tlet ref: $hyoo_crus_ref | null = ( next as $hyoo_crus_node )?.ref() ?? next\n\t\t\t\tref = $hyoo_crus_vary_cast_ref( this.vary_of( peer, ref ) )\n\t\t\t\tif( !ref ) return null\n\t\t\t\t\n\t\t\t\treturn this.$.$hyoo_crus_glob.Node( ref, ( Value as any )() )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t/** Target Node. Creates if not exists. */\n\t\t\tensure( config?: null | $hyoo_crus_rank_preset | $hyoo_crus_land ) {\n\t\t\t\treturn this.ensure_of( '', config )\n\t\t\t}\n\t\t\t\n\t\t\tensure_of( peer: string | null, config?: null | $hyoo_crus_rank_preset | $hyoo_crus_land ) {\n\t\t\t\t\n\t\t\t\tif( !this.val_of( peer ) ) {\n\t\t\t\t\tif( config === null ) this.ensure_here( peer )\n\t\t\t\t\telse if( config instanceof $hyoo_crus_land ) this.ensure_area( peer, config )\n\t\t\t\t\telse if( config ) this.ensure_lord( peer, config )\n\t\t\t\t\telse return null\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn this.remote_of( peer )\n\t\t\t}\n\t\t\t\n\t\t\t@ $mol_action\n\t\t\tensure_here( peer: string | null ) {\n\t\t\t\tconst idea = $mol_hash_string( this.ref().description! )\n\t\t\t\tconst head = this.land().self_make( idea )\n\t\t\t\tconst node = this.land().Node( ( Value as any )() ).Item( head )\n\t\t\t\tthis.remote_of( peer, node )\n\t\t\t}\n\t\t\t\n\t\t\t@ $mol_action\n\t\t\tensure_area( peer: string | null, land: $hyoo_crus_land ) {\n\t\t\t\tconst idea = $mol_hash_string( this.ref().description! )\n\t\t\t\tconst area = land.area_make( idea )\n\t\t\t\tthis.val_of( peer, area.ref() )\n\t\t\t}\n\t\t\t\n\t\t\t@ $mol_action\n\t\t\tensure_lord( peer: string | null, preset: $hyoo_crus_rank_preset ) {\n\t\t\t\tconst land = this.$.$hyoo_crus_glob.land_grab( preset )\n\t\t\t\tthis.val_of( peer, land.ref() )\n\t\t\t}\n\t\t\t\n\t\t\t/** @deprecated Use ensure( preset ) */\n\t\t\tremote_ensure( preset?: $hyoo_crus_rank_preset ) {\n\t\t\t\treturn this.ensure( preset )\n\t\t\t}\n\n\t\t\t/** @deprecated Use ensure( null ) */\n\t\t\tlocal_ensure() {\n\t\t\t\treturn this.ensure( null )\n\t\t\t}\n\n\t\t}\n\n\t\treturn $hyoo_crus_atom_ref_to\n\t}\n\t\n}\n","namespace $ {\n\n\t/** Entity dictionary Model with Title property included by default */\n\texport class $hyoo_crus_entity extends $hyoo_crus_dict.with( {\n\t\t/** Entity Title - default property for use */\n\t\tTitle: $hyoo_crus_atom_str,\n\t}) {\n\t\t\n\t\t@ $mol_mem\n\t\ttitle( next?: string ) {\n\t\t\treturn this.Title( next )?.val( next ) ?? ''\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\n\t/** Land where Lord is King. Contains only ain info. */\n\texport class $hyoo_crus_home extends $hyoo_crus_entity.with({\n\t\tSelection: $hyoo_crus_atom_str,\n\t\tHall: $hyoo_crus_atom_ref_to( ()=> $hyoo_crus_dict ),\n\t}) {\n\t\t\n\t\thall_by< Node extends typeof $hyoo_crus_dict >(\n\t\t\tNode: Node,\n\t\t\tpreset?: $hyoo_crus_rank_preset\n\t\t) {\n\t\t\treturn this.Hall(null)?.ensure( preset )?.cast( Node ) ?? null\n\t\t}\n\t\t\n\t}\n}\n","namespace $ {\n\texport class $hyoo_crus_mine extends $mol_object {\n\t\t\n\t\tstatic unit_updates = 0\n\t\tstatic unit_appends = 0\n\t\tstatic rock_writes = 0\n\t\t\n\t\t/** SHA-1 hash of BLOB */\n\t\t@ $mol_mem_key\n\t\tstatic hash( blob: Uint8Array ) {\n\t\t\treturn $mol_crypto_hash( blob )\n\t\t}\n\t\t\n\t\t/**  BLOB identified by Hash */\n\t\t@ $mol_mem_key\n\t\tstatic rock( hash: Uint8Array, next?: Uint8Array ): Uint8Array | null {\n\t\t\t$mol_wire_solid()\n\t\t\treturn next ?? null\n\t\t}\n\t\t\n\t\t/** Saves BLOB to storage and returns it's Hash */\n\t\t@ $mol_action\n\t\tstatic rock_save( blob: Uint8Array ) {\n\t\t\tconst hash = this.hash( blob )\n\t\t\tthis.rock( hash, blob )\n\t\t\tthis.rock( hash ) // temp dep allow reap\n\t\t\treturn hash\n\t\t}\n\t\t\n\t\tstatic units_persisted = new WeakSet< $hyoo_crus_unit >()\n\t\t\n\t\t/** Sync loads/saves units. */\n\t\tstatic units( land: $hyoo_crus_ref, next?: readonly $hyoo_crus_unit[] ) {\n\t\t\tif( next ) return $mol_wire_sync( this ).units_save( land, next ), next\n\t\t\telse return $mol_wire_sync( this ).units_load( land )\n\t\t}\n\t\t\n\t\t/** Loads units from storage */\n\t\tstatic async units_load( land: $hyoo_crus_ref ) {\n\t\t\treturn [] as readonly $hyoo_crus_unit[]\n\t\t}\n\t\t\n\t\t/** Saves units to storage */\n\t\tstatic async units_save( land: $hyoo_crus_ref, units: readonly $hyoo_crus_unit[] ) {\n\t\t\t\n\t\t}\n\t\t\n\t}\n}\n","namespace $ {\n\texport class $hyoo_crus_mine_pg extends $hyoo_crus_mine {\n\t\t\n\t\t@ $mol_memo.method\n\t\tstatic urn() {\n\t\t\treturn $mol_state_arg.value( 'db' )\n\t\t}\n\t\t\n\t\t@ $mol_memo.method\n\t\tstatic url() {\n\t\t\treturn new URL( this.urn()! )\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tstatic rock( hash: Uint8Array< ArrayBuffer >, next?: Uint8Array< ArrayBuffer > ): Uint8Array< ArrayBuffer > | null {\n\t\t\tif( next ) {\n\t\t\t\t$mol_wire_sync( this ).db_sync()?.query(\n\t\t\t\t\t`\n\t\t\t\t\t\tINSERT INTO Rock( hash, rock )\n\t\t\t\t\t\tVALUES( $1::bytea, $2::bytea )\n\t\t\t\t\t\tON CONFLICT( hash ) DO NOTHING\n\t\t\t\t\t`,\n\t\t\t\t\t[ hash, next ]\n\t\t\t\t)\n\t\t\t\treturn next\n\t\t\t}\n\t\t\treturn $mol_wire_sync( this ).rock_load( hash )\n\t\t}\n\t\t\n\t\tstatic async rock_load( hash: Uint8Array< ArrayBuffer > ) {\n\t\t\t\n\t\t\tconst db = await this.db()\n\t\t\tif( !db ) return null\n\t\t\t\n\t\t\tconst res = await db.query(\n\t\t\t\t`SELECT rock FROM Rock WHERE hash = $1::bytea`,\n\t\t\t\t[ hash ]\n\t\t\t)\n\t\t\t\n\t\t\treturn res.rows[0]?.rock as Uint8Array< ArrayBuffer > ?? null\n\t\t}\n\t\t\n\t\tstatic async units_save( land: $hyoo_crus_ref, units: readonly $hyoo_crus_unit[] ) { $hyoo_crus_land\n\t\t\t\n\t\t\tconst db = await this.db()\n\t\t\tif( !db ) return\n\t\t\t\n\t\t\tconst tasks = units.map( unit => {\n\t\t\t\tconst ref = land.description\n\t\t\t\tconst buf = Buffer.from( unit.buffer, unit.byteOffset, unit.byteLength )\n\t\t\t\treturn db.query(\n\t\t\t\t\t`\n\t\t\t\t\t\tINSERT INTO Land( land, path, unit )\n\t\t\t\t\t\tVALUES( $1::varchar(17), $2::varchar(17), $3::bytea )\n\t\t\t\t\t\tON CONFLICT( land, path ) DO UPDATE SET unit = $3::bytea;\n\t\t\t\t\t`,\n\t\t\t\t\t[ ref, unit.key(), buf ]\n\t\t\t\t)\n\t\t\t} )\n\t\t\t\n\t\t\tawait Promise.all( tasks )\n\t\t\t\n\t\t\tfor( const unit of units ) this.units_persisted.add( unit )\n\t\t\t\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tstatic async units_load( land: $hyoo_crus_ref ) {\n\t\t\t\n\t\t\tconst db = await this.db()\n\t\t\tif( !db ) return []\n\n\t\t\tconst res = await db.query<{ unit: Uint8Array< ArrayBuffer > }>(\n\t\t\t\t`SELECT unit FROM Land WHERE land = $1::varchar(17)`,\n\t\t\t\t[ land.description ]\n\t\t\t)\n\t\t\t\n\t\t\tconst units = res.rows.map( row => {\n\t\t\t\tconst unit = new $hyoo_crus_unit(\n\t\t\t\t\trow.unit.buffer as ArrayBuffer,\n\t\t\t\t\trow.unit.byteOffset,\n\t\t\t\t\trow.unit.byteLength,\n\t\t\t\t).narrow()\n\t\t\t\tthis.units_persisted.add( unit )\n\t\t\t\t$hyoo_crus_unit_trusted.add( unit )\n\t\t\t\treturn unit\n\t\t\t})\n\t\t\t\n\t\t\treturn units\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tstatic db_sync() {\n\t\t\t$mol_wire_solid()\n\t\t\treturn $mol_wire_sync( this ).db()\n\t\t}\n\t\t\n\t\t@ $mol_memo.method\n\t\tstatic async db() {\n\t\t\t\n\t\t\tconst urn = this.urn()\n\t\t\tif( !urn ) return null\n\t\t\t\n\t\t\tconst db = new $node.pg.Pool({\n\t\t\t\tconnectionString: urn,\n\t\t\t\tssl: { rejectUnauthorized: false },\n\t\t\t})\n\t\t\t\n\t\t\tdb.on( 'error', error => {\n\t\t\t\tthis.$.$mol_log3_fail({\n\t\t\t\t\tplace: this,\n\t\t\t\t\tmessage: error?.message,\n\t\t\t\t})\n\t\t\t} )\n\t\t\t\n\t\t\t// await db.connect()\n\t\t\t\n\t\t\tawait db.query(`\n\t\t\t\tCREATE TABLE IF NOT EXISTS Land (\n\t\t\t\t\tland varchar(17) NOT NULL,\n\t\t\t\t\tpath varchar(17) NOT NULL,\n\t\t\t\t\tunit bytea NOT NULL,\n\t\t\t\t\tprimary key( land, path )\n\t\t\t\t);\n\t\t\t`)\n\t\t\t\n\t\t\tawait db.query(`\n\t\t\t\tCREATE TABLE IF NOT EXISTS Rock (\n\t\t\t\t\thash bytea NOT NULL,\n\t\t\t\t\trock bytea NOT NULL,\n\t\t\t\t\tprimary key( hash )\n\t\t\t\t);\n\t\t\t`)\n\t\t\t\n\t\t\tthis.$.$mol_log3_rise({\n\t\t\t\tplace: this,\n\t\t\t\tmessage: 'Data Base Ready',\n\t\t\t\ttype: this.url().protocol,\n\t\t\t\thost: this.url().host,\n\t\t\t\tname: this.url().pathname,\n\t\t\t})\n\t\t\t\n\t\t\treturn db\n\t\t}\n\t\t\n\t}\n}\n","namespace $ {\n\texport class $hyoo_crus_mine_fs extends $hyoo_crus_mine {\n\t\t\n\t\t@ $mol_memo.method\n\t\tstatic root() {\n\t\t\t\n\t\t\tconst root = this.$.$mol_file.relative( '.crus' )\n\t\t\t\n\t\t\tthis.$.$mol_log3_rise({\n\t\t\t\tplace: this,\n\t\t\t\tmessage: 'File Storage Ready',\n\t\t\t\tpath: root.path()\n\t\t\t})\n\t\t\t\n\t\t\treturn root\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tstatic rock_file( hash: Uint8Array< ArrayBuffer > ) {\n\t\t\tconst id = $mol_base64_ae_encode( hash )\n\t\t\treturn this.root().resolve( `rock/${ id.slice( 0, 2 ) }/${ id }.blob` )\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tstatic rock( hash: Uint8Array< ArrayBuffer >, next?: Uint8Array< ArrayBuffer > ): Uint8Array< ArrayBuffer > | null {\n\t\t\tconst buf = this.rock_file( hash ).buffer( next )\n\t\t\tif( next ) return buf\n\t\t\tif( $mol_compare_deep( hash, this.hash( buf ) ) ) return buf\n\t\t\treturn null\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tstatic units_file( land: $hyoo_crus_ref ) { $hyoo_crus_land\n\t\t\tconst id = land.description!\n\t\t\tconst dir = this.root().resolve( `unit/${ id.slice( 0, 2 ) }` )\n\t\t\tdir.exists( true )\n\t\t\treturn dir.resolve( `${ id }.crus` )\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tstatic units_offsets( land: $hyoo_crus_ref ) {\n\t\t\t$mol_wire_solid() \n\t\t\treturn new Map< string, number >()\n\t\t}\n\t\t\n\t\tstatic units_sizes = new Map< $hyoo_crus_ref, number >()\n\t\t\n\t\tstatic units_save( land: $hyoo_crus_ref, units: readonly $hyoo_crus_unit[] ) {\n\t\t\t\n\t\t\tconst descr = this.units_file( land ).open( 'create', 'read_write' )\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tconst offsets = this.units_offsets( land )\n\t\t\t\tconst append = [] as $hyoo_crus_unit[]\n\t\t\t\t\n\t\t\t\tfor( const unit of units ) {\n\t\t\t\t\tconst off = offsets.get( unit.key() )\n\t\t\t\t\tif( off === undefined ) {\n\t\t\t\t\t\tappend.push( unit )\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdescr.write({ buffer: unit, position: off })\n\t\t\t\t\t\tthis.units_persisted.add( unit )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( !append.length ) return\n\t\t\t\t\n\t\t\t\tlet size = this.units_sizes.get( land ) ?? 0\n\t\t\t\tlet offset = size\n\t\t\t\tsize += append.length * $hyoo_crus_unit.size\n\t\t\t\tdescr.truncate(size)\n\t\t\t\tthis.units_sizes.set( land, size )\n\t\t\t\t\n\t\t\t\tfor( const unit of append ) {\n\t\t\t\t\tdescr.write({ buffer: unit, position: offset })\n\t\t\t\t\toffsets.set( unit.key(), offset )\n\t\t\t\t\tthis.units_persisted.add( unit )\n\t\t\t\t\toffset += unit.byteLength\n\t\t\t\t}\n\t\t\t\n\t\t\t} finally {\n\t\t\t\tdescr.close()\n\t\t\t}\n\t\t\t\n\t\t\treturn undefined as any\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tstatic async units_load( land: $hyoo_crus_ref ) {\n\t\t\t\n\t\t\tconst descr = this.units_file( land ).open( 'create', 'read_write' )\n\t\t\ttry {\n\t\t\t\n\t\t\t\tconst buf = descr.read()\n\t\t\t\tif( !buf.length ) return []\n\t\t\t\t\n\t\t\t\tthis.units_sizes.set( land, buf.length )\n\t\t\t\tconst pack = $hyoo_crus_pack.from( buf )\n\t\t\t\tconst { lands, rocks } = pack.parts( land )\n\t\t\t\tconst units = lands[ land ]?.units ?? []\n\t\t\t\t\n\t\t\t\tconst offsets = this.units_offsets( land )\n\t\t\t\t\n\t\t\t\tfor( let i = 0; i < units.length; ++i ) {\n\t\t\t\t\toffsets.set( units[i].key(), i * $hyoo_crus_unit.size )\n\t\t\t\t\tthis.units_persisted.add( units[i] )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn units\n\t\t\t\t\n\t\t\t} finally {\n\t\t\t\tdescr.close()\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n}\n","namespace $ {\n\t$.$hyoo_crus_mine = $hyoo_crus_mine_pg.urn() ? $hyoo_crus_mine_pg : $hyoo_crus_mine_fs\n}\n","namespace $ {\n\t\n\t/** Universal binary package which contains some Faces/Units/Rocks */\n\texport type $hyoo_crus_pack_parts = {\n\t\t\n\t\tlands: Record< $hyoo_crus_ref, {\n\t\t\tfaces: $hyoo_crus_face_map,\n\t\t\tunits: $hyoo_crus_unit[],\n\t\t} >,\n\t\t\n\t\t/** List of BLOB identified by Hash. */\n\t\trocks: [ Uint8Array, null | Uint8Array ][],\n\t\t\n\t}\n\t\n\t/** Universal binary package which contains some Faces/Units/Rocks */\n\texport class $hyoo_crus_pack extends $mol_buffer {\n\t\t\n\t\ttoBlob() {\n\t\t\treturn new Blob( [ this ], { type: 'application/vnd.hyoo_crus_pack' } )\n\t\t}\n\t\t\n\t\tparts( land = null as $hyoo_crus_ref | null ) {\n\t\t\t\n\t\t\tconst lands = {} as $hyoo_crus_pack_parts[ 'lands' ]\n\t\t\tif( land ) lands[ land ] = { faces: new $hyoo_crus_face_map, units: [] }\n\t\t\t\n\t\t\tlet total = 0\n\t\t\t\n\t\t\tconst rocks = [] as $hyoo_crus_pack_parts[ 'rocks' ]\n\t\t\t\n\t\t\tconst buf = this.asArray()\n\t\t\t\n\t\t\tfor( let offset = 0; offset < this.byteLength; ) {\n\t\t\t\t\n\t\t\t\tconst kind = this.uint8( offset )\n\t\t\t\tif( !kind ) break\n\t\t\t\t\n\t\t\t\tif( kind % 2 ) {\n\t\t\t\t\t\n\t\t\t\t\tswitch( kind ) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase $hyoo_crus_part.land: {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconst faces = new $hyoo_crus_face_map\n\t\t\t\t\t\t\tfaces.total = this.uint32( offset ) >> 8\n\t\t\t\t\t\t\toffset += 4\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tland = $hyoo_crus_ref_decode(\n\t\t\t\t\t\t\t\tnew Uint8Array( buf.buffer, buf.byteOffset + offset, 18 )\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\toffset += 20\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlands[ land ] = { faces, units: [] }\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase $hyoo_crus_part.face: {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif( !land ) $mol_fail( new Error( 'Land is undefined' ) )\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconst count = this.uint32( offset ) >> 8\n\t\t\t\t\t\t\toffset += 4\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconst faces = lands[ land ].faces\n\t\t\t\t\t\t\tfor( let i = 0; i < count; ++i ) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tconst peer = $mol_base64_ae_encode(\n\t\t\t\t\t\t\t\t\tnew Uint8Array( buf.buffer, buf.byteOffset + offset, 6 )\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tconst time = this.uint48( offset + 6 )\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tfaces.time_max( peer, time )\n\t\t\t\t\t\t\t\toffset += 12\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\toffset = Math.ceil( offset / 8 ) * 8\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase $hyoo_crus_part.pass: {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif( !land ) $mol_fail( new Error( 'Land is undefined' ) )\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconst unit = new $hyoo_crus_pass(\n\t\t\t\t\t\t\t\tbuf.slice( offset, offset += $hyoo_crus_unit.size ).buffer\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlands[ land ].units ||= []\n\t\t\t\t\t\t\tlands[ land ].units.push( unit )\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase $hyoo_crus_part.gift: {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif( !land ) $mol_fail( new Error( 'Land is undefined' ) )\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconst unit = new $hyoo_crus_gift(\n\t\t\t\t\t\t\t\tbuf.slice( offset, offset += $hyoo_crus_unit.size ).buffer\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlands[ land ].units ||= []\n\t\t\t\t\t\t\tlands[ land ].units.push( unit )\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase $hyoo_crus_part.rock: {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tconst size = this.uint32( offset ) >> 8\n\t\t\t\t\t\t\tif( size === 0 ) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tconst hash = buf.slice( offset + 4, offset + 4 + 24 )\n\t\t\t\t\t\t\t\trocks.push([ hash, null ])\n\t\t\t\t\t\t\t\toffset += 4 + 24\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tconst rock = buf.slice( offset + 4, offset + 4 + size )\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tconst hash = $mol_crypto_hash( rock )\n\t\t\t\t\t\t\t\trocks.push([ hash, rock ])\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\toffset += Math.ceil( size / 8 + .5 ) * 8\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tcase $hyoo_crus_part.root:\n\t\t\t\t\t\tcase $hyoo_crus_part.buck: {\n\t\t\t\t\t\t\toffset += 128\n\t\t\t\t\t\t\tcontinue\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tdefault: $mol_fail( new Error( `Unknown CRUS Pack Part (${ kind.toString(2) }) at (${ offset.toString(16) })` ) )\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tif( !land ) $mol_fail( new Error( 'Land is undefined' ) )\n\t\t\t\t\t\n\t\t\t\t\tconst unit = $hyoo_crus_sand.from(\n\t\t\t\t\t\tbuf.slice( offset, offset += $hyoo_crus_unit.size )\n\t\t\t\t\t)\n\t\t\t\t\t\n\t\t\t\t\tlands[ land ].units ||= []\n\t\t\t\t\tlands[ land ].units.push( unit )\n\t\t\t\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\treturn { lands, rocks }\n\t\t\t\n\t\t}\n\t\n\t\tstatic make( { lands, rocks }: $hyoo_crus_pack_parts ) {\n\t\t\t\n\t\t\tlet size = 0\n\t\t\t\n\t\t\tfor( const land of Reflect.ownKeys( lands ) as $hyoo_crus_ref[] ) {\n\t\t\t\tsize += 24\n\t\t\t\t// if( lands[ land ].faces.size ) {\n\t\t\t\t\tsize += Math.ceil( lands[ land ].faces.size * 12 / 8 + .5 ) * 8\n\t\t\t\t// }\n\t\t\t\tsize += lands[ land ].units.length * $hyoo_crus_unit.size\n\t\t\t}\n\t\t\t\n\t\t\tfor( const [ hash, rock ] of rocks ) {\n\t\t\t\tsize += rock ? Math.ceil( rock.length / 8 + .5 ) * 8 : 24\n\t\t\t}\n\t\t\t\n\t\t\tif( size === 0 ) return null!\n\t\t\t\n\t\t\tconst buff = new Uint8Array( size )\n\t\t\tconst pack = new $hyoo_crus_pack( buff.buffer )\n\t\t\t\n\t\t\tlet offset = 0\n\t\t\t\n\t\t\tfor( const land of Reflect.ownKeys( lands ) as $hyoo_crus_ref[] ) {\n\t\t\t\t\n\t\t\t\tconst faces = lands[ land ].faces\n\t\t\t\t\n\t\t\t\tpack.uint32( offset, $hyoo_crus_part.land | ( faces.total << 8 ) )\n\t\t\t\tbuff.set( $hyoo_crus_ref_encode( land ), offset + 4 )\n\t\t\t\toffset += 24\n\t\t\t\t\n\t\t\t\t// if( !faces.size ) continue\n\t\t\t\t\n\t\t\t\tpack.uint32( offset, $hyoo_crus_part.face | ( faces.size << 8 ) )\n\t\t\t\toffset += 4\n\t\t\t\tfor( const [ peer, time ] of faces ) {\n\t\t\t\t\tbuff.set( $mol_base64_ae_decode( peer ), offset )\n\t\t\t\t\tpack.uint48( offset + 6, time )\n\t\t\t\t\toffset += 12\n\t\t\t\t}\n\t\t\t\toffset = Math.ceil( offset / 8 ) * 8\n\t\t\t\t\n\t\t\t\tfor( const unit of lands[ land ].units ) {\n\t\t\t\t\tbuff.set( unit.asArray(), offset )\n\t\t\t\t\toffset += unit.byteLength\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tfor( const [ hash, rock ] of rocks ) {\n\t\t\t\t\n\t\t\t\tconst len = rock?.length ?? 0\n\t\t\t\tpack.uint32( offset, $hyoo_crus_part.rock | ( len << 8 ) )\n\t\t\t\t\n\t\t\t\tif( rock ) buff.set( rock, offset + 4 )\n\t\t\t\telse buff.set( hash, offset + 4 )\n\t\t\t\n\t\t\t\toffset += rock ? Math.ceil( len / 8 + .5 ) * 8 : 24\n\t\t\t}\n\t\t\t\n\t\t\treturn pack\n\t\t}\n\t\t\n\t}\n\t\n\t\n\t\n}\n","namespace $ {\n\t\n\tconst Passives = new WeakMap< $mol_rest_port, Set< $hyoo_crus_ref > >()\n\t\n\t/** Glob synchronizer */\n\texport class $hyoo_crus_yard extends $mol_object {\n\t\t\n\t\t/** Whole global graph database which contains Lands */\n\t\t@ $mol_mem\n\t\tglob() {\n\t\t\treturn null! as $hyoo_crus_glob\n\t\t}\n\t\t\n\t\tlands_news = new $mol_wire_set< $hyoo_crus_ref >()\n\t\t\n\t\tstatic masters = [] as string[]\n\t\t\n\t\t@ $mol_mem\n\t\tmaster_cursor( next = 0 ) {\n\t\t\treturn next\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tmaster_current() {\n\t\t\treturn this.$.$hyoo_crus_yard.masters[ this.master_cursor() ]\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tmaster_next() {\n\t\t\tthis.master_cursor( ( this.master_cursor() + 1 ) % this.$.$hyoo_crus_yard.masters.length )\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\treconnects( reset?: null ): number {\n\t\t\treturn ( $mol_wire_probe( ()=> this.reconnects() ) ?? 0 ) + 1\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tmaster() {\n\t\t\t\n\t\t\tthis.reconnects()\n\t\t\t\n\t\t\tconst link = this.master_current()\n\t\t\tif( !link ) return null\n\t\t\t\n\t\t\tconst socket = new $mol_dom_context.WebSocket( link.replace( /^http/, 'ws' ) )\n\t\t\tsocket.binaryType = 'arraybuffer'\n\t\t\tconst port = $mol_rest_port_ws_std.make({ socket })\n\t\t\t\n\t\t\tsocket.onmessage = async( event )=> {\n\t\t\t\t\n\t\t\t\tif( event.data instanceof ArrayBuffer ) {\n\t\t\t\t\tif( !event.data.byteLength ) return\n\t\t\t\t\tawait $mol_wire_async( this ).port_income( port, new Uint8Array( event.data ) )\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tthis.$.$mol_log3_fail({\t\n\t\t\t\t\t\tplace: this,\n\t\t\t\t\t\tmessage: 'Wrong data',\n\t\t\t\t\t\tdata: event.data\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tlet interval: any\n\n\t\t\tsocket.onclose = ()=> {\n\t\t\t\tclearInterval( interval )\n\t\t\t\tsetTimeout( ()=> this.reconnects( null ), 1000 )\n\t\t\t}\n\t\t\t\n\t\t\tObject.assign( socket, {\n\t\t\t\tdestructor: ()=> {\n\t\t\t\t\tsocket.onclose = ()=> {}\n\t\t\t\t\tclearInterval( interval )\n\t\t\t\t\tsocket.close()\n\t\t\t\t}\n\t\t\t} )\n\t\t\t\n\t\t\treturn new Promise< $mol_rest_port >( ( done, fail )=> {\n\t\t\t\t\n\t\t\t\tsocket.onopen = ()=> {\n\t\t\t\t\t\n\t\t\t\t\tthis.$.$mol_log3_come({\n\t\t\t\t\t\tplace: this,\n\t\t\t\t\t\tmessage: 'Connected',\n\t\t\t\t\t\tport: $mol_key( port ),\n\t\t\t\t\t\tserver: link,\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t\tinterval = setInterval( ()=> socket.send( new Uint8Array ), 30000 )\n\t\t\t\t\t\n\t\t\t\t\tdone( port )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tsocket.onerror = ()=> {\n\t\t\t\t\t\n\t\t\t\t\tsocket.onclose = event => {\n\t\t\t\t\t\tfail( new Error( `Master (${link}) is unavailable (${ event.code })` ) )\n\t\t\t\t\t\tclearInterval( interval )\n\t\t\t\t\t\tinterval = setTimeout( ()=> {\n\t\t\t\t\t\t\tthis.master_next()\n\t\t\t\t\t\t\tthis.reconnects( null )\n\t\t\t\t\t\t}, 1000 )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} ) as any as $mol_rest_port\n\t\t\t\n\t\t}\n\t\t\n\t\tslaves = new $mol_wire_set< $mol_rest_port >()\n\t\t\n\t\t@ $mol_mem\n\t\tsync() {\n\t\t\tthis.sync_news()\n\t\t\tthis.sync_port()\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tsync_news() {\n\t\t\t\n\t\t\tconst glob = this.$.$hyoo_crus_glob\n\t\t\tconst lands = [ ... this.lands_news ].map( ref =>  glob.Land( ref ) )\n\t\t\t\n\t\t\ttry {\n\t\t\t\tfor( const port of this.masters() ) {\n\t\t\t\t\tfor( const land of lands ) {\n\t\t\t\t\t\tthis.sync_port_land([ port, land.ref() ])\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor( const land of lands ) land.saving()\n\t\t\t\tthis.lands_news.clear()\n\t\t\t} catch( error ) {\n\t\t\t\t$mol_fail_log( error )\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tsync_port() {\n\t\t\tfor( const port of this.ports() ) this.sync_port_lands( port )\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tsync_port_lands( port: $mol_rest_port ) {\n\t\t\tfor( const land of this.port_lands_active( port ) ) {\n\t\t\t\tthis.sync_port_land([ port, land ])\n\t\t\t}\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tports() {\n\t\t\treturn [ ... this.masters(), ... this.slaves ]\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tmasters() {\n\t\t\ttry {\n\t\t\t\treturn [ this.master() ].filter( $mol_guard_defined )\n\t\t\t} catch( error ) {\n\t\t\t\t$mol_fail_log( error )\n\t\t\t\treturn []\n\t\t\t}\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tport_lands_active( port: $mol_rest_port ) {\n\t\t\treturn new $mol_wire_set< $hyoo_crus_ref >()\n\t\t}\n\t\t\n\t\tport_lands_passive( port: $mol_rest_port ) {\n\t\t\tlet passives = Passives.get( port )\n\t\t\tif( !passives ) Passives.set( port, passives = new Set )\n\t\t\treturn passives\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tport_income( port: $mol_rest_port, msg: Uint8Array< ArrayBuffer > ) {\n\t\t\t\n\t\t\tconst pack = $mol_wire_sync( $hyoo_crus_pack ).from( msg ) as $hyoo_crus_pack\n\t\t\tconst parts =  $mol_wire_sync( pack ).parts()\n\t\t\t\n\t\t\tif( this.$.$hyoo_crus_log() ) $mol_wire_sync( this.$ ).$mol_log3_rise({\n\t\t\t\tplace: this,\n\t\t\t\tmessage: 'Gain Pack',\n\t\t\t\tport: $mol_key( port ),\n\t\t\t\tlands: parts.lands,\n\t\t\t\trocks: parts.rocks.length,\n\t\t\t})\n\t\t\t\n\t\t\tforget: {\n\t\t\t\t\n\t\t\t\tif( parts.rocks.length ) break forget\n\t\t\t\t\n\t\t\t\tconst lands = Object.getOwnPropertySymbols( parts.lands ) as any as readonly $hyoo_crus_ref[]\n\t\t\t\tfor( const land of lands ) {\n\t\t\t\t\t\n\t\t\t\t\tif( parts.lands[ land ].units.length ) break forget\n\t\t\t\t\tif( parts.lands[ land ].faces.size ) break forget\n\t\t\t\t\tif( !this.port_lands_active( port ).has( land ) ) break forget\n\t\t\t\t\t\n\t\t\t\t\tthis.port_lands_active( port ).delete( land )\n\t\t\t\t\treturn\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tthis.face_port_sync( port, parts.lands )\n\t\t\tthis.$.$hyoo_crus_glob.apply_parts( parts.lands, parts.rocks )\n\t\t\t\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tface_port_sync(\n\t\t\tport: $mol_rest_port,\n\t\t\tincome: Record< $hyoo_crus_ref, {\n\t\t\t\tfaces: $hyoo_crus_face_map\n\t\t\t\tunits: $hyoo_crus_unit[]\n\t\t\t}>, \n\t\t) {\n\t\t\t\n\t\t\tconst actives = this.port_lands_active( port )\n\t\t\tconst passives = this.port_lands_passive( port )\n\t\t\t\n\t\t\tfor( const land of Reflect.ownKeys( income ) as $hyoo_crus_ref[] ) {\n\t\t\t\t\n\t\t\t\tif( !passives.has( land ) ) actives.add( land )\n\t\t\t\t\n\t\t\t\tconst faces = income[ land ].faces\n\t\t\t\tlet port_faces = this.face_port_land([ port, land ])\n\t\t\t\t\n\t\t\t\tif( !port_faces ) this.face_port_land(\n\t\t\t\t\t[ port, land ],\n\t\t\t\t\tport_faces = $mol_mem_cached( ()=> this.face_port_land([ port, land ]) )\n\t\t\t\t\t\t|| new $hyoo_crus_face_map,\n\t\t\t\t)\n\t\t\t\tport_faces.sync( faces )\n\t\t\t\n\t\t\t\tconst units = income[ land ].units\n\t\t\t\tfor( let unit of units ) {\n\t\t\t\t\tconst unit2 = unit.narrow()\n\t\t\t\t\tif( unit2 instanceof $hyoo_crus_pass ) continue\n\t\t\t\t\tport_faces.time_max( unit2.peer(), unit2.time() )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tsync_land( land: $hyoo_crus_ref ) {\n\t\t\tfor( const port of this.masters() ) {\n\t\t\t\tthis.port_lands_passive( port ).add( land )\n\t\t\t\tthis.sync_port_land([ port, land ])\n\t\t\t}\n\t\t\tthis.sync()\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tforget_land( land: $hyoo_crus_land ) {\n\t\t\t\n\t\t\tconst faces = new $hyoo_crus_face_map\n\t\t\tfaces.total = land.faces.total\n\t\t\t\n\t\t\tconst pack = $hyoo_crus_pack.make({\n\t\t\t\tlands: { [ land.ref() ]: { faces, units: [] } },\n\t\t\t\trocks:[],\n\t\t\t}).asArray()\n\t\t\t\n\t\t\tfor( const port of this.ports() ) {\n\t\t\t\t\n\t\t\t\tif( !this.port_lands_passive( port ).has( land.ref() ) ) continue\n\t\t\t\tthis.port_lands_passive( port ).delete( land.ref() )\n\t\t\t\t\n\t\t\t\tif( this.$.$hyoo_crus_log() ) this.$.$mol_log3_rise({\n\t\t\t\t\tplace: this,\n\t\t\t\t\tmessage: 'Forget Land',\n\t\t\t\t\tport: $mol_key( port ),\n\t\t\t\t\tland: land.ref(),\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tport.send_bin( pack )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tsync_port_land( [ port, land ]: [ $mol_rest_port, $hyoo_crus_ref ] ) {\n\t\t\t\n\t\t\ttry {\n\t\t\t\n\t\t\t\tthis.init_port_land([ port, land ])\n\t\t\t\t\n\t\t\t\tconst faces = this.face_port_land([ port, land ])\n\t\t\t\tif( !faces ) return\n\t\t\t\t\n\t\t\t\tconst Land = this.$.$hyoo_crus_glob.Land( land )\n\t\t\t\tLand.saving()\n\t\t\t\t\n\t\t\t\tconst parts = Land.delta_parts( faces )\n\t\t\t\tif( !parts ) return\n\t\t\t\t\n\t\t\t\tif( this.$.$hyoo_crus_log() ) this.$.$mol_log3_rise({\n\t\t\t\t\tplace: this,\n\t\t\t\t\tmessage: 'Send Unit',\n\t\t\t\t\tport: $mol_key( port ),\n\t\t\t\t\tlands: parts.lands,\n\t\t\t\t\trocks: parts.rocks.length,\n\t\t\t\t})\n\t\t\t\t\n\t\t\t\tport.send_bin( $hyoo_crus_pack.make( parts ).asArray() )\n\t\t\t\tfaces.sync( Land.faces )\n\t\t\t\n\t\t\t} catch( error ) {\n\t\t\t\t$mol_fail_log( error )\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tinit_port_land( [ port, land ]: [ $mol_rest_port, $hyoo_crus_ref ] ) {\n\t\t\t// $mol_wire_solid() \n\t\t\tconst Land = this.$.$hyoo_crus_glob.Land( land )\n\t\t\tLand.loading()\n\t\t\tif( this.$.$hyoo_crus_log() ) this.$.$mol_log3_rise({\n\t\t\t\tplace: this,\n\t\t\t\tmessage: 'Send Face',\n\t\t\t\tport: $mol_key( port ),\n\t\t\t\tland: land,\n\t\t\t\tfaces: Land.faces,\n\t\t\t})\n\t\t\tport.send_bin( Land.faces_pack().asArray() )\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tface_port_land(\n\t\t\t[ port, land ]: [ $mol_rest_port, $hyoo_crus_ref ],\n\t\t\tnext = null as null | $hyoo_crus_face_map\n\t\t) {\n\t\t\t$mol_wire_solid()\n\t\t\treturn next\n\t\t}\n\t\t\n\t}\n}\n","namespace $ {\n\t/** Whole global graph database which contains Lands. */\n\texport class $hyoo_crus_glob extends $mol_object {\n\t\t\n\t\tstatic lands_touched = new $mol_wire_set< $hyoo_crus_ref >()\n\t\t/** @deprecated Use `this.$.$hyoo_crus_glob` */\n\t\tlands_touched = ( this.constructor as typeof $hyoo_crus_glob ).lands_touched\n\t\t\n\t\t/** Glob synchronizer. */\n\t\t@ $mol_mem\n\t\tstatic yard() {\n\t\t\treturn new this.$.$hyoo_crus_yard\n\t\t}\n\t\t\n\t\t/** @deprecated Use `this.$.$hyoo_crus_glob` */\n\t\tyard() {\n\t\t\treturn this.$.$hyoo_crus_glob.yard()\n\t\t}\n\t\t\n\t\t/** Land where Lord is King. Contains only ain info */\n\t\tstatic home< Node extends typeof $hyoo_crus_home = typeof $hyoo_crus_home >( Node?: Node ) {\n\t\t\treturn this.Land( this.$.$hyoo_crus_auth.current().lord() ).Data( Node ?? $hyoo_crus_home ) as InstanceType< Node >\n\t\t}\n\t\t\n\t\t/** @deprecated Use `this.$.$hyoo_crus_glob` */\n\t\thome() {\n\t\t\treturn this.$.$hyoo_crus_glob.home()\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tstatic king_grab( preset : $hyoo_crus_rank_preset = { '': $hyoo_crus_rank_read } ) {\n\t\t\t\n\t\t\tconst king = this.$.$hyoo_crus_auth.grab()\n\t\t\tconst colony = ( $mol_wire_sync( $hyoo_crus_land ) as typeof $hyoo_crus_land ).make({ $: this.$ })\n\t\t\tcolony.auth = $mol_const( king )\n\t\t\t\n\t\t\tif( ( preset[''] ?? $hyoo_crus_rank_deny ) === $hyoo_crus_rank_deny ) {\n\t\t\t\tcolony.encrypted( true )\n\t\t\t}\n\t\t\t\n\t\t\tconst self = this.$.$hyoo_crus_auth.current()\n\t\t\tcolony.give( self, $hyoo_crus_rank_rule )\n\t\t\t\n\t\t\tfor( const key in preset ) colony.give( key ? $hyoo_crus_auth.from( key ) : null, preset[ key ] )\n\t\t\t\n\t\t\tthis.Land( colony.ref() ).apply_unit( colony.delta_unit() )\n\t\t\t\n\t\t\treturn king\n\t\t}\n\t\t\n\t\t/** @deprecated Use `this.$.$hyoo_crus_glob` */\n\t\tking_grab( preset : $hyoo_crus_rank_preset = { '': $hyoo_crus_rank_read } ) {\n\t\t\treturn this.$.$hyoo_crus_glob.king_grab( preset )\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tstatic land_grab( preset : $hyoo_crus_rank_preset = { '': $hyoo_crus_rank_read } ) {\n\t\t\treturn this.Land( this.king_grab( preset ).lord() )\n\t\t}\n\t\t\n\t\t/** @deprecated Use `this.$.$hyoo_crus_glob` */\n\t\tland_grab( preset : $hyoo_crus_rank_preset = { '': $hyoo_crus_rank_read } ) {\n\t\t\treturn this.$.$hyoo_crus_glob.land_grab( preset )\n\t\t}\n\t\t\n\t\t/** Standalone part of Glob which syncs separately, have own rights, and contains Units */\n\t\t@ $mol_mem_key\n\t\tstatic Land( ref: $hyoo_crus_ref ): $hyoo_crus_land {\n\t\t\tthis.lands_touched.add( ref )\n\t\t\treturn $hyoo_crus_land.make({\n\t\t\t\tref: $mol_const( ref ),\n\t\t\t})\n\t\t}\n\t\t\n\t\t/** @deprecated Use `this.$.$hyoo_crus_glob` */\n\t\tLand( ref: $hyoo_crus_ref ) {\n\t\t\treturn this.$.$hyoo_crus_glob.Land( ref )\n\t\t}\n\t\t\n\t\t/** High level representation of stored data. */\n\t\tstatic Node< Node extends typeof $hyoo_crus_node > ( ref: $hyoo_crus_ref, Node: Node ) {\n\t\t\tconst land = this.Land( $hyoo_crus_ref_land( ref ) )\n\t\t\treturn land.Node( Node ).Item( $hyoo_crus_ref_head( ref ) )\n\t\t}\n\t\t\n\t\t/** @deprecated Use `this.$.$hyoo_crus_glob` */\n\t\tNode< Node extends typeof $hyoo_crus_node > ( ref: $hyoo_crus_ref, Node: Node ) {\n\t\t\treturn this.$.$hyoo_crus_glob.Node( ref, Node )\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tstatic apply_pack( pack: $hyoo_crus_pack ) {\n\t\t\tconst { lands, rocks } = pack.parts()\n\t\t\treturn this.apply_parts( lands, rocks )\n\t\t}\n\t\t\n\t\t/** @deprecated Use `this.$.$hyoo_crus_glob` */\n\t\tapply_pack( pack: $hyoo_crus_pack ) {\n\t\t\treturn this.$.$hyoo_crus_glob.apply_pack( pack )\n\t\t}\n\t\t\n\t\t@ $mol_action\n\t\tstatic apply_parts(\n\t\t\tlands: Record< $hyoo_crus_ref, {\n\t\t\t\tfaces: $hyoo_crus_face_map\n\t\t\t\tunits: $hyoo_crus_unit[]\n\t\t\t}>,\n\t\t\trocks: [ Uint8Array, Uint8Array | null ][],\n\t\t) {\n\t\t\t\n\t\t\tfor( const land of Reflect.ownKeys( lands ) as $hyoo_crus_ref[] ) {\n\t\t\t\t\n\t\t\t\tconst errors = this.Land( land ).apply_unit( lands[ land ].units ).filter( Boolean )\n\t\t\t\t\n\t\t\t\tfor( const error of errors ) this.$.$mol_log3_warn({\n\t\t\t\t\tplace: `${this}.apply_pack()`,\n\t\t\t\t\tmessage: error,\n\t\t\t\t\thint: 'Send it to developer',\n\t\t\t\t})\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tfor( const [ hash, rock ] of rocks ) {\n\t\t\t\tif( !rock ) continue\n\t\t\t\tthis.$.$hyoo_crus_mine.rock_save( rock )\n\t\t\t}\n\n\t\t}\n\t\t\n\t\t/** @deprecated Use `this.$.$hyoo_crus_glob` */\n\t\tapply_parts(\n\t\t\tlands: Record< $hyoo_crus_ref, {\n\t\t\t\tfaces: $hyoo_crus_face_map\n\t\t\t\tunits: $hyoo_crus_unit[]\n\t\t\t}>,\n\t\t\trocks: [ Uint8Array, Uint8Array | null ][],\n\t\t) {\n\t\t\treturn this.$.$hyoo_crus_glob.apply_parts( lands, rocks )\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport class $hyoo_crus_stat_series extends $hyoo_crus_dict_to( $hyoo_crus_atom_real ) {\n\t\t\n\t\t@ $mol_action\n\t\ttick( key: bigint, val: number ) {\n\t\t\tthis.key( key, null ).val( this.initial() + val )\n\t\t}\n\t\t\n\t\t_initial!: number\n\t\t@ $mol_action\n\t\tinitial() {\n\t\t\treturn this._initial\n\t\t\t\t?? ( this._initial = this.max() )\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tmax() {\n\t\t\treturn Math.max( ... this.values() )\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tvalues() {\n\t\t\treturn this.nodes( $hyoo_crus_atom_real ).map( key => key.val()! )\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\n\texport class $hyoo_crus_stat_ranges extends $hyoo_crus_dict.with({\n\t\tSeconds: $hyoo_crus_stat_series,\n\t\tMinutes: $hyoo_crus_stat_series,\n\t\tHours: $hyoo_crus_stat_series,\n\t\tDays: $hyoo_crus_stat_series,\n\t\tYears: $hyoo_crus_stat_series,\n\t}) {\n\t\t\n\t\t_last_instant = 0\n\t\ttick_instant( val: number ) {\n\t\t\tthis.tick_integral( this._last_instant += val )\n\t\t}\n\t\t\n\t\ttick_integral( val: number ) {\n\t\t\t\n\t\t\tlet now = new $mol_time_moment\n\t\t\t\n\t\t\tconst second = BigInt( Math.floor( now.second! ) )\n\t\t\tconst minute = BigInt( now.minute! )\n\t\t\tconst hour = BigInt( now.hour! )\n\t\t\tconst from_ny = new $mol_time_interval({ start: { year: now.year, month: 0, day: 0 }, end: now })\n\t\t\tconst day = BigInt( Math.floor( from_ny.duration.count( 'P1D' ) ) )\n\t\t\tconst year = BigInt( now.year! )\n\t\t\t\n\t\t\tthis.Seconds( null )!.tick( second, val )\n\t\t\tthis.Minutes( null )!.tick( minute, val )\n\t\t\tthis.Hours( null )!.tick( hour, val )\n\t\t\tthis.Days( null )!.tick( day, val )\n\t\t\tthis.Years( null )!.tick( year, val )\n\t\t\t\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tseries() {\n\t\t\t\n\t\t\tfunction pick( Series: $hyoo_crus_stat_series, length: number, range: number ) {\n\t\t\t\t\n\t\t\t\tlet series = Array.from( { length }, ( _, i )=> Series.key( BigInt( i ) )?.val() ?? 0 )\n\t\t\t\t\n\t\t\t\tlet start = 0\n\t\t\t\tlet max = 0\n\t\t\t\t\n\t\t\t\tfor( let i = 0; i < series.length; ++i ) {\n\t\t\t\t\tif( series[i] < max ) continue\n\t\t\t\t\tmax = series[i]\n\t\t\t\t\tstart = i + 1\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif( start ) series = [ ... series.slice( start ), ... series.slice( 0, start - 1 ) ]\n\t\t\t\t\n\t\t\t\tlet last = series[0]\n\t\t\t\t\n\t\t\t\tseries = series.slice(1).map( val => {\n\t\t\t\t\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\n\t\t\t\t\t\tif( last === 0 || val < last ) return 0\n\t\t\t\t\t\treturn ( val - last ) / range\n\t\t\t\t\t\t\n\t\t\t\t\t} finally {\n\t\t\t\t\t\tlast = Math.max( val, last )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t} )\n\t\t\t\t\n\t\t\t\treturn series\n\t\t\t}\n\t\t\t\n\t\t\tlet days = pick( this.Days()!, 365, 60 * 60 * 24 )\n\t\t\tlet hours = pick( this.Hours()!, 24, 60 * 60 )\n\t\t\tlet minutes = pick( this.Minutes()!, 60, 60 )\n\t\t\tlet seconds = pick( this.Seconds()!, 60, 1 )\n\t\t\t\n\t\t\treturn [ ... days, ... hours, ... minutes, ... seconds ].reverse()\n\t\t}\n\n\t}\n\t\n}\n","namespace $ {\n\t\n\t/** State of time moment */\n\texport class $mol_state_time extends $mol_object {\n\t\t\n\t\t@ $mol_mem_key\n\t\tstatic task( precision: number, reset?: null ): $mol_after_timeout | $mol_after_frame {\n\t\t\t\n\t\t\tif( precision ) {\n\t\t\t\treturn new $mol_after_timeout( precision, ()=> this.task( precision, null ) )\n\t\t\t} else {\n\t\t\t\treturn new $mol_after_frame( ()=> this.task( precision, null ) )\n\t\t\t}\n\t\t\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tstatic now( precision: number ) {\n\t\t\tthis.task( precision )\n\t\t\treturn Date.now()\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport class $hyoo_crus_app_stat extends $hyoo_crus_dict.with({\n\t\t\n\t\tUptime: $hyoo_crus_atom_dur,\n\t\t\n\t\t/** User time in secs */\n\t\tCpu_user: $hyoo_crus_stat_ranges,\n\t\t/** System time in secs */\n\t\tCpu_system: $hyoo_crus_stat_ranges,\n\t\t\n\t\t/** Memory in MB */\n\t\tMem_used: $hyoo_crus_stat_ranges,\n\t\t/** Memory in MB */\n\t\tMem_free: $hyoo_crus_stat_ranges,\n\t\t\n\t\t/** FS free */\n\t\tFs_free: $hyoo_crus_stat_ranges,\n\t\t\n\t\t/** FS read count */\n\t\tFs_reads: $hyoo_crus_stat_ranges,\n\t\t/** FS write count */\n\t\tFs_writes: $hyoo_crus_stat_ranges,\n\t\t\n\t\t/** Slave sockets count */\n\t\tPort_slaves: $hyoo_crus_stat_ranges,\n\t\t/** Masters sockets count */\n\t\tPort_masters: $hyoo_crus_stat_ranges,\n\t\t\n\t}) {\n\n\t\t@ $mol_mem\n\t\tfreshness() {\n\t\t\t\n\t\t\tconst last = this.last_change()\n\t\t\tif( !last ) return null\n\t\t\t\n\t\t\tconst range = new $mol_time_interval({\n\t\t\t\tstart: last,\n\t\t\t\tend: new $mol_time_moment( this.$.$mol_state_time.now( 1000 ) ),\n\t\t\t})\n\t\t\t\n\t\t\treturn range.duration.count( 'PT1s' )\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tuptime( next?: $mol_time_duration ) {\n\t\t\treturn this.Uptime( next )?.val( next ) ?? new $mol_time_duration( 0 )\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\ttick() {\n\t\t\t\n\t\t\tthis.$.$mol_state_time.now( 1000 )\n\t\t\t\n\t\t\tthis.uptime( new $mol_time_duration({ second: Math.floor( process.uptime() ) }).normal )\n\t\t\t\n\t\t\tconst res = process.resourceUsage()\n\t\t\tthis.Cpu_user( null )!.tick_integral( res.userCPUTime / 1e6 ) // s\n\t\t\tthis.Cpu_system( null )!.tick_integral( res.systemCPUTime / 1e6 ) // s\n\t\t\tthis.Fs_reads( null )!.tick_integral( res.fsRead ) // pct\n\t\t\tthis.Fs_writes( null )!.tick_integral( res.fsWrite ) // pct\n\t\t\t\n\t\t\tconst mem_total = $node.os.totalmem()\n\t\t\tthis.Mem_used( null )!.tick_instant( ( res.maxRSS - res.sharedMemorySize ) * 1024 / mem_total * 100 ) // %\n\t\t\tthis.Mem_free( null )!.tick_instant( $node.os.freemem() / mem_total * 100 ) // %\n\t\t\t\n\t\t\tconst fs = $node.fs.statfsSync( '.' )\n\t\t\tthis.Fs_free( null )!.tick_instant( Number( fs.bfree ) / Number( fs.blocks ) * 100 ) // %\n\t\t\t\n\t\t\tconst masters = $mol_wire_sync( this.$.$hyoo_crus_glob.yard() ).masters().length\n\t\t\tthis.Port_masters( null )!.tick_instant( masters ) // pct\n\t\t\t\n\t\t\tconst slaves = $mol_wire_sync( this.$.$hyoo_crus_glob.yard() ).ports().length - masters\n\t\t\tthis.Port_slaves( null )!.tick_instant( slaves ) // pct\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport class $hyoo_crus_app_home extends $hyoo_crus_home.with({\n\t\tAliases: $hyoo_crus_dict_to( $hyoo_crus_list_str ),\n\t\tStat: $hyoo_crus_atom_ref_to( ()=> $hyoo_crus_app_stat ),\n\t}) {\n\t\t\n\t\tstat( auto?: any ) {\n\t\t\treturn this.Stat( auto )?.ensure( this.land() ) ?? null\n\t\t}\n\t\t\n\t\tinit() {}\n\t\ttick() {}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\texport class $hyoo_crus_app_home_node extends $hyoo_crus_app_home {\n\t\t\n\t\t@ $mol_mem\n\t\tinit() {\n\t\t\t\n\t\t\tthis.title( process.env.DOMAIN || $node.os.hostname() )\n\t\t\t\n\t\t\tconst source = this.aliases()\n\t\t\tconst target = this.Aliases(null)!\n\t\t\t\n\t\t\tfor( const ip of target.keys().map( $hyoo_crus_vary_cast_str ) ) {\n\t\t\t\tif( !ip || !source.has( ip ) ) target.cut( ip )\n\t\t\t}\n\t\t\t\n\t\t\tfor( const [ ip, names ] of source ) {\n\t\t\t\ttarget.key( ip, null ).items( names )\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tips() {\n\t\t\tconst ips = [] as string[]\n\t\t\tfor( const group of Object.values( $node.os.networkInterfaces() ) ) {\n\t\t\t\tfor( const face of group! ) {\n\t\t\t\t\tif( face.internal ) continue\n\t\t\t\t\tips.push( face.address )\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ips\n\t\t}\n\t\t\n\t\tasync lookup( ip: string ) {\n\t\t\ttry {\n\t\t\t\treturn await $node.dns.promises.reverse( ip )\n\t\t\t} catch( error ) {\n\t\t\t\t$mol_fail_log( error )\n\t\t\t\treturn []\n\t\t\t}\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\taliases() {\n\t\t\tconst self = $mol_wire_sync( this )\n\t\t\treturn new Map( this.ips().map( ip => [ ip, self.lookup( ip ) ] ) )\n\t\t}\n\t\t\n\t}\n\t\n\t$.$hyoo_crus_app_home = $hyoo_crus_app_home_node\n\t\n}\n","namespace $ {\n\t\n\texport class $hyoo_crus_app_node extends $mol_rest_resource_fs {\n\t\t\n\t\t@ $mol_mem\n\t\t_yard() {\n\t\t\t$mol_wire_solid()\n\t\t\tsetTimeout( ()=> this._sync() )\n\t\t\treturn this.$.$hyoo_crus_glob.yard()\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\t_sync() {\n\t\t\t$mol_wire_solid()\n\t\t\tthis._yard().sync()\n\t\t}\n\t\t\n\t\t@ $mol_memo.method\n\t\tref() {\n\t\t\treturn new $hyoo_crus_app_node_ref\n\t\t}\n\t\t\n\t\tOPEN( msg: $mol_rest_message ) {\n\t\t\tthis._yard().slaves.add( msg.port )\n\t\t}\n\t\t\n\t\tPOST( msg: $mol_rest_message ) {\n\t\t\tthis._yard().port_income( msg.port, msg.bin() )\n\t\t}\n\t\t\n\t\tCLOSE( msg: $mol_rest_message ) {\n\t\t\tthis._yard().slaves.delete( msg.port )\n\t\t}\n\t\t\n\t\t_auto() {\n\t\t\tthis._stat_update()\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\t_stat_update() {\n\t\t\t\n\t\t\tconst home = this.$.$hyoo_crus_glob.home( $hyoo_crus_app_home )\n\t\t\thome.init()\n\t\t\thome.tick()\n\t\t\t\n\t\t\tconst stat = home.stat( null )!\n\t\t\tstat.tick()\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\texport class $hyoo_crus_app_node_ref extends $mol_rest_resource {\n\t\t\n\t\tGET( msg: $mol_rest_message ) {\n\t\t\tmsg.reply( this.$.$hyoo_crus_auth.current().lord().description! )\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t$hyoo_crus_yard.masters = $mol_state_arg.value( 'masters' )?.split( ',' ) ?? []\n\t$hyoo_crus_app_node.serve()\n}\n","namespace $ {\n\n\texport function $mol_test( set : { [ name : string ] : string | ( ( context : $ )=> void ) } ) {\n\t\t\n\t\tfor( let name in set ) {\n\n\t\t\tconst code = set[ name ]\n\t\t\tconst test = ( typeof code === 'string' ) ? new Function( '' , code ) as ()=> void : code\n\t\t\t\n\t\t\t$mol_test_all.push( test )\n\t\t}\n\n\t\t$mol_test_schedule()\n\t}\n\n\texport let $mol_test_mocks = [] as Array< ( context : $ )=> void >\n\n\texport const $mol_test_all = [] as Array< ( context : $ )=> any >\n\n\texport async function $mol_test_run() {\n\n\t\tfor( var test of $mol_test_all ) {\n\n\t\t\tlet context = Object.create( $$ )\n\t\t\tfor( let mock of $mol_test_mocks ) await mock( context )\n\t\t\t\n\t\t\tconst res = test( context )\n\t\t\tif( $mol_promise_like( res ) ) {\n\t\t\t\tawait new Promise( ( done, fail )=> {\n\t\t\t\t\tres.then( done, fail )\n\t\t\t\t\tsetTimeout( ()=> fail( new Error( 'Test timeout: ' + test.name ) ), 1000 )\n\t\t\t\t} )\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t\t$$.$mol_log3_done({\n\t\t\tplace: '$mol_test',\n\t\t\tmessage: 'All tests passed',\n\t\t\tcount: $mol_test_all.length,\n\t\t})\n\t\t\n\t}\n\t\n\tlet scheduled = false\n\texport function $mol_test_schedule() {\n\n\t\tif( scheduled ) return\n\t\tscheduled = true\n\n\t\tsetTimeout( async ()=> {\n\t\t\t\n\t\t\tscheduled = false\n \t\t\t\n\t\t\tawait $mol_test_run()\n\t\t\t$$.$mol_test_complete()\n\t\t\t\n\t\t} , 1000 )\n\t\t\n\t}\n\n\t$mol_test_mocks.push( context => {\n\t\tlet seed = 0\n\n\t\tcontext.Math = Object.create( Math )\n\t\tcontext.Math.random = ()=> Math.sin( seed++ )\n\n\t\tconst forbidden = [ 'XMLHttpRequest' , 'fetch' ] as const\n\n\t\tfor( let api of forbidden ) {\n\t\t\tcontext[ api ] = new Proxy( function(){} as any , {\n\t\t\t\tget() {\n\t\t\t\t\t$mol_fail_hidden( new Error( `${ api } is forbidden in tests` ) )\n\t\t\t\t} ,\n\t\t\t\tapply() {\n\t\t\t\t\t$mol_fail_hidden( new Error( `${ api } is forbidden in tests` ) )\n\t\t\t\t} ,\n\t\t\t} )\n\t\t}\n\t\t\n\t} )\n\n\t$mol_test({\n\n\t\t'mocked Math.random'( $ ) {\n\t\t\tconsole.assert( $.Math.random() === 0 )\n\t\t\tconsole.assert( $.Math.random() === Math.sin(1) )\n\t\t} ,\n\n\t\t'forbidden XMLHttpRequest'( $ ) {\n\t\t\ttry {\n\t\t\t\tconsole.assert( void new $.XMLHttpRequest )\n\t\t\t} catch( error: any ) {\n\t\t\t\tconsole.assert( error.message === 'XMLHttpRequest is forbidden in tests' )\n\t\t\t}\n\t\t} ,\n\n\t\t'forbidden fetch'( $ ) {\n\t\t\ttry {\n\t\t\t\tconsole.assert( void $.fetch('') )\n\t\t\t} catch( error: any ) {\n\t\t\t\tconsole.assert( error.message === 'fetch is forbidden in tests' )\n\t\t\t}\n\t\t} ,\n\n\t})\n\n}\n","namespace $ {\n\t\n\texport function $mol_test_complete() {\n\t\tprocess.exit(0)\n\t}\n\t\n}\n","namespace $ {\n\t$mol_test_mocks.push( $=> $.$mol_fail_log = ()=> false )\n}\n\n","/** @jsx $mol_jsx */\n/** @jsxFrag $mol_jsx_frag */\nnamespace $ {\n\t\n\t$mol_test({\n\t\t\n\t\t'Make empty div'() {\n\t\t\t$mol_assert_equal( (<div/>).outerHTML , '<div></div>' )\n\t\t} ,\n\t\t\n\t\t'Define native field'() {\n\t\t\t\n\t\t\tconst dom = <input value='123' /> as HTMLInputElement\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML, '<input value=\"123\">' )\n\t\t\t$mol_assert_equal( dom.value, '123' )\n\n\t\t} ,\n\t\t\n\t\t'Define classes'() {\n\t\t\t\n\t\t\tconst dom = <div class={ 'foo bar' } />\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML, '<div class=\"foo bar\"></div>' )\n\n\t\t} ,\n\t\t\n\t\t'Define styles'() {\n\t\t\t\n\t\t\tconst dom = <div style={{ color: 'red' }} />\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML, '<div style=\"color: red;\"></div>' )\n\n\t\t} ,\n\t\t\n\t\t'Define dataset'() {\n\t\t\t\n\t\t\tconst dom = <div dataset={{ foo: 'bar' }} />\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML, '<div data-foo=\"bar\"></div>' )\n\n\t\t} ,\n\t\t\n\t\t'Define attributes'() {\n\t\t\t\n\t\t\tconst dom = <div lang=\"ru\" hidden />\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML, '<div lang=\"ru\" hidden=\"\"></div>' )\n\n\t\t} ,\n\t\t\n\t\t'Define child nodes'() {\n\n\t\t\tconst dom =\n\t\t\t\t<div>\n\t\t\t\t\thello\n\t\t\t\t\t<strong>world</strong>\n\t\t\t\t\t!\n\t\t\t\t</div>\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML, '<div>hello<strong>world</strong>!</div>' )\n\n\t\t} ,\n\n\t\t'Make fragment'() {\n\n\t\t\tconst dom =\n\t\t\t\t<>\n\t\t\t\t\t<br />\n\t\t\t\t\t<hr />\n\t\t\t\t</>\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_dom_serialize( dom ), '<br xmlns=\"http://www.w3.org/1999/xhtml\" /><hr xmlns=\"http://www.w3.org/1999/xhtml\" />' )\n\n\t\t} ,\n\n\t\t'Spread fragment'() {\n\n\t\t\tconst dom =\n\t\t\t\t<div>\n\t\t\t\t\t<>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<hr />\n\t\t\t\t\t</>\n\t\t\t\t</div>\n\t\t\t\n\t\t\t$mol_assert_equal( dom.outerHTML, '<div><br><hr></div>' )\n\n\t\t} ,\n\n\t\t'Function as component'() {\n\n\t\t\tconst Button = (\n\t\t\t\tprops: { hint: string },\n\t\t\t\ttarget: ()=> string,\n\t\t\t) => {\n\t\t\t\treturn <button title={ props.hint } >{ target() }</button>\n\t\t\t}\n\n\t\t\tconst dom = <Button id=\"foo\" hint=\"click me\">{ ()=> 'hey!' }</Button>\n\n\t\t\t$mol_assert_equal( dom.outerHTML, '<button id=\"foo\" title=\"click me\" class=\"Button\">hey!</button>' )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'Nested guid generation'() {\n\n\t\t\tconst Foo = ()=> {\n\t\t\t\treturn <div>\n\t\t\t\t\t<Bar id=\"bar\">\n\t\t\t\t\t\t<img id=\"icon\" />\n\t\t\t\t\t</Bar>\n\t\t\t\t</div>\n\t\t\t}\n\n\t\t\tconst Bar = ( props: {}, icon: Element )=> {\n\t\t\t\treturn <span>{ icon }<i id=\"label\"/></span>\n\t\t\t}\n\n\t\t\tconst dom = <Foo id=\"foo\" />\n\n\t\t\t$mol_assert_equal( dom.outerHTML, '<div id=\"foo\" class=\"Foo\"><span id=\"foo/bar\" class=\"Foo_bar Bar\"><img id=\"foo/icon\" class=\"Foo_icon\"><i id=\"foo/bar/label\" class=\"Foo_bar_label Bar_label\"></i></span></div>' )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'Fail on non unique ids'() {\n\n\t\t\tconst App = ()=> {\n\t\t\t\treturn <div>\n\t\t\t\t\t<span id=\"bar\" />\n\t\t\t\t\t<span id=\"bar\" />\n\t\t\t\t</div>\n\t\t\t}\n\n\t\t\t$mol_assert_fail( ()=> <App id=\"foo\" />, 'JSX already has tag with id \"foo/bar\"' )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'Owner based guid generationn'() {\n\n\t\t\tconst Foo = ()=> {\n\t\t\t\treturn <div>\n\t\t\t\t\t<Bar id=\"middle\" icon={ ()=> <img id=\"icon\" /> } />\n\t\t\t\t</div>\n\t\t\t}\n\n\t\t\tconst Bar = ( props: { icon: ()=> Element } )=> {\n\t\t\t\treturn <span>{ props.icon() }</span>\n\t\t\t}\n\n\t\t\tconst dom = <Foo id=\"app\" />\n\n\t\t\t$mol_assert_equal( dom.outerHTML, '<div id=\"app\" class=\"Foo\"><span id=\"app/middle\" class=\"Foo_middle Bar\"><img id=\"app/icon\" class=\"Foo_icon\"></span></div>' )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'Fail on same ids from different caller'() {\n\n\t\t\tconst Foo = ()=> {\n\t\t\t\treturn <div>\n\t\t\t\t\t<img id=\"icon\" />\n\t\t\t\t\t<Bar id=\"bar\" icon={ ()=> <img id=\"icon\" /> } />\n\t\t\t\t</div>\n\t\t\t}\n\n\t\t\tconst Bar = ( props: { icon: ()=> Element } )=> {\n\t\t\t\treturn <span>{ props.icon() }</span>\n\t\t\t}\n\n\t\t\t$mol_assert_fail( ()=> <Foo id=\"foo\" />, 'JSX already has tag with id \"foo/icon\"' )\n\t\t\t\n\t\t} ,\n\t\t\n\t})\n\t\n}\n","namespace $ {\n\n\t/** Lazy computed lists with native Array interface. $mol_range2_array is mutable but all derived ranges are immutable. */\n\texport function $mol_range2< Item = number >(\n\t\titem: Item[] | ( ( index : number )=> Item ) = index => index as any ,\n\t\tsize = ()=> Number.POSITIVE_INFINITY ,\n\t): Item[] {\n\t\t\n\t\tconst source = typeof item === 'function' ? new $mol_range2_array< Item >() : item\n\t\t\n\t\tif( typeof item !== 'function' ) {\n\t\t\titem = index => source[ index ]\n\t\t\tsize = ()=> source.length\n\t\t}\n\n\t\treturn new Proxy( source , {\n\n\t\t\tget( target , field ) {\n\n\t\t\t\tif( typeof field === 'string' ) {\n\t\t\t\t\tif( field === 'length' ) return size()\n\t\t\t\t\t\n\t\t\t\t\tconst index = Number( field )\n\t\t\t\t\tif( index < 0 ) return undefined\n\t\t\t\t\tif( index >= size() ) return undefined\n\t\t\t\t\tif( index === Math.trunc( index ) ) return ( item as any )( index )\n\t\t\t\t}\n\n\t\t\t\treturn $mol_range2_array.prototype[ field as any ]\n\t\t\t} ,\n\n\t\t\tset( target , field ) {\n\t\t\t\treturn $mol_fail( new TypeError( `Lazy range is read only (trying to set field ${ JSON.stringify( field ) })`  ) )\n\t\t\t} ,\n\n\t\t\townKeys( target ) {\n\t\t\t\treturn [ ... Array( size() ) ].map( ( v, i ) => String( i ) ).concat( 'length' )\n\t\t\t} ,\n\n\t\t\tgetOwnPropertyDescriptor( target , field ) : PropertyDescriptor | undefined {\n\t\t\t\t\n\t\t\t\tif( field === \"length\" ) return {\n\t\t\t\t\tvalue : size() ,\n\t\t\t\t\twritable : true ,\n\t\t\t\t\tenumerable : false ,\n\t\t\t\t\tconfigurable : false ,\n\t\t\t\t}\n\n\t\t\t\tconst index = Number( field )\n\t\t\t\tif( index === Math.trunc( index ) ) return {\n\t\t\t\t\tget : ()=> this.get!( target , field , this ) ,\n\t\t\t\t\tenumerable : true ,\n\t\t\t\t\tconfigurable : true ,\n\t\t\t\t}\n\n\t\t\t\treturn Object.getOwnPropertyDescriptor( target , field )\n\t\t\t}\n\n\t\t} )\n\n\t}\n\n\texport class $mol_range2_array< Item > extends Array< Item > {\n\t\t\n\t\t// Lazy\n\t\tconcat( ... tail : Item[][] ) : Item[] {\n\t\t\tif( tail.length === 0 ) return this as any\n\n\t\t\tif( tail.length > 1 ) {\n\t\t\t\tlet list = this as any\n\t\t\t\tfor( let item of tail ) list = list.concat( item )\n\t\t\t\treturn list\n\t\t\t}\n\t\t\t\n\t\t\treturn $mol_range2(\n\t\t\t\tindex => index < this.length ? this[ index ] : tail[0][ index - this.length ] ,\n\t\t\t\t()=> this.length + tail[0].length ,\n\t\t\t)\n\t\t}\n\n\t\t// Lazy\n\t\tfilter< Context > (\n\t\t\tcheck : ( val : Item , index : number , list : Item[] )=> boolean ,\n\t\t\tcontext? : Context ,\n\t\t) {\n\t\t\t\n\t\t\tconst filtered = [] as Item[]\n\t\t\tlet cursor = -1\n\t\t\t\n\t\t\treturn $mol_range2(\n\t\t\t\tindex => {\n\t\t\t\t\t\n\t\t\t\t\twhile( cursor < this.length && index >= filtered.length - 1 ) {\n\t\t\t\t\t\tconst val = this[ ++ cursor ]\n\t\t\t\t\t\tif( check( val, cursor, this ) ) filtered.push( val )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn filtered[ index ]\n\t\t\t\t},\n\t\t\t\t()=> cursor < this.length ? Number.POSITIVE_INFINITY : filtered.length,\n\t\t\t)\n\t\t\t\n\t\t}\n\n\t\t// Diligent\n\t\tforEach< Context > (\n\t\t\tproceed : ( this : Context , val : Item , index : number , list : Item[] )=> void ,\n\t\t\tcontext? : Context,\n\t\t) {\n\t\t\tfor( let [ key , value ] of this.entries() ) proceed.call( context as Context , value , key , this )\n\t\t}\n\n\t\t// Lazy\n\t\tmap< Item_out , Context > (\n\t\t\tproceed : ( this : Context , val : Item , index : number , list : Item[] )=> Item_out ,\n\t\t\tcontext? : Context ,\n\t\t) : Item_out[] {\n\t\t\treturn $mol_range2(\n\t\t\t\tindex => proceed.call( context as Context , this[ index ] , index , this ) ,\n\t\t\t\t()=> this.length ,\n\t\t\t)\n\t\t}\n\n\t\t// Diligent\n\t\treduce< Result > (\n\t\t\tmerge : ( result : Result , val : Item , index : number , list : Item[] )=> Result ,\n\t\t\tresult? : Result ,\n\t\t) {\n\t\t\tlet index = 0\n\n\t\t\tif( arguments.length === 1 ) {\n\t\t\t\tresult = this[ index ++ ] as any\n\t\t\t}\n\t\t\t\n\t\t\tfor( ; index < this.length ; ++ index ) {\n\t\t\t\tresult = merge( result as Result , this[ index ] , index , this as any )\n\t\t\t}\n\t\t\t\n\t\t\treturn result\n\t\t}\n\n\t\t// Lazy\n\t\ttoReversed(): Item[] {\n\t\t\treturn $mol_range2(\n\t\t\t\tindex => this[ this.length - 1 - index ] ,\n\t\t\t\t()=> this.length ,\n\t\t\t)\n\t\t}\n\n\t\t// Lazy\n\t\tslice( from = 0 , to = this.length ) {\n\t\t\treturn $mol_range2(\n\t\t\t\tindex => this[ from + index ] ,\n\t\t\t\t()=> Math.min( to , this.length ) - from ,\n\t\t\t)\n\t\t}\n\n\t\t// Lazy\n\t\tsome< Context > (\n\t\t\tcheck : ( this : Context , val : Item , index : number , list : Item[] )=> boolean ,\n\t\t\tcontext? : Context ,\n\t\t) {\n\t\t\tfor( let index = 0 ; index < this.length ; ++ index ) {\n\t\t\t\tif( check.call( context as Context , this[ index ] , index , this ) ) return true\n\t\t\t}\n\t\t\treturn false\n\t\t}\n\n\t\t// Lazy\n\t\tevery< Narrow extends Item, Context = null >( check: ( value: Item, index: number, array: Item[] )=> value is Narrow, context?: Context ): this is Narrow[]\n\t\tevery< Context = null > (\n\t\t\tcheck : ( this : Context , val : Item , index : number , list : Item[] )=> boolean ,\n\t\t\tcontext? : Context ,\n\t\t) {\n\t\t\tfor( let index = 0 ; index < this.length ; ++ index ) {\n\t\t\t\tif( !check.call( context as Context , this[ index ] , index , this as any as Item[] ) ) return false\n\t\t\t}\n\t\t\treturn true\n\t\t}\n\n\t\treverse() {\n\t\t\treturn $mol_fail( new TypeError( `Mutable reverse is forbidden. Use toReversed instead.`  ) )\n\t\t}\n\n\t\tsort() {\n\t\t\treturn $mol_fail( new TypeError( `Mutable sort is forbidden. Use toSorted instead.`  ) )\n\t\t}\n\t\t\n\t\t[Symbol.toPrimitive]() {\n\t\t\treturn $mol_guid()\n\t\t}\n\n\t}\n\n}\n","namespace $ {\n\n\t$mol_test({\n\n\t\t'lazy calls'() {\n\n\t\t\tlet calls = 0\n\t\t\t\n\t\t\tconst list = $mol_range2( index => ( ++ calls , index ) , ()=> 10 )\n\n\t\t\t$mol_assert_equal( true, list instanceof Array )\n\t\t\t$mol_assert_equal( list.length , 10 )\n\n\t\t\t$mol_assert_equal( list[-1] , undefined )\n\t\t\t$mol_assert_equal( list[0] , 0 )\n\t\t\t$mol_assert_equal( list[9] , 9 )\n\t\t\t$mol_assert_equal( list[9.5] , undefined )\n\t\t\t$mol_assert_equal( list[10] , undefined )\n\n\t\t\t$mol_assert_equal( calls , 2 )\n\n\t\t} ,\n\n\t\t'infinity list'() {\n\n\t\t\tlet calls = 0\n\t\t\t\n\t\t\tconst list = $mol_range2( index => ( ++ calls , index ) )\n\n\t\t\t$mol_assert_equal( list.length , Number.POSITIVE_INFINITY )\n\n\t\t\t$mol_assert_equal( list[0] , 0 )\n\t\t\t$mol_assert_equal( list[4] , 4 )\n\t\t\t$mol_assert_equal( list[Number.MAX_SAFE_INTEGER] , Number.MAX_SAFE_INTEGER )\n\t\t\t$mol_assert_equal( list[Number.POSITIVE_INFINITY] , undefined )\n\t\t\t\n\t\t\t$mol_assert_equal( calls , 3 )\n\n\t\t} ,\n\n\t\t'stringify'() {\n\n\t\t\tconst list = $mol_range2( i => i , ()=> 5 )\n\n\t\t\t$mol_assert_equal( list.toString() , '0,1,2,3,4' )\n\t\t\t$mol_assert_equal( list.join(';') , '0;1;2;3;4' )\n\n\t\t} ,\n\n\t\t'for-of'() {\n\n\t\t\tlet log = ''\n\n\t\t\tfor( let i of $mol_range2( i => i + 1 , ()=> 5 ) ) {\n\t\t\t\tlog += i\n\t\t\t}\n\n\t\t\t$mol_assert_equal( log , '12345' )\n\n\t\t} ,\n\n\t\t'for-in'() {\n\n\t\t\tlet log = ''\n\n\t\t\tfor( let i in $mol_range2( i => i , ()=> 5 ) ) {\n\t\t\t\tlog += i\n\t\t\t}\n\n\t\t\t$mol_assert_equal( log , '01234' )\n\n\t\t} ,\n\n\t\t'forEach'() {\n\n\t\t\tlet log = ''\n\n\t\t\t$mol_range2( i => i , ()=> 5 ).forEach( i => log += i )\n\n\t\t\t$mol_assert_equal( log , '01234' )\n\n\t\t} ,\n\n\t\t'reduce'() {\n\n\t\t\tlet calls = 0\n\t\t\t\n\t\t\tconst list = $mol_range2().slice( 1 , 6 )\n\n\t\t\t$mol_assert_equal( list.reduce( ( s , v )=> s + v ) , 15 )\n\t\t\t$mol_assert_equal( list.reduce( ( s , v )=> s + v , 5 ) , 20 )\n\n\t\t} ,\n\n\t\t'lazy concat'() {\n\n\t\t\tlet calls1 = 0\n\t\t\tlet calls2 = 0\n\t\t\t\n\t\t\tconst list = $mol_range2( index => ( ++ calls1 , index ) , ()=> 5 ).concat(\n\t\t\t\t[ 0 , 1 , 2 , 3 , 4 ] ,\n\t\t\t\t$mol_range2( index => ( ++ calls2 , index ) , ()=> 5 ) ,\n\t\t\t)\n\n\t\t\t$mol_assert_equal( true, list instanceof Array )\n\t\t\t$mol_assert_equal( list.length , 15 )\n\n\t\t\t$mol_assert_equal( list[0] , 0 )\n\t\t\t$mol_assert_equal( list[4] , 4 )\n\t\t\t$mol_assert_equal( list[5] , 0 )\n\t\t\t$mol_assert_equal( list[9] , 4 )\n\t\t\t$mol_assert_equal( list[10] , 0 )\n\t\t\t$mol_assert_equal( list[14] , 4 )\n\t\t\t$mol_assert_equal( list[15] , undefined )\n\t\t\t\n\t\t\t$mol_assert_equal( calls1 , 2 )\n\t\t\t$mol_assert_equal( calls2 , 2 )\n\n\t\t} ,\n\n\t\t'lazy filter'() {\n\n\t\t\tlet calls = 0\n\t\t\t\n\t\t\tconst list = $mol_range2( index => ( ++ calls , index ) , ()=> 15 ).filter( v => v % 2 ).slice( 0 , 3 )\n\n\t\t\t$mol_assert_equal( true, list instanceof Array )\n\t\t\t$mol_assert_equal( list.length , 3 )\n\n\t\t\t$mol_assert_equal( list[0] , 1 )\n\t\t\t$mol_assert_equal( list[2] , 5 )\n\t\t\t$mol_assert_equal( list[3] , undefined )\n\t\t\t\n\t\t\t$mol_assert_equal( calls , 8 )\n\n\t\t} ,\n\n\t\t'lazy reverse'() {\n\t\t\tlet calls = 0\n\n\t\t\tconst list = $mol_range2( index => ( ++ calls , index ) , ()=> 10 ).toReversed().slice(0, 3)\n\n\t\t\t$mol_assert_equal( true, list instanceof Array )\n\t\t\t$mol_assert_equal( list.length , 3 )\n\n\t\t\t$mol_assert_equal( list[0] , 9 )\n\t\t\t$mol_assert_equal( list[2] , 7 )\n\t\t\t$mol_assert_equal( list[3] , undefined )\n\t\t\t$mol_assert_equal( calls , 2 )\n\n\t\t} ,\n\n\t\t'lazy map'() {\n\n\t\t\tlet calls1 = 0\n\t\t\tlet calls2 = 0\n\t\t\t\n\t\t\tconst source = $mol_range2( index => ( ++ calls1 , index ) , ()=> 5 )\n\t\t\tconst target = source.map(\n\t\t\t\t( item , index , self )=> {\n\t\t\t\t\t++ calls2\n\t\t\t\t\t$mol_assert_equal( source , self )\n\t\t\t\t\treturn index + 10\n\t\t\t\t} ,\n\t\t\t\t()=> 5 ,\n\t\t\t)\n\n\t\t\t$mol_assert_equal( true, target instanceof Array )\n\t\t\t$mol_assert_equal( target.length , 5 )\n\n\t\t\t$mol_assert_equal( target[0] , 10 )\n\t\t\t$mol_assert_equal( target[4] , 14 )\n\t\t\t$mol_assert_equal( target[5] , undefined )\n\t\t\t\n\t\t\t$mol_assert_equal( calls1 , 2 )\n\t\t\t$mol_assert_equal( calls2 , 2 )\n\n\t\t} ,\n\n\t\t'lazy slice'() {\n\n\t\t\tlet calls = 0\n\t\t\t\n\t\t\tconst list = $mol_range2( index => ( ++ calls , index ) , ()=> 10 ).slice( 3 , 7 )\n\n\t\t\t$mol_assert_equal( true, list instanceof Array )\n\t\t\t$mol_assert_equal( list.length , 4 )\n\n\t\t\t$mol_assert_equal( list[0] , 3 )\n\t\t\t$mol_assert_equal( list[3] , 6 )\n\t\t\t$mol_assert_equal( list[4] , undefined )\n\t\t\t\n\t\t\t$mol_assert_equal( calls , 2 )\n\n\t\t} ,\n\n\t\t'lazy some'() {\n\n\t\t\tlet calls = 0\n\t\t\t\n\t\t\t$mol_assert_equal( true, $mol_range2( index => ( ++ calls , index ) , ()=> 5 ).some( v => v >= 2 ) )\n\n\t\t\t$mol_assert_equal( calls , 3 )\n\n\t\t\t$mol_assert_equal( false, $mol_range2( i => i , ()=> 0 ).some( v => true ) )\n\t\t\t$mol_assert_equal( true, $mol_range2( i => i ).some( v => v > 5 ) )\n\t\t} ,\n\n\t\t'lazy every'() {\n\n\t\t\tlet calls = 0\n\t\t\t\n\t\t\t$mol_assert_equal( false, $mol_range2( index => ( ++ calls , index ) , ()=> 5 ).every( v => v < 2 ) )\n\n\t\t\t$mol_assert_equal( calls , 3 )\n\n\t\t\t$mol_assert_equal( true, $mol_range2( i => i , ()=> 0 ).every( v => false ) )\n\t\t\t$mol_assert_equal( false, $mol_range2( i => i ).every( v => v < 5 ) )\n\t\t} ,\n\n\t\t'lazyfy'() {\n\n\t\t\tlet calls = 0\n\t\t\t\n\t\t\tconst list = $mol_range2([ 0 , 1 , 2 , 3 , 4 , 5 ]).map( i => ( ++ calls , i + 10 ) ).slice( 2 )\n\n\t\t\t$mol_assert_equal( true, list instanceof Array )\n\t\t\t$mol_assert_equal( list.length , 4 )\n\n\t\t\t$mol_assert_equal( calls , 0 )\n\t\t\t\n\t\t\t$mol_assert_equal( list[0] , 12 )\n\t\t\t$mol_assert_equal( list[3] , 15 )\n\t\t\t$mol_assert_equal( list[4] , undefined )\n\t\t\t\n\t\t\t$mol_assert_equal( calls , 2 )\n\n\t\t} ,\n\n\t\t'prevent modification'() {\n\n\t\t\tconst list = $mol_range2( i => i , ()=> 5 )\n\n\t\t\t$mol_assert_fail( ()=> list.push( 4 ) , TypeError )\n\t\t\t$mol_assert_fail( ()=> list.pop() , TypeError )\n\t\t\t\n\t\t\t$mol_assert_fail( ()=> list.unshift( 4 ) , TypeError )\n\t\t\t$mol_assert_fail( ()=> list.shift() , TypeError )\n\t\t\t\n\t\t\t$mol_assert_fail( ()=> list.splice( 1 , 2 ) , TypeError )\n\t\t\t$mol_assert_fail( ()=> list[ 1 ] = 2 , TypeError )\n\t\t\t\n\t\t\t$mol_assert_fail( ()=> list.reverse() , TypeError )\n\t\t\t$mol_assert_fail( ()=> list.sort() , TypeError )\n\n\t\t\t$mol_assert_equal( list.toString() , '0,1,2,3,4' )\n\n\t\t}\n\n\t})\n\n}\n","/** @jsx $mol_jsx */\nnamespace $ {\n\n\t$mol_test({\n\n\t\t'nulls & undefineds'() {\n\n\t\t\t$mol_assert_ok( $mol_compare_deep( null , null ) )\n\t\t\t$mol_assert_ok( $mol_compare_deep( undefined , undefined ) )\n\t\t\t\n\t\t\t$mol_assert_not( $mol_compare_deep( undefined , null ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( {} , null ) )\n\t\t\t\n\t\t} ,\n\n\t\t'number'() {\n\t\t\t\n\t\t\t$mol_assert_ok( $mol_compare_deep( 1 , 1 ) )\n\t\t\t$mol_assert_ok( $mol_compare_deep( Number.NaN , Number.NaN ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( 1 , 2 ) )\n\t\t\t\n\t\t\t$mol_assert_ok( $mol_compare_deep( Object( 1 ) , Object( 1 ) ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( Object( 1 ) , Object( 2 ) ) )\n\t\t\t\n\t\t} ,\n\n\t\t'POJO'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( {} , {} ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( { a : 1 } , { b : 2 } ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( { a : 1 } , { a : 2 } ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( {} , { a : undefined } ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( { a: 1, b: 2 } , { b: 2, a: 1 } ) )\n\t\t\t$mol_assert_ok( $mol_compare_deep( { a : { b : 1 } } , { a : { b : 1 } } ) )\n\t\t\t$mol_assert_ok( $mol_compare_deep( Object.create(null), Object.create(null) ) )\n\t\t} ,\n\n\t\t'Array'() {\n\t\t\t\n\t\t\t$mol_assert_ok( $mol_compare_deep( [] , [] ) )\n\t\t\t$mol_assert_ok( $mol_compare_deep( [ 1 , [2] ] , [ 1 , [2] ] ) )\n\t\t\t\n\t\t\t$mol_assert_not( $mol_compare_deep( [ 1 , 2 ] , [ 1 , 3 ] ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( [ 1 , 2 , ] , [ 1 , 3 , undefined ] ) )\n\t\t\t\n\t\t\t$mol_assert_not( $mol_compare_deep( $mol_range2().slice(0,0), new Array() ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( $mol_range2(), $mol_range2() ) )\n\t\t\t\n\t\t} ,\n\n\t\t'Non POJO are different'() {\n\t\t\t\n\t\t\tclass Thing extends Object {}\n\t\t\t$mol_assert_not( $mol_compare_deep( new Thing , new Thing ) )\n\t\t\t\n\t\t\t$mol_assert_not( $mol_compare_deep( ()=> 1 , ()=>1 ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( new RangeError( 'Test error' ) , new RangeError( 'Test error' ) ) )\n\t\t\t\n\t\t} ,\n\n\t\t'POJO with symbols'() {\n\t\t\tconst sym = Symbol()\n\t\t\t$mol_assert_ok( $mol_compare_deep( { [ sym ]: true }, { [ sym ]: true } ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( { [ Symbol() ]: true }, { [ Symbol() ]: true } ) )\n\t\t} ,\n\n\t\t'same POJOs with cyclic reference'() {\n\n\t\t\tconst a = { foo : {} }\n\t\t\t;(a as any)['self'] = a\n\n\t\t\tconst b = { foo : {} }\n\t\t\t;(b as any)['self'] = b\n\n\t\t\t$mol_assert_ok( $mol_compare_deep( a , b ) )\n\n\t\t} ,\n\n\t\t'same POJOs with cyclic reference with cache warmup'() {\n\t\t\tconst obj1 = { test: 1, obj3: null as unknown as Object }\n\t\t\tconst obj1_copy = { test: 1, obj3: null as unknown as Object }\n\t\t\tconst obj2 = { test: 2, obj1 }\n\t\t\tconst obj2_copy = { test: 2, obj1: obj1_copy }\n\t\t\tconst obj3 = { test: 3, obj2 }\n\t\t\tconst obj3_copy = { test: 3, obj2: obj2_copy }\n\n\t\t\tobj1.obj3 = obj3\n\t\t\tobj1_copy.obj3 = obj3_copy\n\n\t\t\t// warmup cache\n\t\t\t$mol_assert_not( $mol_compare_deep( obj1 , {} as any ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( obj2 , {} as any ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( obj3 , {} as any ) )\n\n\t\t\t$mol_assert_ok( $mol_compare_deep( obj3 , obj3_copy ) )\n\n\t\t} ,\n\n\t\t'Date'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( new Date( 12345 ) , new Date( 12345 ) ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( new Date( 12345 ) , new Date( 12346 ) ) )\n\t\t} ,\n\n\t\t'RegExp'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( /\\x22/mig , /\\x22/mig ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( /\\x22/mig , /\\x21/mig ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( /\\x22/mig , /\\x22/mg ) )\n\t\t} ,\n\n\t\t'Error'() {\n\t\t\t\n\t\t\t$mol_assert_not( $mol_compare_deep( new Error( 'xxx' ) , new Error( 'xxx' ) ) )\n\n\t\t\tconst fail = ( message: string )=> new Error( message )\n\t\t\t\n\t\t\t$mol_assert_ok( $mol_compare_deep(\n\t\t\t\t... [ 'xxx' , 'xxx' ].map( msg => new Error( msg ) ) as [ Error, Error ]\n\t\t\t) )\n\t\t\t\n\t\t\t$mol_assert_not( $mol_compare_deep(\n\t\t\t\t... [ 'xxx' , 'yyy' ].map( msg => new Error( msg ) ) as [ Error, Error ]\n\t\t\t) )\n\t\t\t\n\t\t} ,\n\n\t\t'Map'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( new Map , new Map ) )\n\t\t\t$mol_assert_ok( $mol_compare_deep( new Map([ [ 1 , [2] ] ]) , new Map([ [ 1 , [2] ] ]) ) )\n\t\t\t$mol_assert_ok( $mol_compare_deep( new Map([ [ [1] , 2 ] ]) , new Map([ [ [1] , 2 ] ]) ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( new Map([ [ 1 , 2 ] ]) , new Map([ [ 1 , 3 ] ]) ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( new Map([ [ [1] , 2 ] ]) , new Map([ [ [3] , 2 ] ]) ) )\n\t\t} ,\n\t\t\n\t\t'Set'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( new Set , new Set ) )\n\t\t\t$mol_assert_ok( $mol_compare_deep( new Set([ 1 , [2] ]) , new Set([ 1 , [2] ]) ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( new Set([ 1 ]) , new Set([ 2 ]) ) )\n\t\t} ,\n\t\t\n\t\t'Uint8Array'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( new Uint8Array , new Uint8Array ) )\n\t\t\t$mol_assert_ok( $mol_compare_deep( new Uint8Array([ 0 ]) , new Uint8Array([ 0 ]) ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( new Uint8Array([ 0 ]) , new Uint8Array([ 1 ]) ) )\n\t\t} ,\n\t\t\n\t\t'DataView'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( new DataView( new Uint8Array().buffer ) , new DataView( new Uint8Array().buffer ) ) )\n\t\t\t$mol_assert_ok( $mol_compare_deep( new DataView( new Uint8Array([ 0 ]).buffer ) , new DataView( new Uint8Array([ 0 ]).buffer ) ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( new DataView( new Uint8Array([ 0 ]). buffer ) , new DataView( new Uint8Array([ 1 ]).buffer ) ) )\n\t\t} ,\n\t\t\n\t\t'Serializale'() {\n\t\t\t\n\t\t\tclass User {\n\t\t\t\t\n\t\t\t\tconstructor(\n\t\t\t\t\treadonly name: string,\n\t\t\t\t\treadonly rand = Math.random(),\n\t\t\t\t) {}\n\t\t\t\t\n\t\t\t\t[ Symbol.toPrimitive ]( mode: 'default' | 'number' | 'string' ) {\n\t\t\t\t\treturn this.name\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_ok( $mol_compare_deep( new User( 'Jin' ), new User( 'Jin' ) ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( new User( 'Jin' ), new User( 'John' ) ) )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t'Iterable'() {\n\t\t\t$mol_assert_ok( $mol_compare_deep( new URLSearchParams({ foo: 'bar' }), new URLSearchParams({ foo: 'bar' }) ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( new URLSearchParams({ foo: 'xxx' }), new URLSearchParams({ foo: 'yyy' }) ) )\n\t\t\t$mol_assert_not( $mol_compare_deep( new URLSearchParams({ foo: 'xxx', bar: 'yyy' }), new URLSearchParams({ bar: 'yyy', foo: 'xxx' }) ) )\n\t\t} ,\n\t\t\n\t})\n\n}\n","namespace $ {\n\t\n\t/**\n\t * Argument must be Truthy\n\t * @deprecated use $mol_assert_equal instead\n\t */\n\texport function $mol_assert_ok( value : any ) {\n\t\tif( value ) return\n\t\t$mol_fail( new Error( `${value} ≠ true` ) )\n\t}\n\t\n\t/**\n\t * Argument must be Falsy\n\t * @deprecated use $mol_assert_equal instead\n\t */\n\texport function $mol_assert_not( value : any ) {\n\t\tif( !value ) return\n\t\t$mol_fail( new Error( `${value} ≠ false` ) )\n\t}\n\t\n\t/**\n\t * Handler must throw an error.\n\t * @example\n\t * $mol_assert_fail( ()=>{ throw new Error( 'Parse error' ) } ) // Passes because throws error\n\t * $mol_assert_fail( ()=>{ throw new Error( 'Parse error' ) } , 'Parse error' ) // Passes because throws right message\n\t * $mol_assert_fail( ()=>{ throw new Error( 'Parse error' ) } , Error ) // Passes because throws right class\n\t * @see https://mol.hyoo.ru/#!section=docs/=9q9dv3_fgxjsf\n\t */\n\texport function $mol_assert_fail(\n\t\thandler: ()=> any ,\n\t\tErrorRight: string | typeof Error | typeof Promise\n\t) {\n\t\t\n\t\tconst fail = $.$mol_fail\n\t\t\n\t\ttry {\n\t\t\t$.$mol_fail = $.$mol_fail_hidden\n\t\t\t\n\t\t\thandler()\n\n\t\t} catch( error: any ) {\n\t\t\t\n\t\t\t$.$mol_fail = fail\n\n\t\t\tif( typeof ErrorRight === 'string' ) {\n\t\t\t\t$mol_assert_equal( error.message, ErrorRight )\n\t\t\t} else {\n\t\t\t\t$mol_assert_equal( error instanceof ErrorRight, true )\n\t\t\t}\n\t\t\t\n\t\t\treturn error\n\n\t\t} finally {\n\t\t\t$.$mol_fail = fail\n\t\t}\n\n\t\t$mol_fail( new Error( 'Not failed' ) )\n\t}\n\t\n\t/** @deprecated Use $mol_assert_equal */\n\texport function $mol_assert_like< Value >( ... args : [ Value, Value, ...Value[] ] ) {\n\t\t$mol_assert_equal( ... args )\n\t}\n\t\n\t/**\n\t * All arguments must not be structural equal to each other.\n\t * @example\n\t * $mol_assert_unique( 1 , 2 , 3 ) // Passes\n\t * $mol_assert_unique( 1 , 1 , 2 ) // Fails because 1 === 1\n\t * @see https://mol.hyoo.ru/#!section=docs/=9q9dv3_fgxjsf\n\t */\n\texport function $mol_assert_unique( ... args : [ any, any, ...any[] ] ) {\n\t\t\n\t\tfor( let i = 0 ; i < args.length ; ++i ) {\n\t\t\tfor( let j = 0 ; j < args.length ; ++j ) {\n\t\t\t\t\n\t\t\t\tif( i === j ) continue\n\t\t\t\tif( !$mol_compare_deep( args[i], args[j] ) ) continue\n\t\t\t\t\n\t\t\t\t$mol_fail( new Error( `args[${i}] = args[${j}] = ${ print( args[i] ) }` ) )\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\t\n\t/**\n\t * All arguments must be structural equal each other.\n\t * @example\n\t * $mol_assert_like( [1] , [1] , [1] ) // Passes\n\t * $mol_assert_like( [1] , [1] , [2] ) // Fails because 1 !== 2\n\t * @see https://mol.hyoo.ru/#!section=docs/=9q9dv3_fgxjsf\n\t */\n\texport function $mol_assert_equal< Value >( ... args : Value[] ) {\n\t\tfor( let i = 1 ; i < args.length ; ++i ) {\n\t\t\t\n\t\t\tif( $mol_compare_deep( args[0] , args[i] ) ) continue\n\t\t\tif( args[0] instanceof $mol_dom_context.Element && args[i] instanceof $mol_dom_context.Element && args[0].outerHTML === ( args[i] as Element ).outerHTML ) continue\n\t\t\t\n\t\t\treturn $mol_fail( new Error( `args[0] ≠ args[${i}]\\n${ print( args[0] ) }\\n---\\n${ print( args[i] ) }` ) )\n\t\t\t\n\t\t}\n\t}\n\t\n\tconst print = ( val : any ) => {\n\t\t\n\t\tif( !val ) return val\n\t\tif( typeof val === 'bigint' ) return String(val) + 'n'\n\t\tif( typeof val === 'symbol' ) return `Symbol(${val.description})`\n\t\tif( typeof val !== 'object' ) return val\n\t\tif( 'outerHTML' in val ) return val.outerHTML\n\t\t\n\t\ttry {\n\t\t\treturn JSON.stringify( val, ( k, v )=> typeof v === 'bigint' ? String(v) : v,'\\t' )\n\t\t} catch( error: any ) {\n\t\t\tconsole.error( error )\n\t\t\treturn val\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t$mol_test( {\n\t\t\n\t\t'must be false'() {\n\t\t\t$mol_assert_not( 0 )\n\t\t} ,\n\t\t\n\t\t'must be true'() {\n\t\t\t$mol_assert_ok( 1 )\n\t\t} ,\n\t\t\n\t\t'two must be equal'() {\n\t\t\t$mol_assert_equal( 2 , 2 )\n\t\t} ,\n\t\t\n\t\t'three must be equal'() {\n\t\t\t$mol_assert_equal( 2 , 2 , 2 )\n\t\t} ,\n\t\t\n\t\t'two must be unique'() {\n\t\t\t$mol_assert_unique( [ 2 ] , [ 3 ] )\n\t\t} ,\n\t\t\n\t\t'three must be unique'() {\n\t\t\t$mol_assert_unique( [ 1 ] , [ 2 ] , [ 3 ] )\n\t\t} ,\n\t\t\n\t\t'two must be alike'() {\n\t\t\t$mol_assert_like( [ 3 ] , [ 3 ] )\n\t\t} ,\n\t\t\n\t\t'three must be alike'() {\n\t\t\t$mol_assert_like( [ 3 ] , [ 3 ] , [ 3 ] )\n\t\t} ,\n\n\t\t'two object must be alike'() {\n\t\t\t$mol_assert_like( { a: 1 }, { a: 1 } )\n\t\t} ,\n\n\t\t'three object must be alike'() {\n\t\t\t$mol_assert_like( { a: 1 }, { a: 1 }, { a: 1 } )\n\t\t} ,\n\t\t\n\t} )\n}\n","namespace $ {\n\n\t$mol_test_mocks.push( $ => {\n\t\t$.$mol_log3_come = ()=> {}\n\t\t$.$mol_log3_done = ()=> {}\n\t\t$.$mol_log3_fail = ()=> {}\n\t\t$.$mol_log3_warn = ()=> {}\n\t\t$.$mol_log3_rise = ()=> {}\n\t\t$.$mol_log3_area = ()=> ()=> {}\n\t} )\n\n}\n","namespace $ {\n\t$mol_test({\n\t\t\n\t\t'get'() {\n\t\t\tconst proxy = $mol_delegate( {} as any , ()=> ({ foo : 777 }) )\n\t\t\t$mol_assert_equal( proxy.foo , 777 )\n\t\t},\n\n\t\t'has'() {\n\t\t\tconst proxy = $mol_delegate( {} as any , ()=> ({ foo : 777 }) )\n\t\t\t$mol_assert_equal( 'foo' in proxy , true )\n\t\t},\n\n\t\t'set'() {\n\t\t\tconst target = { foo : 777 }\n\t\t\tconst proxy = $mol_delegate( {} as any , ()=> target )\n\t\t\tproxy.foo = 123\n\t\t\t$mol_assert_equal( target.foo , 123 )\n\t\t},\n\t\t\n\t\t'getOwnPropertyDescriptor'() {\n\n\t\t\tconst proxy = $mol_delegate( {} as any , ()=> ({ foo : 777 }) )\n\t\t\t\n\t\t\t$mol_assert_like(\n\t\t\t\tObject.getOwnPropertyDescriptor( proxy , 'foo' ),\n\t\t\t\t{\n\t\t\t\t\tvalue: 777,\n\t\t\t\t\twritable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t},\n\t\t\t)\n\t\t\t\n\t\t},\n\n\t\t'ownKeys'() {\n\n\t\t\tconst proxy = $mol_delegate(\n\t\t\t\t{} as any ,\n\t\t\t\t()=> ({ foo : 777 , [ Symbol.toStringTag ] : 'bar' }),\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_like(\n\t\t\t\tReflect.ownKeys( proxy ),\n\t\t\t\t[ 'foo' , Symbol.toStringTag ],\n\t\t\t)\n\n\t\t},\n\n\t\t'getPrototypeOf'() {\n\n\t\t\tclass Foo {}\n\n\t\t\tconst proxy = $mol_delegate(\n\t\t\t\t{} as any ,\n\t\t\t\t()=> new Foo,\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_equal(\n\t\t\t\tObject.getPrototypeOf( proxy ),\n\t\t\t\tFoo.prototype,\n\t\t\t)\n\n\t\t},\n\n\t\t'setPrototypeOf'() {\n\n\t\t\tclass Foo {}\n\t\t\tconst target = {}\n\n\t\t\tconst proxy = $mol_delegate(\n\t\t\t\t{} ,\n\t\t\t\t()=> target,\n\t\t\t)\n\n\t\t\tObject.setPrototypeOf( proxy , Foo.prototype )\n\t\t\t\n\t\t\t$mol_assert_equal(\n\t\t\t\tObject.getPrototypeOf( target ),\n\t\t\t\tFoo.prototype,\n\t\t\t)\n\n\t\t},\n\n\t\t'instanceof'() {\n\n\t\t\tclass Foo {}\n\n\t\t\tconst proxy = $mol_delegate(\n\t\t\t\t{} ,\n\t\t\t\t()=> new Foo,\n\t\t\t)\n\n\t\t\t$mol_assert_ok( proxy instanceof Foo )\n\t\t\t$mol_assert_ok( proxy instanceof $mol_delegate )\n\n\t\t},\n\n\t\t'autobind'() {\n\n\t\t\tclass Foo {}\n\n\t\t\tconst proxy = $mol_delegate(\n\t\t\t\t{} ,\n\t\t\t\t()=> new Foo,\n\t\t\t)\n\n\t\t\t$mol_assert_ok( proxy instanceof Foo )\n\t\t\t$mol_assert_ok( proxy instanceof $mol_delegate )\n\n\t\t},\n\n\t})\n}\n","namespace $ {\n\t$mol_test( {\n\t\t'span for same uri'( $ ) {\n\t\t\tconst span = new $mol_span('test.ts', '', 1, 3, 4)\n\t\t\tconst child = span.span(4, 5, 8)\n\n\t\t\t$mol_assert_equal(child.uri, 'test.ts')\n\t\t\t$mol_assert_equal(child.row, 4)\n\t\t\t$mol_assert_equal(child.col, 5)\n\t\t\t$mol_assert_equal(child.length, 8)\n\t\t},\n\n\t\t'span after of given position'( $ ) {\n\t\t\tconst span = new $mol_span('test.ts', '', 1, 3, 4)\n\t\t\tconst child = span.after(11)\n\n\t\t\t$mol_assert_equal(child.uri, 'test.ts')\n\t\t\t$mol_assert_equal(child.row, 1)\n\t\t\t$mol_assert_equal(child.col, 7)\n\t\t\t$mol_assert_equal(child.length, 11)\n\t\t},\n\n\t\t'slice span - regular'( $ ) {\n\t\t\tconst span = new $mol_span('test.ts', '', 1, 3, 5)\n\t\t\tconst child = span.slice(1, 4)\n\n\t\t\t$mol_assert_equal(child.row, 1)\n\t\t\t$mol_assert_equal(child.col, 4)\n\t\t\t$mol_assert_equal(child.length, 3)\n\n\t\t\tconst child2 = span.slice(2, 2)\n\n\t\t\t$mol_assert_equal(child2.col, 5)\n\t\t\t$mol_assert_equal(child2.length, 0)\n\t\t},\n\n\t\t'slice span - negative'( $ ) {\n\t\t\tconst span = new $mol_span('test.ts', '', 1, 3, 5)\n\t\t\tconst child = span.slice(-3, -1)\n\n\t\t\t$mol_assert_equal(child.row, 1)\n\t\t\t$mol_assert_equal(child.col, 5)\n\t\t\t$mol_assert_equal(child.length, 2)\n\t\t},\n\n\t\t'slice span - out of range'( $ ) {\n\t\t\tconst span = new $mol_span('test.ts', '', 1, 3, 5)\n\n\t\t\t$mol_assert_fail( ()=> span.slice(-1, 3), `End value '3' can't be less than begin value (test.ts#1:3/5)` )\n\t\t\t$mol_assert_fail( ()=> span.slice(1, 6), `End value '6' out of range (test.ts#1:3/5)` )\n\t\t\t$mol_assert_fail( ()=> span.slice(1, 10), `End value '10' out of range (test.ts#1:3/5)` )\n\t\t},\n\n\t\t'error handling'( $ ) {\n\t\t\tconst span = new $mol_span('test.ts', '', 1, 3, 4)\n\t\t\tconst error = span.error('Some error')\n\n\t\t\t$mol_assert_equal(error.message, 'Some error (test.ts#1:3/4)')\n\t\t}\n\n\t} )\n}\n","namespace $ {\n\t$mol_test( {\n\t\t\n\t\t'all cases of using maybe'() {\n\t\t\t$mol_assert_equal( $mol_maybe( 0 )[ 0 ] , 0 )\n\t\t\t$mol_assert_equal( $mol_maybe( false )[ 0 ] , false )\n\t\t\t$mol_assert_equal( $mol_maybe( null )[ 0 ] , void 0 )\n\t\t\t$mol_assert_equal( $mol_maybe( void 0 )[ 0 ] , void 0 )\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_maybe< number >( void 0 ).map( v => v.toString() )[ 0 ] , void 0 )\n\t\t\t$mol_assert_equal( $mol_maybe( 0 ).map( v => v.toString() )[ 0 ] , '0' )\n\t\t} ,\n\t\t\n\t} )\n}\n","namespace $ {\n\t\n\tfunction check( tree: $mol_tree2, ideal: string ) {\n\t\t$mol_assert_equal(\n\t\t\ttree.toString(),\n\t\t\t$$.$mol_tree2_from_string( ideal ).toString(),\n\t\t)\n\t}\n\t\n\t$mol_test( {\n\t\t\n\t\t'inserting'($) {\n\t\t\t\n\t\t\tcheck(\n\t\t\t\t$.$mol_tree2_from_string( `\n\t\t\t\t\ta b c d\n\t\t\t\t`).insert( $mol_tree2.struct('x') , 'a' , 'b' , 'c' ),\n\t\t\t\t`\n\t\t\t\t\ta b x\n\t\t\t\t`,\n\t\t\t)\n\t\t\tcheck(\n\t\t\t\t$.$mol_tree2_from_string(`\n\t\t\t\t\ta b\n\t\t\t\t`).insert( $mol_tree2.struct('x') , 'a' , 'b' , 'c' , 'd' ),\n\t\t\t\t`\n\t\t\t\t\ta b c x\n\t\t\t\t`,\n\t\t\t)\n\n\t\t\tcheck(\n\t\t\t\t$.$mol_tree2_from_string(`\n\t\t\t\t\ta b c d\n\t\t\t\t`)\n\t\t\t\t\t.insert( $mol_tree2.struct('x') , 0 , 0 , 0 ),\n\t\t\t\t`\n\t\t\t\t\ta b x\n\t\t\t\t`,\n\t\t\t)\n\t\t\tcheck(\n\t\t\t\t$.$mol_tree2_from_string(`\n\t\t\t\t\ta b\n\t\t\t\t`)\n\t\t\t\t\t.insert( $mol_tree2.struct('x') , 0 , 0 , 0 , 0 ),\n\t\t\t\t`\n\t\t\t\t\ta b \\\\\n\t\t\t\t\t\tx\n\t\t\t\t`,\n\t\t\t)\n\n\t\t\tcheck(\n\t\t\t\t$.$mol_tree2_from_string(`\n\t\t\t\t\ta b c d\n\t\t\t\t`)\n\t\t\t\t\t.insert( $mol_tree2.struct('x') , null , null , null ),\n\t\t\t\t`\n\t\t\t\t\ta b x\n\t\t\t\t`,\n\t\t\t)\n\t\t\tcheck(\n\t\t\t\t$.$mol_tree2_from_string(`\n\t\t\t\t\ta b\n\t\t\t\t`)\n\t\t\t\t\t.insert( $mol_tree2.struct('x') , null , null , null , null ),\n\t\t\t\t`\n\t\t\t\t\ta b \\\\\n\t\t\t\t\t\tx\n\t\t\t\t`,\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\t'updating'($) {\n\n\t\t\tcheck(\n\t\t\t\t$.$mol_tree2_from_string(`\n\t\t\t\t\ta b c d\n\t\t\t\t`).update( [], 'a', 'b', 'c' )[0],\n\t\t\t\t`\n\t\t\t\t\ta b\n\t\t\t\t`,\n\t\t\t)\n\t\t\t\n\t\t\tcheck(\n\t\t\t\t$.$mol_tree2_from_string(`\n\t\t\t\t\ta b c d\n\t\t\t\t`).update( [ $mol_tree2.struct('x') ] )[0],\n\t\t\t\t`\n\t\t\t\t\tx\n\t\t\t\t`,\n\t\t\t)\n\t\t\t\n\t\t\tcheck(\n\t\t\t\t$.$mol_tree2_from_string(`\n\t\t\t\t\ta b c d\n\t\t\t\t`).update( [ $mol_tree2.struct('x'), $mol_tree2.struct('y') ], 'a', 'b', 'c' )[0],\n\t\t\t\t`\n\t\t\t\t\ta b\n\t\t\t\t\t\tx\n\t\t\t\t\t\ty\n\t\t\t\t`,\n\t\t\t)\n\t\t\t\n\t\t} ,\n\n\t\t'deleting'($) {\n\t\t\t\n\t\t\tconst base = $.$mol_tree2_from_string(`\n\t\t\t\ta b c d\n\t\t\t`)\n\n\t\t\tcheck(\n\t\t\t\tbase.insert( null , 'a' , 'b' , 'c' ),\n\t\t\t\t`\n\t\t\t\t\ta b\n\t\t\t\t`,\n\t\t\t)\n\t\t\t\n\t\t\tcheck(\n\t\t\t\tbase.update( base.select( 'a', 'b', 'c', null ).kids , 'a' , 'b' , 'c' )[0],\n\t\t\t\t`\n\t\t\t\t\ta b d\n\t\t\t\t`,\n\t\t\t)\n\t\t\t\n\t\t\tcheck(\n\t\t\t\tbase.insert( null , 0, 0, 0 ),\n\t\t\t\t`\n\t\t\t\t\ta b\n\t\t\t\t`,\n\t\t\t)\n\t\t\t\n\t\t} ,\n\n\t\t'hack'($) {\n\n\t\t\tconst res = $.$mol_tree2_from_string(`\n\t\t\t\tfoo bar xxx\n\t\t\t`)\n\t\t\t.hack({\n\t\t\t\t'bar' : ( input , belt )=> [ input.struct( '777' , input.hack( belt ) ) ] ,\n\t\t\t})\n\n\t\t\t$mol_assert_equal( res.map( String ) , [ 'foo 777 xxx\\n' ] )\n\n\t\t} ,\n\n\t} )\t\n}\n","namespace $ {\n\t$mol_test( {\n\t\t\n\t\t'tree parsing'( $ ) {\n\t\t\t\n\t\t\t$mol_assert_equal( $.$mol_tree2_from_string( \"foo\\nbar\\n\" ).kids.length , 2 )\n\t\t\t$mol_assert_equal( $.$mol_tree2_from_string( \"foo\\nbar\\n\" ).kids[ 1 ].type , \"bar\" )\n\t\t\t$mol_assert_equal( $.$mol_tree2_from_string( \"foo\\n\\n\\n\" ).kids.length , 1 )\n\t\t\t\n\t\t\t$mol_assert_equal( $.$mol_tree2_from_string( \"=foo\\n\\\\bar\\n\" ).kids.length , 2 )\n\t\t\t$mol_assert_equal( $.$mol_tree2_from_string( \"=foo\\n\\\\bar\\n\" ).kids[ 1 ].value , \"bar\" )\n\t\t\t\n\t\t\t$mol_assert_equal( $.$mol_tree2_from_string( \"foo bar \\\\pol\\n\" ).kids[ 0 ].kids[ 0 ].kids[ 0 ].value , \"pol\" )\n\t\t\t$mol_assert_equal( $.$mol_tree2_from_string( \"foo bar\\n\\t\\\\pol\\n\\t\\\\men\\n\" ).kids[ 0 ].kids[ 0 ].kids[ 1 ].value , \"men\" )\n\t\t\t\n\t\t\t$mol_assert_equal( $.$mol_tree2_from_string( 'foo bar \\\\text\\n' ).toString() , 'foo bar \\\\text\\n' )\n\t\t} ,\n\n\t\t'Too many tabs'( $ ) {\n\n\t\t\tconst tree = `\n\t\t\t\tfoo\n\t\t\t\t\t\tbar\n\t\t\t`\n\n\t\t\t$mol_assert_fail( ()=> {\n\t\t\t\t$.$mol_tree2_from_string( tree , 'test' )\n\t\t\t}, 'Too many tabs\\ntest#3:1/6\\n!!!!!!\\n\\t\\t\\t\\t\\t\\tbar' )\n\n\t\t},\n\n\t\t'Too few tabs'( $ ) {\n\n\t\t\tconst tree = `\n\t\t\t\t\tfoo\n\t\t\t\tbar\n\t\t\t`\n\n\t\t\t$mol_assert_fail( ()=> {\n\t\t\t\t$.$mol_tree2_from_string( tree , 'test' )\n\t\t\t}, 'Too few tabs\\ntest#3:1/4\\n!!!!\\n\\t\\t\\t\\tbar' )\n\n\t\t},\n\n\t\t'Wrong nodes separator at start'( $ ) {\n\n\t\t\tconst tree = `foo\\n \\tbar\\n`\n\n\t\t\t$mol_assert_fail( ()=> {\n\t\t\t\t$.$mol_tree2_from_string( tree , 'test' )\n\t\t\t}, 'Wrong nodes separator\\ntest#2:1/2\\n!!\\n \\tbar' )\n\n\t\t},\n\n\t\t'Wrong nodes separator in the middle'( $ ) {\n\n\t\t\tconst tree = `foo  bar\\n`\n\n\t\t\t$mol_assert_fail( ()=> {\n\t\t\t\t$.$mol_tree2_from_string( tree , 'test' )\n\t\t\t}, 'Wrong nodes separator\\ntest#1:5/1\\n    !\\nfoo  bar' )\n\n\t\t},\n\n\t\t'Unexpected EOF, LF required'( $ ) {\n\n\t\t\tconst tree = `\tfoo`\n\n\t\t\t$mol_assert_fail( ()=> {\n\t\t\t\t$.$mol_tree2_from_string( tree , 'test' )\n\t\t\t}, 'Unexpected EOF, LF required\\ntest#1:5/1\\n\t   !\\n\tfoo' )\n\n\t\t},\n\n\t\t'Errors skip and collect'( $ ) {\n\n\t\t\tconst tree = `foo  bar`\n\t\t\tconst errors = [] as string[]\n\n\t\t\tconst $$ = $.$mol_ambient({\n\t\t\t\t$mol_fail: ( error: any ) => {\n\t\t\t\t\terrors.push( error.message )\n\t\t\t\t\treturn null as never\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tconst res = $$.$mol_tree2_from_string( tree , 'test' )\n\n\t\t\t$mol_assert_like( errors, [\n\t\t\t\t'Wrong nodes separator\\ntest#1:5/1\\n    !\\nfoo  bar',\n\t\t\t\t'Unexpected EOF, LF required\\ntest#1:9/1\\n        !\\nfoo  bar',\n\t\t\t] )\n\n\t\t\t$mol_assert_equal( res.toString(), 'foo bar\\n' )\n\n\t\t},\n\n\t} )\t\n}\n","namespace $ {\n\t$mol_test( {\n\t\t\n\t\t'fromJSON'() {\n\t\t\t$mol_assert_equal( $mol_tree2_from_json([]).toString() , '/\\n' )\n\t\t\t$mol_assert_equal( $mol_tree2_from_json([ false , true ]).toString() , '/\\n\\tfalse\\n\\ttrue\\n' )\n\t\t\t$mol_assert_equal( $mol_tree2_from_json([ 0 , 1 , 2.3 ]).toString() , '/\\n\\t0\\n\\t1\\n\\t2.3\\n' )\n\t\t\t$mol_assert_equal( $mol_tree2_from_json( new Uint16Array([ 1, 10, 256 ]) ).toString() , '\\\\\\x01\\x00\\n\\\\\\x00\\x00\\x01\\n' )\n\t\t\t$mol_assert_equal( $mol_tree2_from_json([ '' , 'foo' , 'bar\\nbaz' ]).toString() , '/\\n\\t\\\\\\n\\t\\\\foo\\n\\t\\\\\\n\\t\\t\\\\bar\\n\\t\\t\\\\baz\\n' )\n\t\t\t$mol_assert_equal( $mol_tree2_from_json({ 'foo' : false , 'bar\\nbaz' : 'lol' }).toString() , '*\\n\\tfoo false\\n\\t\\\\\\n\\t\\t\\\\bar\\n\\t\\t\\\\baz\\n\\t\\t\\\\lol\\n' )\n\t\t} ,\n\t\t\n\t} )\t\n}\n","namespace $ {\n\n\t$mol_test({\n\t\t\n\t\t'FQN of anon function'($) {\n\t\t\tconst $$ = Object.assign( $ , { $mol_func_name_test : ( ()=> ()=> {} )() } )\n\t\t\t$mol_assert_equal( $$.$mol_func_name_test.name , '' )\n\t\t\t$mol_assert_equal( $$.$mol_func_name( $$.$mol_func_name_test ) , '$mol_func_name_test' )\n\t\t\t$mol_assert_equal( $$.$mol_func_name_test.name , '$mol_func_name_test' )\n\t\t},\n\n\t})\n\n}\n","namespace $ {\n\t$mol_test({\n\t\t\n\t\t'Collect deps'() {\n\t\t\t\n\t\t\tconst pub1 = new $mol_wire_pub\n\t\t\tconst pub2 = new $mol_wire_pub\n\t\t\tconst sub = new $mol_wire_pub_sub\n\t\t\t\n\t\t\tconst bu1 = sub.track_on()\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tpub1.promote()\n\t\t\t\tpub2.promote()\n\t\t\t\tpub2.promote()\n\t\t\t\t\n\t\t\t} finally {\n\t\t\t\t\n\t\t\t\tsub.track_cut()\n\t\t\t\tsub.track_off( bu1 )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tpub1.emit()\n\t\t\tpub2.emit()\n\t\t\t\n\t\t\t$mol_assert_like( sub.pub_list, [ pub1, pub2, pub2 ] )\n\t\t\t\n\t\t\tconst bu2 = sub.track_on()\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tpub1.promote()\n\t\t\t\tpub1.promote()\n\t\t\t\tpub2.promote()\n\t\t\t\t\n\t\t\t} finally {\n\t\t\t\t\n\t\t\t\tsub.track_cut()\n\t\t\t\tsub.track_off( bu2 )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tpub1.emit()\n\t\t\tpub2.emit()\n\t\t\t\n\t\t\t$mol_assert_like( sub.pub_list, [ pub1, pub1, pub2 ] )\n\t\t\t\n\t\t},\n\t\t\n\t\t'cyclic detection'( $ ) {\n\t\t\t\n\t\t\tconst sub1 = new $mol_wire_pub_sub\n\t\t\tconst sub2 = new $mol_wire_pub_sub\n\t\t\t\n\t\t\tconst bu1 = sub1.track_on()\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tconst bu2 = sub2.track_on()\n\t\t\t\ttry {\n\t\t\t\t\t\n\t\t\t\t\t$mol_assert_fail( ()=> sub1.promote(), 'Circular subscription' )\n\t\t\t\t\t\n\t\t\t\t} finally {\n\t\t\t\t\t\n\t\t\t\t\tsub2.track_cut()\n\t\t\t\t\tsub2.track_off( bu2 )\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} finally {\n\t\t\t\t\n\t\t\t\tsub1.track_cut()\n\t\t\t\tsub1.track_off( bu1 )\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t},\n\n\t})\n}\n","namespace $ {\n\n\t/// @todo right orderinng\n\texport let $mol_after_mock_queue = [] as ( ()=> void )[]\n\n\texport function $mol_after_mock_warp() {\n\t\tconst queue = $mol_after_mock_queue.splice( 0 )\n\t\tfor( const task of queue ) task()\n\t}\n\n\texport class $mol_after_mock_commmon extends $mol_object2 {\n\n\t\tpromise = Promise.resolve()\n\t\tcancelled = false\n\t\tid : any\n\n\t\tconstructor( public task : ()=> void ) {\n\t\t\tsuper()\n\t\t\t$mol_after_mock_queue.push( task )\n\t\t}\n\n\t\tdestructor() {\n\t\t\tconst index = $mol_after_mock_queue.indexOf( this.task )\n\t\t\tif( index >= 0 )$mol_after_mock_queue.splice( index , 1 )\n\t\t}\n\n\t}\n\n\texport class $mol_after_mock_timeout extends $mol_after_mock_commmon {\n\n\t\tconstructor(\n\t\t\tpublic delay : number ,\n\t\t\ttask : ()=> void ,\n\t\t) {\n\t\t\tsuper( task )\n\t\t}\n\n\t}\n\t\n}\n","namespace $ {\n\n\t$mol_test_mocks.push( $ => {\n\t\t$.$mol_after_tick = $mol_after_mock_commmon as any as typeof $mol_after_tick\n\t})\n\n}\n","namespace $ {\n\n\t$mol_test({\n\t\t\n\t\t'Sync execution'() {\n\n\t\t\tclass Sync extends $mol_object2 {\n\t\t\t\t\n\t\t\t\t@ $mol_wire_method\n\t\t\t\tstatic calc( a: number, b: number ) {\n\t\t\t\t\treturn a + b\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_equal( Sync.calc( 1, 2 ), 3 )\n\t\t\t\n\t\t},\n\n\t\tasync 'async <=> sync'() {\n\t\t\t\n\t\t\tclass SyncAsync extends $mol_object2 {\n\t\t\t\t\n\t\t\t\tstatic async val( a: number ) {\n\t\t\t\t\treturn a\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstatic sum( a: number, b: number ) {\n\t\t\t\t\tconst syn = $mol_wire_sync( this )\n\t\t\t\t\treturn syn.val( a ) + syn.val( b )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstatic async calc( a: number, b: number ) {\n\t\t\t\t\treturn 5 + await $mol_wire_async( this ).sum( a, b )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_equal( await SyncAsync.calc( 1, 2 ), 8 )\n\n\t\t},\n\n\t\tasync 'Idempotence control'() {\n\n\t\t\tclass Idempotence extends $mol_object2 {\n\t\t\t\t\n\t\t\t\tstatic logs_idemp = 0\n\t\t\t\tstatic logs_unidemp = 0\n\t\t\t\t\n\t\t\t\t@ $mol_wire_method\n\t\t\t\tstatic log_idemp() {\n\t\t\t\t\tthis.logs_idemp += 1\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstatic log_unidemp() {\n\t\t\t\t\tthis.logs_unidemp += 1\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstatic async val( a: number ) {\n\t\t\t\t\treturn a\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstatic sum( a: number, b: number ) {\n\t\t\t\t\tthis.log_idemp()\n\t\t\t\t\tthis.log_unidemp()\n\t\t\t\t\tconst syn = $mol_wire_sync( this )\n\t\t\t\t\treturn syn.val( a ) + syn.val( b )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstatic async calc( a: number, b: number ) {\n\t\t\t\t\treturn 5 + await $mol_wire_async( this ).sum( a, b )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_equal( await Idempotence.calc( 1, 2 ), 8 )\n\t\t\t$mol_assert_equal( Idempotence.logs_idemp, 1 )\n\t\t\t$mol_assert_equal( Idempotence.logs_unidemp, 3 )\n\n\t\t},\n\n\t\tasync 'Error handling'() {\n\t\t\t\n\t\t\tclass Handle extends $mol_object2 {\n\t\t\t\t\n\t\t\t\tstatic async sum( a: number, b: number ){\n\t\t\t\t\t$mol_fail( new Error( 'test error ' + ( a + b ) ) )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstatic check() {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn $mol_wire_sync( Handle ).sum( 1, 2 )\n\t\t\t\t\t} catch( error: any ) {\n\t\t\t\t\t\tif( $mol_promise_like( error ) ) $mol_fail_hidden( error )\n\t\t\t\t\t\t$mol_assert_equal( error.message, 'test error 3' )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\t\n\t\t\tawait $mol_wire_async( Handle ).check()\n\t\t\t\n\t\t},\n\t\t\n\t})\n\t\n}\n","namespace $ {\n\n\t$mol_test({\n\t\t'test types'( $ ) {\n\t\t\tclass A {\n\t\t\t\tstatic a() {\n\t\t\t\t\treturn ''\n\t\t\t\t}\n\t\t\t\tstatic b() {\n\t\t\t\t\treturn $mol_wire_async(this).a()\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttype Check = $mol_type_assert<ReturnType<typeof A['b']>, Promise<string>>\n\t\t},\n\t\t\n\t\tasync 'Latest method calls wins'( $ ) {\n\t\t\t\n\t\t\tclass NameLogger extends $mol_object2 {\n\t\t\t\t\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\tstatic first = [] as string[]\n\t\t\t\tstatic last = [] as string[]\n\t\t\t\t\n\t\t\t\tstatic send( next: string ) {\n\t\t\t\t\t$mol_wire_sync( this.first ).push( next )\n\t\t\t\t\t$$.$mol_wait_timeout(0)\n\t\t\t\t\tthis.last.push( next )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tconst name = $mol_wire_async( NameLogger ).send\n\t\t\t\n\t\t\tname( 'john' )\n\t\t\tconst promise = name( 'jin' )\n\t\t\t\n\t\t\t$.$mol_after_mock_warp()\n\t\t\tawait promise\n\t\t\t\n\t\t\t$mol_assert_equal( NameLogger.first, [ 'john', 'jin' ] )\n\t\t\t$mol_assert_equal( NameLogger.last, [ 'jin' ] )\n\n\t\t},\n\n\t\tasync 'Latest function calls wins'( $ ) {\n\t\t\t\n\t\t\tconst first = [] as string[]\n\t\t\tconst last = [] as string[]\n\t\t\t\n\t\t\tfunction send_name( next: string ) {\n\t\t\t\t$mol_wire_sync( first ).push( next )\n\t\t\t\t$$.$mol_wait_timeout(0)\n\t\t\t\tlast.push( next )\n\t\t\t}\n\t\t\t\n\t\t\tconst name = $mol_wire_async( send_name )\n\t\t\t\n\t\t\tname( 'john' )\n\t\t\tconst promise = name( 'jin' )\n\t\t\t\n\t\t\t$.$mol_after_mock_warp()\n\t\t\tawait promise\n\t\t\t\n\t\t\t$mol_assert_equal( first, [ 'john', 'jin' ] )\n\t\t\t$mol_assert_equal( last, [ 'jin' ] )\n\t\t\t\n\t\t},\n\n\t})\n\t\n}\n","namespace $ {\n\t$mol_test({\n\t\t\n\t\t'auto name'() {\n\t\t\t\n\t\t\tclass Invalid extends $mol_error_mix {}\n\t\t\tconst mix = new Invalid( 'foo' )\n\t\t\t\n\t\t\t$mol_assert_equal( mix.name, 'Invalid_Error' )\n\t\t\t\n\t\t},\n\t\t\n\t\t'simpe mix'() {\n\t\t\t\n\t\t\tconst mix = new $mol_error_mix( 'foo', {},\n\t\t\t\tnew Error( 'bar' ),\n\t\t\t\tnew Error( 'lol' ),\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_equal( mix.message, 'foo' )\n\t\t\t$mol_assert_equal( mix.errors.map( e => e.message ), [ 'bar', 'lol' ] )\n\t\t\t\n\t\t},\n\t\t\n\t\t'provide additional info'() {\n\t\t\t\n\t\t\tclass Invalid extends $mol_error_mix<{\n\t\t\t\tvalue: string,\n\t\t\t\thint: string,\n\t\t\t}> {}\n\t\t\t\n\t\t\tconst mix: unknown = new $mol_error_mix( 'Wrong password', {},\n\t\t\t\tnew Invalid( 'Too short', { value: 'p@ssw0rd', hint: '> 8 letters' } ),\n\t\t\t\tnew Invalid( 'Too simple', { value: 'p@ssw0rd', hint: 'need capital letter' } ),\n\t\t\t)\n\t\t\t\n\t\t\tconst hints = [] as string[]\n\t\t\t\n\t\t\tif( mix instanceof $mol_error_mix ) {\n\t\t\t\tfor( const er of mix.errors ) {\n\t\t\t\t\tif( er instanceof Invalid ) {\n\t\t\t\t\t\thints.push( er.cause?.hint ?? '' )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_equal( hints, [ '> 8 letters', 'need capital letter' ] )\n\t\t\t\n\t\t},\n\t\t\n\t})\n}\n","namespace $ {\n\t$mol_test( {\n\t\t\n\t\t'init with overload'() {\n\t\t\tclass X extends $mol_object {\n\t\t\t\tfoo() {\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar x = X.make({\n\t\t\t\tfoo : ()=> 2 ,\n\t\t\t})\n\t\t\t\n\t\t\t$mol_assert_equal( x.foo() , 2 )\n\t\t} ,\n\t\t\t\n\t} )\n}\n","namespace $ {\n\t$mol_test( {\n\t\tasync 'exec timeout auto kill child process'($) {\n\t\t\tlet close_mock = () => {}\n\t\t\tconst error_message = 'Run error, timeout'\n\n\t\t\tfunction mol_run_spawn_sync_mock() {\n\t\t\t\treturn {\n\t\t\t\t\toutput: [],\n\t\t\t\t\tstdout: error_message,\n\t\t\t\t\tstderr: '',\n\t\t\t\t\tstatus: 0,\n\t\t\t\t\tsignal: null,\n\t\t\t\t\tpid: 123,\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction mol_run_spawn_mock() {\n\t\t\t\treturn {\n\t\t\t\t\ton(name: string, cb: () => void) {\n\t\t\t\t\t\tif (name === 'exit') close_mock = cb\n\t\t\t\t\t},\n\t\t\t\t\tkill() { close_mock() }\n\t\t\t\t} as any\n\t\t\t}\n\n\t\t\tconst context_mock = $.$mol_ambient({\n\t\t\t\t$mol_run_spawn_sync: mol_run_spawn_sync_mock,\n\t\t\t\t$mol_run_spawn: mol_run_spawn_mock\n\t\t\t})\n\n\t\t\tclass $mol_run_mock extends $mol_run {\n\t\t\t\tstatic get $() { return context_mock }\n\t\t\t\tstatic override async_enabled() {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet message = ''\n\t\t\ttry {\n\t\t\t\tconst res = await $mol_wire_async($mol_run_mock).spawn({\n\t\t\t\t\tcommand: 'sleep 10',\n\t\t\t\t\tdir: '.',\n\t\t\t\t\ttimeout: 10,\n\t\t\t\t\tenv: { 'MOL_RUN_ASYNC': '1' }\n\t\t\t\t})\n\t\t\t} catch (e) {\n\t\t\t\tmessage= (e as Error).message\n\t\t\t}\n\t\t\t$mol_assert_equal(message, error_message)\n\t\t}\n\t\t\n\t} )\n}\n","namespace $ {\n\n\t$mol_test({\n\n\t\t'test types'( $ ) {\n\t\t\tclass A {\n\t\t\t\tstatic a() {\n\t\t\t\t\treturn Promise.resolve('')\n\t\t\t\t}\n\n\t\t\t\tstatic b() {\n\t\t\t\t\treturn $mol_wire_sync(this).a()\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttype Check = $mol_type_assert<ReturnType<typeof A['b']>, string>\n\t\t},\n\n\t\tasync 'test method from host'( $ ) {\n\t\t\tlet count = 0\n\t\t\tclass A {\n\t\t\t\tstatic a() {\n\t\t\t\t\treturn $mol_wire_sync(this).b()\n\t\t\t\t}\n\n\t\t\t\tstatic b() { return Promise.resolve(++count) }\n\t\t\t}\n\n\t\t\t\n\t\t\t$mol_assert_equal(await $mol_wire_async(A).a(), 1, count)\n\n\t\t},\n\n\t\tasync 'test function'( $ ) {\n\t\t\tlet count = 0\n\t\t\tclass A {\n\t\t\t\tstatic a() {\n\t\t\t\t\treturn $mol_wire_sync(this.b)()\n\t\t\t\t}\n\n\t\t\t\tstatic b() { return Promise.resolve(++count) }\n\t\t\t}\n\n\t\t\t\n\t\t\t$mol_assert_equal(await $mol_wire_async(A).a(), 1, count)\n\n\t\t},\n\n\t\tasync 'test construct itself'( $ ) {\n\t\t\tclass A {\n\t\t\t\tstatic instances = [] as A[]\n\n\t\t\t\tstatic a() {\n\t\t\t\t\tconst a = new ($mol_wire_sync(A))()\n\t\t\t\t\tthis.instances.push( a )\n\t\t\t\t\t$mol_wire_sync(this).b()\n\t\t\t\t}\n\n\t\t\t\tstatic b() { return Promise.resolve() }\n\t\t\t}\n\n\t\t\tawait $mol_wire_async(A).a()\n\t\t\t$mol_assert_equal(A.instances.length, 2)\n\t\t\t$mol_assert_equal(A.instances[0] instanceof A)\n\n\t\t\t$mol_assert_equal(A.instances[0], A.instances[1])\n\n\t\t}\n\t})\n\n}\n\n","namespace $ {\n\t$mol_test({\n\t\t'encode utf8 string'() {\n\t\t\tconst str = 'Hello, ΧΨΩЫ'\n\t\t\tconst encoded = new Uint8Array( [ 72, 101, 108, 108, 111, 44, 32, 206, 167, 206, 168, 206, 169, 208, 171 ] )\n\n\t\t\t$mol_assert_like( $mol_charset_encode(str), encoded )\n\t\t},\n\t})\n}\n","namespace $ {\n\texport class $mol_promise<Result = void> extends Promise<Result> {\n\t\tdone: (value: Result | PromiseLike<Result>) => void\n\t\tfail: (reason?: any) => void\n\n\t\tconstructor(\n\t\t\texecutor?: (\n\t\t\t\tdone: (value: Result | PromiseLike<Result>) => void,\n\t\t\t\tfail: (reason?: any) => void\n\t\t\t) => void\n\t\t) {\n\t\t\tlet done: (value: Result | PromiseLike<Result>) => void\n\t\t\tlet fail: (reason?: any) => void\n\n\t\t\tsuper((d, f) => {\n\t\t\t\tdone = d\n\t\t\t\tfail = f\n\t\t\t\texecutor?.(d, f)\n\t\t\t})\n\n\t\t\tthis.done = done!\n\t\t\tthis.fail = fail!\n\t\t}\n\n\t}\n\t\n}\n","namespace $ {\n\n\t$mol_test_mocks.push( $ => {\n\t\t$.$mol_after_timeout = $mol_after_mock_timeout as any as typeof $mol_after_timeout\n\t})\n\n}\n","namespace $ {\n\n\tdeclare function requestIdleCallback( task : ()=> void , options? : { timeout : number } ) : any\n\tdeclare function cancelIdleCallback( id : any ) : void\n\n\texport class $mol_after_work extends $mol_object2 {\n\n\t\tid : any\n\n\t\tconstructor(\n\t\t\tpublic delay : number ,\n\t\t\tpublic task : ()=> void ,\n\t\t) {\n\t\t\tsuper()\n\t\t\tthis.id = requestIdleCallback( task , { timeout : delay } )\n\t\t}\n\n\t\tdestructor() {\n\t\t\tcancelIdleCallback( this.id )\n\t\t}\n\n\t}\n\t\n\tif( typeof requestIdleCallback !== 'function' ) {\n\t\t$.$mol_after_work = $mol_after_timeout\n\t}\n\t\n}\n","namespace $ {\n\n\t$mol_test_mocks.push( $ => {\n\t\t$.$mol_after_work = $mol_after_mock_timeout as any as typeof $mol_after_work\n\t})\n\n}\n","namespace $ {\n\t\n\texport function $mol_wait_rest_async( this: $ ) {\n\t\treturn new Promise( done => {\n\t\t\tnew this.$mol_after_work( 16 , ()=> done( null ) )\n\t\t} )\n\t}\n\t\n\texport function $mol_wait_rest( this: $ ) {\n\t\treturn this.$mol_wire_sync( this ).$mol_wait_rest_async()\n\t}\n\t\n}\n","namespace $.$$ {\n\t\n\t$mol_test_mocks.push( $ => {\n\t\t$.$mol_wait_timeout = function $mol_wait_timeout_mock( this: $, timeout: number ) { }\n\t\t$.$mol_wait_timeout_async = async function $mol_wait_timeout_async_mock( this: $, timeout: number ) {}\n\t} )\n\n}\n","namespace $ {\n\t\n\texport function $mol_wait_timeout_async( this: $, timeout: number ): Promise< void > {\n\t\tconst promise = new $mol_promise()\n\t\tconst task = new this.$mol_after_timeout( timeout , ()=> promise.done() )\n\t\treturn Object.assign( promise, {\n\t\t\tdestructor: ()=> task.destructor()\n\t\t} )\n\t}\n\t\n\texport function $mol_wait_timeout( this: $, timeout: number ) {\n\t\treturn this.$mol_wire_sync( this ).$mol_wait_timeout_async( timeout )\n\t}\n\t\n}\n","namespace $.$$ {\n\t\n\t$mol_test_mocks.push( $ => {\n\t\t$.$mol_wait_rest = function $mol_wait_rest_mock( this: $ ) { }\n\t\t$.$mol_wait_rest_async = async function $mol_wait_rest_async_mock( this: $ ) {}\n\t} )\n\n}\n","namespace $ {\n\t$mol_test({\n\t\t\n\t\t// https://github.com/nin-jin/slides/tree/master/reactivity#component-states\n\t\t'Cached channel' ($) {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic value( next = 1 ) {\n\t\t\t\t\treturn next + 1\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_equal( App.value(), 2 )\n\n\t\t\tApp.value( 2 )\n\t\t\t$mol_assert_equal( App.value(), 3 )\n\n\t\t},\n\n\t\t'Read Pushed' ($) {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic value( next = 0 ) {\n\t\t\t\t\treturn next\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_equal( App.value( 1 ), 1 )\n\t\t\t$mol_assert_equal( App.value(), 1 )\n\n\t\t},\n\n\t\t'Mem overrides mem' ($) {\n\n\t\t\tclass Base extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic value( next = 1 ) {\n\t\t\t\t\treturn next + 1\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tclass Middle extends Base {\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic value( next?: number ) {\n\t\t\t\t\treturn super.value( next ) + 1\n\t\t\t\t}\n\t\t\t\n\t\t\t}\n\t\t\t\t\n\t\t\tclass App extends Middle {\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic value( next?: number ) {\n\t\t\t\t\treturn super.value( next ) * 3\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_equal( App.value(), 9 )\n\t\t\t\n\t\t\t$mol_assert_equal( App.value( 5 ), 21 )\n\t\t\t$mol_assert_equal( App.value(), 21 )\n\n\t\t},\n\n\t\t// https://github.com/nin-jin/slides/tree/master/reactivity#wish-consistency\n\t\t'Auto recalculation of cached values'( $ ) {\n\t\t\t\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic xxx( next? : number ) {\n\t\t\t\t\treturn next || 1\n\t\t\t\t}\n\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic yyy() {\n\t\t\t\t\treturn this.xxx() + 1\n\t\t\t\t}\n\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic zzz() {\n\t\t\t\t\treturn this.yyy() + 1\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_equal( App.yyy(), 2 )\n\t\t\t$mol_assert_equal( App.zzz(), 3 )\n\n\t\t\tApp.xxx( 5 )\n\t\t\t$mol_assert_equal( App.zzz(), 7 )\n\n\t\t},\n\n\t\t// https://github.com/nin-jin/slides/tree/master/reactivity#wish-reasonability\n\t\t'Skip recalculation when actually no dependency changes'( $ ) {\n\t\t\t\n\t\t\tconst log = [] as string[]\n\t\t\t\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic xxx( next? : number ) {\n\t\t\t\t\tlog.push( 'xxx' )\n\t\t\t\t\treturn next || 1\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic yyy() {\n\t\t\t\t\tlog.push( 'yyy' )\n\t\t\t\t\treturn [ Math.sign( this.xxx() ) ]\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic zzz() {\n\t\t\t\t\tlog.push( 'zzz' )\n\t\t\t\t\treturn this.yyy()[0] + 1\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t\n\t\t\tApp.zzz()\n\t\t\t$mol_assert_like( log, [ 'zzz', 'yyy', 'xxx' ] )\n\t\t\t\n\t\t\tApp.xxx( 5 )\n\t\t\t$mol_assert_like( log, [ 'zzz', 'yyy', 'xxx', 'xxx' ] )\n\t\t\t\n\t\t\tApp.zzz()\n\t\t\t$mol_assert_like( log, [ 'zzz', 'yyy', 'xxx', 'xxx', 'yyy' ] )\n\n\t\t},\n\n\t\t// https://github.com/nin-jin/slides/tree/master/reactivity#flow-auto\n\t\t'Flow: Auto'( $ ) {\n\n\t\t\tclass App extends $mol_object2 {\n\t\t\t\t\n\t\t\t\tstatic get $() { return $ }\n\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic source( next = 1 ) { return next }\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic condition( next = true ) { return next }\n\t\t\t\t\n\t\t\t\tstatic counter = 0\n\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic result() {\n\t\t\t\t\tconst res = this.condition() ? this.source() : 0\n\t\t\t\t\treturn res + this.counter ++\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.result() , 1 )\n\t\t\t$mol_assert_equal( App.counter , 1 )\n\t\t\t\n\t\t\tApp.source( 10 )\n\t\t\t$mol_assert_equal( App.result() , 11 )\n\t\t\t$mol_assert_equal( App.counter , 2 )\n\t\t\t\n\t\t\tApp.condition( false )\n\t\t\t$mol_assert_equal( App.result() , 2 )\n\t\t\t$mol_assert_equal( App.counter , 3 )\n\n\t\t\t$mol_wire_fiber.sync()\n\t\t\t$mol_assert_equal( App.source() , 1 )\n\t\t\t\n\t\t\tApp.source( 20 )\n\t\t\t$mol_assert_equal( App.result() , 2 )\n\t\t\t$mol_assert_equal( App.counter , 3 )\n\n\t\t\tApp.condition( true )\n\t\t\t$mol_assert_equal( App.result() , 23 )\n\t\t\t$mol_assert_equal( App.counter , 4 )\n\n\t\t} ,\n\n\t\t// https://github.com/nin-jin/slides/tree/master/reactivity#dupes-equality\n\t\t'Dupes: Equality'( $ ) {\n\t\t\t\n\t\t\tlet counter = 0\n\t\t\t\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic foo( next? : { numbs: number[] } ) {\n\t\t\t\t\treturn next ?? { numbs: [ 1 ] }\n\t\t\t\t}\n\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic bar() {\n\t\t\t\t\treturn { ... this.foo(), count: ++ counter }\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_like( App.bar(), { numbs: [ 1 ], count: 1 } )\n\n\t\t\tApp.foo({ numbs: [ 1 ] })\n\t\t\t$mol_assert_like( App.bar(), { numbs: [ 1 ], count: 1 } )\n\t\t\t\n\t\t\tApp.foo({ numbs: [ 2 ] })\n\t\t\t$mol_assert_like( App.bar(), { numbs: [ 2 ], count: 2 } )\n\n\t\t},\n\n\t\t// https://github.com/nin-jin/slides/tree/master/reactivity#cycle-fail\n\t\t'Cycle: Fail'( $ ) {\n\t\t\n\t\t\tclass App extends $mol_object2 {\n\t\t\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic foo() : number {\n\t\t\t\t\treturn this.bar() + 1\n\t\t\t\t}\n\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic bar() : number {\n\t\t\t\t\treturn this.foo() + 1\n\t\t\t\t}\n\t\t\n\t\t\t\t@ $mol_wire_method\n\t\t\t\tstatic test() {\n\t\t\t\t\t$mol_assert_fail( ()=> App.foo(), 'Circular subscription' )\n\t\t\t\t}\t\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tApp.test()\n\t\t} ,\n\n\t\t// https://github.com/nin-jin/slides/tree/master/reactivity#wish-stability\n\t\t// 'Update deps on push'( $ ) {\n\t\t\n\t\t// \tclass App extends $mol_object2 {\n\t\t\n\t\t// \t\tstatic $ = $\n\t\t\t\t\n\t\t// \t\t@ $mol_wire_solo\n\t\t// \t\tstatic left( next = false ) {\n\t\t// \t\t\treturn next\n\t\t// \t\t}\n\t\t\n\t\t// \t\t@ $mol_wire_solo\n\t\t// \t\tstatic right( next = false ) {\n\t\t// \t\t\treturn next\n\t\t// \t\t}\n\t\t\n\t\t// \t\t@ $mol_wire_solo\n\t\t// \t\tstatic res( next?: boolean ) {\n\t\t// \t\t\treturn this.left( next ) && this.right()\n\t\t// \t\t}\n\t\t\n\t\t// \t}\n\t\t\t\n\t\t// \t$mol_assert_equal( App.res(), false )\n\t\t// \t$mol_assert_equal( App.res( true ), false )\n\t\t\t\n\t\t// \t$mol_assert_equal( App.right( true ), true )\n\t\t// \t$mol_assert_equal( App.res(), true )\n\t\t\t\n\t\t// } ,\n\t\t\n\t\t// https://github.com/nin-jin/slides/tree/master/reactivity#wish-stability\n\t\t'Different order of pull and push'( $ ) {\n\t\t\n\t\t\tclass App extends $mol_object2 {\n\t\t\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic store( next = 0 ) {\n\t\t\t\t\treturn next\n\t\t\t\t}\n\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic fast( next?: number ) {\n\t\t\t\t\treturn this.store( next )\n\t\t\t\t}\n\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic slow( next?: number ) {\n\t\t\t\t\tif( next !== undefined ) this.slow() // enforce pull before push\n\t\t\t\t\treturn this.store( next )\n\t\t\t\t}\n\t\t\n\t\t\t}\n\t\t\t\n\t\t\tApp.fast()\n\t\t\t$mol_assert_equal( App.slow( 666 ), 666 )\n\t\t\t$mol_assert_equal( App.fast(), App.slow(), 666 )\n\t\t\t\n\t\t\tApp.store( 777 )\n\t\t\t$mol_assert_equal( App.fast(), App.slow(), 777 )\n\t\t\t\n\t\t} ,\n\t\t\n\t\t// https://github.com/nin-jin/slides/tree/master/reactivity#wish-stability\n\t\t'Actions inside invariant'( $ ) {\n\t\t\n\t\t\tclass App extends $mol_object2 {\n\t\t\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic count( next = 0 ) {\n\t\t\t\t\treturn next\n\t\t\t\t}\n\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic count2() {\n\t\t\t\t\treturn this.count()\n\t\t\t\t}\n\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic res() {\n\t\t\t\t\tconst count = this.count2()\n\t\t\t\t\tif( !count ) this.count( count + 1 )\n\t\t\t\t\treturn count + 1\n\t\t\t\t}\n\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_like( App.res(), 1 )\n\t\t\t\n\t\t\tApp.count( 5 )\n\t\t\t$mol_assert_like( App.res(), 6 )\n\n\t\t} ,\n\t\t\n\t\tasync 'Toggle with async'( $ ) {\n\t\t\n\t\t\tclass App extends $mol_object2 {\n\t\t\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic checked( next = false ) {\n\t\t\t\t\t$$.$mol_wait_timeout(0)\n\t\t\t\t\treturn next\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@ $mol_wire_method\n\t\t\t\tstatic toggle() {\n\t\t\t\t\tconst prev = this.checked()\n\t\t\t\t\t$mol_assert_unique( this.checked( !prev ), prev )\n\t\t\t\t\t// $mol_assert_equal( this.checked() , prev )\n\t\t\t\t}\n\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic res() {\n\t\t\t\t\treturn this.checked()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@ $mol_wire_method\n\t\t\t\tstatic test() {\n\t\t\t\t\t\n\t\t\t\t\t$mol_assert_equal( App.res(), false )\n\t\t\t\t\t\n\t\t\t\t\tApp.toggle()\n\t\t\t\t\t$mol_assert_equal( App.res(), true )\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\n\t\t\t}\n\t\t\t\n\t\t\tawait $mol_wire_async( App ).test()\n\t\t\t\n\t\t} ,\n\n\t\t// // https://github.com/nin-jin/slides/tree/master/reactivity#wish-stability\n\t\t// 'Stable order of multiple root'( $ ) {\n\t\t\n\t\t// \tclass App extends $mol_object2 {\n\t\t\n\t\t// \t\tstatic $ = $\n\t\t\t\t\n\t\t// \t\tstatic counter = 0\n\t\t\t\t\n\t\t// \t\t@ $mol_wire_solo\n\t\t// \t\tstatic left_trigger( next = 0 ) {\n\t\t// \t\t\treturn next\n\t\t// \t\t}\n\t\t\n\t\t// \t\t@ $mol_wire_solo\n\t\t// \t\tstatic left_root() {\n\t\t// \t\t\tthis.left_trigger()\n\t\t// \t\t\treturn ++ this.counter\n\t\t// \t\t}\n\t\t\t\t\n\t\t// \t\t@ $mol_wire_solo\n\t\t// \t\tstatic right_trigger( next = 0 ) {\n\t\t// \t\t\treturn next\n\t\t// \t\t}\n\t\t\t\t\n\t\t// \t\t@ $mol_wire_solo\n\t\t// \t\tstatic right_root() {\n\t\t// \t\t\tthis.right_trigger()\n\t\t// \t\t\treturn ++ this.counter\n\t\t// \t\t}\n\t\t\n\t\t// \t}\n\t\t\t\n\t\t// \t$mol_assert_equal( App.left_root(), 1 )\n\t\t// \t$mol_assert_equal( App.right_root(), 2 )\n\t\t\t\n\t\t// \tApp.right_trigger( 1 )\n\t\t// \tApp.left_trigger( 1 )\n\t\t\t\n\t\t// \t$mol_wire_fiber.sync()\n\t\t\t\n\t\t// \t$mol_assert_equal( App.right_root(), 4 )\n\t\t// \t$mol_assert_equal( App.left_root(), 3 )\n\n\t\t// } ,\n\n\t\t// https://github.com/nin-jin/slides/tree/master/reactivity#error-store\n\t\t'Restore after error'( $ ) {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic get $() { return $ }\n\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic condition( next = false ) { return next }\n\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic broken() {\n\t\t\t\t\t\n\t\t\t\t\tif( this.condition() ) {\n\t\t\t\t\t\t$mol_fail( new Error( 'test error' ) )\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic result() {\n\t\t\t\t\treturn this.broken()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.result() , 1 )\n\t\t\t\n\t\t\tApp.condition( true )\n\t\t\t$mol_assert_fail( ()=> App.result(), 'test error' )\n\t\t\t\n\t\t\tApp.condition( false )\n\t\t\t$mol_assert_equal( App.result() , 1 )\n\n\t\t} ,\n\t\n\t\tasync 'Wait for data'($) {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\tstatic async source() {\n\t\t\t\t\treturn 'Jin'\n\t\t\t\t}\n\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic middle() {\n\t\t\t\t\treturn $mol_wire_sync( this ).source()\n\t\t\t\t}\n\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic target() {\n\t\t\t\t\treturn this.middle()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@ $mol_wire_method\n\t\t\t\tstatic test() {\n\t\t\t\t\t$mol_assert_equal( App.target() , 'Jin' )\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tawait $mol_wire_async( App ).test()\n\t\t},\n\n\t\t'Auto destroy on long alone'( $ ) {\n\n\t\t\tlet destroyed = false\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic showing( next = true ) {\n\t\t\t\t\treturn next\n\t\t\t\t}\n\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic details() {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdestructor() {\n\t\t\t\t\t\t\tdestroyed = true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic render() {\n\t\t\t\t\treturn this.showing() ? this.details() : null\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst details = App.render()\n\t\t\t$mol_assert_ok( details )\n\n\t\t\tApp.showing( false )\n\t\t\t$mol_assert_not( App.render() )\n\t\t\t\n\t\t\tApp.showing( true )\n\t\t\t$mol_assert_equal( App.render() , details )\n\t\t\t\n\t\t\t$mol_wire_fiber.sync()\n\t\t\t$mol_assert_not( destroyed )\n\t\t\t\n\t\t\tApp.showing( false )\n\t\t\t$mol_wire_fiber.sync()\n\t\t\t$mol_assert_ok( destroyed )\n\n\t\t\tApp.showing( true )\n\t\t\t$mol_assert_unique( App.render() , details )\n\t\t\t\n\t\t},\n\n\t\t// https://github.com/nin-jin/slides/tree/master/reactivity#wish-stability\n\t\tasync 'Hold pubs while wait async task'($) {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\tstatic counter = 0\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic resets( next?: null ): number {\n\t\t\t\t\treturn ( $mol_wire_probe( ()=> this.resets() ) ?? -1 ) + 1\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tstatic async wait() { }\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic value() {\n\t\t\t\t\treturn ++ this.counter\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic result() {\n\t\t\t\t\tif( this.resets() ) $mol_wire_sync( this ).wait()\n\t\t\t\t\treturn this.value()\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_equal( App.result() , 1 )\n\t\t\t\n\t\t\tApp.resets( null )\n\t\t\t$mol_wire_fiber.sync()\n\t\t\t$mol_assert_equal( await $mol_wire_async( App ).result() , 1 )\n\t\t\t\n\t\t},\n\n\t\t'Owned value has js-path name' () {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic title() {\n\t\t\t\t\treturn new $mol_object2\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t$mol_assert_equal( `${ App.title() }` , 'App.title<>' )\n\n\t\t} ,\n\n\t\t'Unsubscribe from temp pubs on complete' ($) {\n\n\t\t\tclass Random extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\n\t\t\t\t@ $mol_wire_method\n\t\t\t\tstatic seed() {\n\t\t\t\t\treturn Math.random()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic resets( next?: null ) {\n\t\t\t\t\treturn Math.random()\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic value() {\n\t\t\t\t\tthis.resets()\n\t\t\t\t\treturn this.seed()\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t\n\t\t\tconst first = Random.value()\n\t\t\t\n\t\t\tRandom.resets( null )\n\t\t\t$mol_assert_unique( Random.value(), first )\n\n\t\t} ,\n\n\t})\n}\n","namespace $ {\n\t$mol_test({\n\t\t\n\t\tasync 'Error caching' ($) {\n\t\t\tconst next_cached = 123\n\n\t\t\tclass Some extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\n\t\t\t\t@ $mol_wire_plex\n\t\t\t\tstatic data( id: string, next?: unknown): unknown {\n\t\t\t\t\tif (next) return next as never\n\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t$mol_wire_async(this).data(id, next_cached)\n\t\t\t\t\t}, 10)\n\n\t\t\t\t\t$mol_fail_hidden(new Promise(() => {}))\n\t\t\t\t}\n\n\t\t\t\t@ $mol_wire_method\n\t\t\t\tstatic run() {\n\t\t\t\t\treturn this.data('1')\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst val = await $mol_wire_async(Some).run()\n\t\t\t$mol_assert_equal(val, next_cached)\n\t\t} ,\n\n\t\t'Memoize by single simple key' ($) {\n\n\t\t\tclass Team extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\n\t\t\t\t@ $mol_wire_plex\n\t\t\t\tstatic user_name( user: string , next?: string ) {\n\t\t\t\t\treturn next ?? user\n\t\t\t\t}\n\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic user_names() {\n\t\t\t\t\treturn [\n\t\t\t\t\t\tthis.user_name( 'jin' ),\n\t\t\t\t\t\tthis.user_name( 'john' ),\n\t\t\t\t\t]\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_like( Team.user_names(), [ 'jin', 'john' ] )\n\t\t\t\n\t\t\tTeam.user_name( 'jin', 'JIN' )\n\t\t\t$mol_assert_like( Team.user_names(), [ 'JIN', 'john' ] )\n\n\t\t} ,\n\n\t\t'Memoize by single complex key' ($) {\n\n\t\t\tclass Map extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\n\t\t\t\t@ $mol_wire_plex\n\t\t\t\tstatic tile( pos: [ number, number ] ) {\n\t\t\t\t\treturn new String( `/tile=${pos}` )\n\t\t\t\t}\n\n\t\t\t\t@ $mol_wire_method\n\t\t\t\tstatic test() {\n\t\t\t\t\t\n\t\t\t\t\t$mol_assert_like( this.tile([0,1]), new String( '/tile=0,1' ) )\n\t\t\t\t\t$mol_assert_equal( this.tile([0,1]), this.tile([0,1]) )\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\n\t\t\tMap.test()\n\t\t} ,\n\n\t\t'Owned value has js-path name' () {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\t@ $mol_wire_plex\n\t\t\t\tstatic like( friend: number ) {\n\t\t\t\t\treturn new $mol_object2\n\t\t\t\t}\n\n\t\t\t\t@ $mol_wire_plex\n\t\t\t\tstatic relation( [ friend, props ]: [ number, [ number ] ] ) {\n\t\t\t\t\treturn new $mol_object2\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t$mol_assert_equal( `${ App.like(123) }` , 'App.like<123>' )\n\t\t\t$mol_assert_equal( `${ App.relation([123,[456]]) }` , 'App.relation<[123,[456]]>' )\n\n\t\t} ,\n\n\t\t'Deep deps' ($) {\n\n\t\t\tclass Fib extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\t\n\t\t\t\tstatic sums = 0\n\n\t\t\t\t@ $mol_wire_plex\n\t\t\t\tstatic value( index: number , next?: number ): number {\n\t\t\t\t\tif( next ) return next\n\t\t\t\t\tif( index < 2 ) return 1\n\t\t\t\t\t++ this.sums\n\t\t\t\t\treturn this.value( index - 1 ) + this.value( index - 2 )\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_equal( Fib.value( 4 ), 5 )\n\t\t\t$mol_assert_equal( Fib.sums, 3 )\n\t\t\t\n\t\t\tFib.value( 1, 2 )\n\t\t\t$mol_assert_equal( Fib.value( 4 ), 8 )\n\t\t\t$mol_assert_equal( Fib.sums, 6 )\n\n\t\t} ,\n\n\t})\n}\n","namespace $ {\n\t$mol_test({\n\t\t\n\t\t'Previous value'() {\n\n\t\t\tclass Cache extends $mol_object2 {\n\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic store( next?: Record< string, number > ): typeof next {\n\t\t\t\t\tif( !next ) return {}\n\t\t\t\t\treturn {\n\t\t\t\t\t\t... $mol_wire_probe( ()=> this.store() ) ?? {},\n\t\t\t\t\t\t... next,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_like( Cache.store(), {} )\n\t\t\t\n\t\t\t$mol_assert_like( Cache.store({ foo: 666 }), { foo: 666 } )\n\t\t\t$mol_assert_like( Cache.store({ bar: 777 }), { foo: 666, bar: 777 } )\n\n\t\t} ,\n\t\t\n\t})\n}\n","namespace $ {\n\t$mol_test({\n\t\t'decode utf8 string'() {\n\t\t\tconst str = 'Hello, ΧΨΩЫ'\n\t\t\tconst encoded = new Uint8Array( [ 72, 101, 108, 108, 111, 44, 32, 206, 167, 206, 168, 206, 169, 208, 171 ] )\n\n\t\t\t$mol_assert_equal( $mol_charset_decode(encoded), str )\n\t\t\t$mol_assert_equal( $mol_charset_decode(encoded, 'utf8'), str )\n\t\t},\n\n\t\t'decode empty string'() {\n\t\t\tconst encoded = new Uint8Array( [] )\n\n\t\t\t$mol_assert_equal( $mol_charset_decode(encoded), '' )\n\t\t},\n\t})\n}\n","namespace $ {\n\t$mol_test( { \n\t\t\n\t\t'const returns stored value'() {\n\t\t\n\t\t\tconst foo = { bar : $mol_const( Math.random() ) }\n\t\t\t\n\t\t\t$mol_assert_equal( foo.bar() , foo.bar() )\n\t\t\t$mol_assert_equal( foo.bar() , foo.bar['()'] )\n\t\t\t\n\t\t} ,\n\n\t} )\n}\n","/** @jsx $mol_jsx */\nnamespace $ {\n\t$mol_test({\n\t\t\n\t\t'Primitives'() {\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_key( null ), 'null' )\n\t\t\t$mol_assert_equal( $mol_key( false ), 'false' )\n\t\t\t$mol_assert_equal( $mol_key( true ), 'true' )\n\t\t\t$mol_assert_equal( $mol_key( 0 ), '0' )\n\t\t\t$mol_assert_equal( $mol_key( 1n<<64n ), '18446744073709551616n' )\n\t\t\t$mol_assert_equal( $mol_key( '' ), '\"\"' )\n\t\t\t\n\t\t},\n\t\t\n\t\t'Array & POJO'() {\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_key([ null ]), '[null]' )\n\t\t\t$mol_assert_equal( $mol_key({ foo: 0 }), '{\"foo\":0}' )\n\t\t\t$mol_assert_equal( $mol_key({ foo: [false] }), '{\"foo\":[false]}' )\n\t\t\t\n\t\t},\n\t\t\n\t\t'Uint8Array'() {\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_key( new Uint8Array([ 1, 2 ]) ), '[1,2]' )\n\t\t\t$mol_assert_equal( $mol_key([ new Uint8Array([ 1, 2 ]) ]), '[[1,2]]' )\n\t\t\t$mol_assert_equal( $mol_key({ foo: new Uint8Array([ 1, 2 ]) }), '{\"foo\":[1,2]}' )\n\t\t\t\n\t\t},\n\t\t\n\t\t'Function'() {\n\t\t\t\n\t\t\tconst func = ()=> {}\n\t\t\t$mol_assert_equal( $mol_key( func ), $mol_key( func ) )\n\t\t\t$mol_assert_unique( $mol_key( func ), $mol_key( ()=> {} ) )\n\t\t\t\n\t\t},\n\t\t\n\t\t'Objects'() {\n\t\t\t\n\t\t\tclass User {}\n\t\t\tconst jin = new User()\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_key( jin ), $mol_key( jin ) )\n\t\t\t$mol_assert_unique( $mol_key( jin ), $mol_key( new User() ) )\n\t\t\t\n\t\t},\n\t\t\n\t\t'Elements'() {\n\t\t\t\n\t\t\tconst foo = <div>bar</div>\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_key( foo ), $mol_key( foo ) )\n\t\t\t$mol_assert_unique( $mol_key( foo ), $mol_key( <div>bar</div> ) )\n\t\t\t\n\t\t},\n\t\t\n\t\t'Custom JSON representation'() {\n\t\t\t\n\t\t\tclass User {\n\t\t\t\tconstructor( public name: string, public age: number ) {}\n\t\t\t\ttoJSON() { return { name: this.name } }\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_key( new User( 'jin', 18 ) ), '{\"name\":\"jin\"}' )\n\t\t\t\n\t\t},\n\t\t\n\t\t'Special native classes'() {\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_key( new Date( 'xyz' ) ), 'null' )\n\t\t\t$mol_assert_equal( $mol_key( new Date( '2001-01-02T03:04:05.678Z' ) ), '\"2001-01-02T03:04:05.678Z\"' )\n\t\t\t\n\t\t\t$mol_assert_equal( $mol_key( /./ ), '\"/./\"' )\n\t\t\t$mol_assert_equal( $mol_key( /\\./gimsu ), '\"/\\\\\\\\./gimsu\"' )\n\t\t\t\n\t\t},\n\t\t\n\t})\n}\n","namespace $ {\n\n\t$mol_test_mocks.push( $ => {\n\t\t$.$mol_after_frame = $mol_after_mock_commmon as any as typeof $mol_after_frame\n\t})\n\n}\n","namespace $ {\n\t\n\t/** Watch and logs reactive states. Logger automatically added to test bundle which is adding to `test.html`. */\n\texport class $mol_wire_log extends $mol_object2 {\n\t\t\n\t\t@ $mol_mem\n\t\tstatic watch( task?: ()=> any ) {\n\t\t\treturn task\n\t\t}\n\t\t\n\t\t@ $mol_mem_key\n\t\tstatic track( fiber: $mol_wire_fiber< any, any, any > ) {\n\t\t\t\n\t\t\tconst prev = $mol_wire_probe( ()=> this.track( fiber ) )\n\t\t\tlet next: any\n\t\t\t\n\t\t\ttry {\n\t\t\t\tnext = fiber.sync()\n\t\t\t} finally {\n\t\t\t\t\n\t\t\t\tfor( const pub of fiber.pub_list ) {\n\t\t\t\t\tif( pub instanceof $mol_wire_fiber ) {\n\t\t\t\t\t\tthis.track( pub )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tif( fiber.host === this ) return next\n\t\t\t\n\t\t\tif( $mol_compare_deep( prev, next ) ) {\n\t\t\t\t\n\t\t\t\tthis.$.$mol_log3_rise({\n\t\t\t\t\tmessage: '💧 Same',\n\t\t\t\t\tplace: fiber,\n\t\t\t\t})\n\t\t\t\t\n\t\t\t} else if( prev !== undefined ) {\n\t\t\t\t\n\t\t\t\tthis.$.$mol_log3_rise({\n\t\t\t\t\tmessage: '🔥 Next',\n\t\t\t\t\tplace: fiber,\n\t\t\t\t\tprev,\n\t\t\t\t})\n\t\t\t\t\n\t\t\t}\n\t\t\n\t\t\treturn next\n\t\t}\n\t\t\n\t\t@ $mol_mem\n\t\tstatic active() {\n\t\t\t\n\t\t\ttry {\n\t\t\t\tthis.watch()?.()\n\t\t\t} catch( error ) {\n\t\t\t\t$mol_fail_log( error )\n\t\t\t} finally {\n\t\t\t\tfor( const pub of ( $mol_wire_auto() as $mol_wire_fiber< any, any, any > ).pub_list ) {\n\t\t\t\t\tif( pub instanceof $mol_wire_fiber ) {\n\t\t\t\t\t\tthis.track( pub )\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n}\n","namespace $ {\n\t\n\t$mol_wire_log.active()\n\n}\n","namespace $ {\n\n\t$mol_test_mocks.push( context => {\n\t\tclass $mol_state_arg_mock extends $mol_state_arg {\n\n\t\t\tstatic $ = context\n\t\t\t\t\t\t\n\t\t\t@ $mol_mem\n\t\t\tstatic href( next? : string ) { return next || '' }\n\t\n\t\t\t@ $mol_action\n\t\t\tstatic go( next : { [ key : string ] : string | null } ) {\n\t\t\t\tthis.href( this.link( next ) )\n\t\t\t}\n\n\t\t}\n\t\tcontext.$mol_state_arg = $mol_state_arg_mock\n\t} )\n\t\n}\n","namespace $ {\n\n\t$mol_test({\n\n\t\t'run callback' () {\n\n\t\t\tclass Plus1 extends $mol_wrapper {\n\t\t\n\t\t\t\tstatic wrap< This , Args extends any[] >( task : ( this : This , ... args : Args )=> number ) {\n\t\t\n\t\t\t\t\treturn function( this : This , ... args : Args ) {\n\t\t\t\t\t\treturn task.call( this , ... args ) + 1 as number\n\t\t\t\t\t}\n\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\n\t\t\t$mol_assert_equal( Plus1.run( ()=> 2 ) , 3 )\n\n\t\t} ,\n\n\t\t'wrap function' () {\n\t\t\n\t\t\tclass Plus1 extends $mol_wrapper {\n\t\t\n\t\t\t\tstatic wrap< This , Args extends any[] >( task : ( this : This , ... args : Args )=> number ) {\n\t\t\n\t\t\t\t\treturn function( this : This , ... args : Args ) {\n\t\t\t\t\t\treturn task.call( this , ... args ) + 1 as number\n\t\t\t\t\t}\n\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\t\n\t\t\tconst obj = {\n\t\t\t\tlevel : 2 ,\n\t\t\t\tpow : Plus1.func( function( this : { level : number } , a ) {\n\t\t\t\t\treturn a ** this.level\n\t\t\t\t} )\n\t\t\t}\n\n\t\t\t$mol_assert_equal( obj.pow( 2 ) , 5 )\n\n\t\t} ,\n\n\t\t'decorate field getter' () {\n\n\t\t\tclass Plus1 extends $mol_wrapper {\n\n\t\t\t\tstatic last = 0\n\t\t\n\t\t\t\tstatic wrap< This , Args extends any[] >( task : ( this : This , ... args : Args )=> number ) {\n\t\t\n\t\t\t\t\treturn function( this : This , ... args : Args ) {\n\t\t\t\t\t\treturn Plus1.last = ( task.call( this , ... args ) || 0 ) + 1 as number\n\t\t\t\t\t}\n\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\n\t\t\tclass Foo {\n\n\t\t\t\t@ Plus1.field\n\t\t\t\tstatic get two() {\n\t\t\t\t\treturn 1\n\t\t\t\t}\n\t\t\t\tstatic set two( next : number ) {}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_equal( Foo.two , 2 )\n\t\t\t\n\t\t\tFoo.two = 3\n\t\t\t$mol_assert_equal( Plus1.last , 2 )\n\t\t\t$mol_assert_equal( Foo.two , 2 )\n\n\t\t} ,\n\n\t\t'decorate instance method' () {\n\n\t\t\tclass Plus1 extends $mol_wrapper {\n\t\t\n\t\t\t\tstatic wrap< This , Args extends any[] >( task : ( this : This , ... args : Args )=> number ) {\n\t\t\n\t\t\t\t\treturn function( this : This , ... args : Args ) {\n\t\t\t\t\t\treturn task.call( this , ... args ) + 1 as number\n\t\t\t\t\t}\n\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\n\t\t\tclass Foo1 {\n\n\t\t\t\tlevel = 2\n\n\t\t\t\t@ Plus1.method\n\t\t\t\tpow( a : number ) {\n\t\t\t\t\treturn a ** this.level\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tconst Foo2 = Foo1\n\t\t\tconst foo = new Foo2\n\n\t\t\t$mol_assert_equal( foo.pow( 2 ) , 5 )\n\n\t\t} ,\n\n\t\t'decorate static method' () {\n\t\t\t\n\t\t\tclass Plus1 extends $mol_wrapper {\n\t\t\n\t\t\t\tstatic wrap< This , Args extends any[] >( task : ( this : This , ... args : Args )=> number ) {\n\t\t\n\t\t\t\t\treturn function( this : This , ... args : Args ) {\n\t\t\t\t\t\treturn task.call( this , ... args ) + 1 as number\n\t\t\t\t\t}\n\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\n\t\t\tclass Foo {\n\n\t\t\t\tstatic level = 2\n\n\t\t\t\t@ Plus1.method\n\t\t\t\tstatic pow( a : number ) {\n\t\t\t\t\treturn a ** this.level\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t$mol_assert_equal( Foo.pow( 2 ) , 5 )\n\n\t\t} ,\n\n\t\t'decorate class' () {\n\t\t\t\n\t\t\tclass BarInc extends $mol_wrapper {\n\n\t\t\t\tstatic wrap< This , Args extends any[] >( task : ( this : This , ... args : Args )=> Foo ) {\n\t\t\t\t\t\n\t\t\t\t\treturn function( this : This , ... args : Args ) {\n\n\t\t\t\t\t\tconst foo = task.call( this , ...args )\n\t\t\t\t\t\tfoo.bar ++\n\t\t\t\t\t\treturn foo\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t\n\t\t\t@ BarInc.class\n\t\t\tclass Foo {\n\t\t\t\tconstructor( public bar : number ) {}\n\t\t\t}\n\n\t\t\t$mol_assert_equal( new Foo( 2 ).bar , 3 )\n\n\t\t} ,\n\n\t})\n}\n","namespace $ {\n\n\t$mol_test({\n\n\t\t'memoize field' () {\n\n\t\t\tclass Foo {\n\n\t\t\t\tstatic one = 1\n\n\t\t\t\t@ $mol_memo.field\n\t\t\t\tstatic get two() {\n\t\t\t\t\treturn ++ this.one\n\t\t\t\t}\n\t\t\t\tstatic set two( next : number ) {} \n\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_equal( Foo.two , 2 )\n\t\t\t$mol_assert_equal( Foo.two , 2 )\n\n\t\t\tFoo.two = 3\n\t\t\t\n\t\t\t$mol_assert_equal( Foo.two , 3 )\n\t\t\t$mol_assert_equal( Foo.two , 3 )\n\n\t\t} ,\n\n\t})\n\n}\n","namespace $ {\n\n\tclass TestClass extends Uint8Array {}\n\n\t$mol_test({\n\t\t'Uint8Array vs itself'() {\n\t\t\t$mol_assert_ok( $mol_compare_array( new Uint8Array , new Uint8Array ) )\n\t\t\t$mol_assert_ok( $mol_compare_array( new Uint8Array([ 0 ]) , new Uint8Array([ 0 ]) ) )\n\t\t\t$mol_assert_not( $mol_compare_array( new Uint8Array([ 0 ]) , new Uint8Array([ 1 ]) ) )\n\t\t} ,\n\n\t\t'Uint8Array vs subclassed array'() {\n\t\t\t$mol_assert_not( $mol_compare_array( new Uint8Array , new TestClass ) )\n\t\t} ,\n\n\t})\n}\n","namespace $ {\n\tconst png = new Uint8Array([ 0x1a, 0x0a, 0x00, 0x49, 0x48, 0x78, 0xda ])\n\n\t$mol_test({\n\t\t'base64 encode string'() {\n\t\t\t$mol_assert_equal($mol_base64_encode('Hello, ΧΨΩЫ'), 'SGVsbG8sIM6nzqjOqdCr')\n\t\t},\n\n\t\t'base64 encode binary'() {\n\t\t\t$mol_assert_equal($mol_base64_encode(png), 'GgoASUh42g==')\n\t\t},\n\t})\n}\n","namespace $ {\n\tconst png = new Uint8Array([ 0x1a, 0x0a, 0x00, 0x49, 0x48, 0x78, 0xda ])\n\n\t$mol_test({\n\t\t'base64 decode string'() {\n\t\t\t$mol_assert_like($mol_base64_decode('SGVsbG8sIM6nzqjOqdCr'), new TextEncoder().encode('Hello, ΧΨΩЫ'))\n\t\t},\n\n\t\t'base64 decode binary'() {\n\t\t\t$mol_assert_like($mol_base64_decode('GgoASUh42g=='), png)\n\t\t},\n\t})\n}\n","namespace $ {\n\t$mol_test({\n\t\t\n\t\t'empty hash'() {\n\t\t\t$mol_assert_equal(\n\t\t\t\t$mol_crypto_hash( new Uint8Array([]) ),\n\t\t\t\tnew Uint8Array([ 218, 57, 163, 238, 94, 107, 75, 13, 50, 85, 191, 239, 149, 96, 24, 144, 175, 216, 7, 9 ]),\n\t\t\t)\n\t\t},\n\t\t\n\t\t'three bytes hash'() {\n\t\t\t$mol_assert_equal(\n\t\t\t\t$mol_crypto_hash( new Uint8Array([ 255, 254, 253 ]) ),\n\t\t\t\tnew Uint8Array([ 240, 150, 38, 243, 255, 128, 96, 0, 72, 215, 207, 228, 19, 149, 113, 52, 2, 125, 27, 77 ]),\n\t\t\t)\n\t\t},\n\t\t\n\t\t'six bytes hash'() {\n\t\t\t$mol_assert_equal(\n\t\t\t\t$mol_crypto_hash( new Uint8Array([ 0, 255, 10, 250, 32, 128 ]) ),\n\t\t\t\tnew Uint8Array([ 23, 25, 155, 181, 46, 200, 221, 83, 254, 0, 166, 68, 91, 255, 67, 140, 114, 88, 218, 155 ]),\n\t\t\t)\n\t\t},\n\t\t\n\t\t'seven bytes hash'() {\n\t\t\t$mol_assert_equal(\n\t\t\t\t$mol_crypto_hash( new Uint8Array([ 1, 2, 3, 4, 5, 6, 7 ]) ),\n\t\t\t\tnew Uint8Array([ 140, 31, 40, 252, 47, 72, 194, 113, 214, 196, 152, 240, 242, 73, 205, 222, 54, 92, 84, 197 ]),\n\t\t\t)\n\t\t},\n\t\t\n\t\tasync 'reference'() {\n\t\t\tconst data = new Uint8Array([255,254,253])\n\t\t\t$mol_assert_equal(\n\t\t\t\t$mol_crypto_hash(data),\n\t\t\t\tnew Uint8Array( await $mol_crypto_native.subtle.digest( 'SHA-1', data ) ),\n\t\t\t)\n\t\t},\n\t\t\n\t})\n}\n","namespace $ {\n\t$mol_test({\n\t\t\n\t\t'Watch one value' ($) {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\tstatic set = new $mol_wire_set< number >()\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic lucky() {\n\t\t\t\t\treturn this.set.has( 777 )\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.lucky(), false )\n\n\t\t\tApp.set.add( 666 )\n\t\t\t$mol_assert_equal( App.lucky(), false )\n\n\t\t\tApp.set.add( 777 )\n\t\t\t$mol_assert_equal( App.lucky(), true )\n\n\t\t\tApp.set.delete( 777 )\n\t\t\t$mol_assert_equal( App.lucky(), false )\n\n\t\t},\n\n\t\t'Watch item channel' ($) {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\tstatic set = new $mol_wire_set< number >()\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic lucky() {\n\t\t\t\t\treturn this.set.item( 777 )\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.lucky(), false )\n\n\t\t\tApp.set.item( 666, true )\n\t\t\t$mol_assert_equal( App.lucky(), false )\n\n\t\t\tApp.set.item( 777, true )\n\t\t\t$mol_assert_equal( App.lucky(), true )\n\n\t\t\tApp.set.item( 777, false )\n\t\t\t$mol_assert_equal( App.lucky(), false )\n\n\t\t},\n\n\t\t'Watch size' ($) {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\tstatic set = new $mol_wire_set< number >()\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic size() {\n\t\t\t\t\treturn this.set.size\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.size(), 0 )\n\n\t\t\tApp.set.add( 666 )\n\t\t\t$mol_assert_equal( App.size(), 1 )\n\n\t\t\tApp.set.add( 777 )\n\t\t\t$mol_assert_equal( App.size(), 2 )\n\n\t\t\tApp.set.delete( 777 )\n\t\t\t$mol_assert_equal( App.size(), 1 )\n\n\t\t},\n\n\t\t'Watch for-of' ($) {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\tstatic set = new $mol_wire_set< number >()\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic sum() {\n\t\t\t\t\tlet res = 0\n\t\t\t\t\tfor( const val of this.set ) {\n\t\t\t\t\t\tres += val\n\t\t\t\t\t}\n\t\t\t\t\treturn res\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.sum(), 0 )\n\n\t\t\tApp.set.add( 111 )\n\t\t\t$mol_assert_equal( App.sum(), 111 )\n\n\t\t\tApp.set.add( 222 )\n\t\t\t$mol_assert_equal( App.sum(), 333 )\n\n\t\t\tApp.set.delete( 111 )\n\t\t\t$mol_assert_equal( App.sum(), 222 )\n\n\t\t},\n\n\t\t'Watch forEach' ($) {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\tstatic set = new $mol_wire_set< number >()\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic sum() {\n\t\t\t\t\tlet res = 0\n\t\t\t\t\tthis.set.forEach( val => res += val )\n\t\t\t\t\treturn res\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.sum(), 0 )\n\n\t\t\tApp.set.add( 111 )\n\t\t\t$mol_assert_equal( App.sum(), 111 )\n\n\t\t\tApp.set.add( 222 )\n\t\t\t$mol_assert_equal( App.sum(), 333 )\n\n\t\t\tApp.set.delete( 111 )\n\t\t\t$mol_assert_equal( App.sum(), 222 )\n\t\t\t\n\t\t},\n\n\t})\n}\n","namespace $ {\n\t$mol_test({\n\n\t\t'Is number' () {\n\t\t\t$mol_data_number( 0 )\n\t\t} ,\n\n\t\t'Is not number' () {\n\t\t\t$mol_assert_fail( ()=> {\n\t\t\t\t$mol_data_number( 'x' as any )\n\t\t\t} , 'x is not a number' )\n\t\t} ,\n\n\t\t'Is object number' () {\n\t\t\t$mol_assert_fail( ()=> {\n\t\t\t\t$mol_data_number( new Number( '' ) as any )\n\t\t\t} , '0 is not a number' )\n\t\t} ,\n\n\t})\n}\n","namespace $ {\n\t$mol_test({\n\n\t\t'Is integer' () {\n\t\t\t$mol_data_integer( 0 )\n\t\t} ,\n\n\t\t'Is float' () {\n\t\t\t$mol_assert_fail( ()=> {\n\t\t\t\t$mol_data_integer( 1.1 )\n\t\t\t} , '1.1 is not an integer' )\n\t\t} ,\n\n\t})\n}\n","namespace $ {\n\t$mol_test({\n\n\t\t'tagged typing' () {\n\n\t\t\tconst { Weight, Length } = $mol_data_tagged({\n\t\t\t\tWeight: $mol_data_integer,\n\t\t\t\tLength: $mol_data_integer,\n\t\t\t})\n\t\t\t\n\t\t\tLength( 20 ) // Validate\n\t\t\tlet len = Length( 10 ) // Inferred type\n\t\t\t\n\t\t\tlen = 20 as typeof Length.Value // Explicit type\n\t\t\tlet num: number = len // Implicit cast\n\t\t\tlen = Length( Weight( 20 ) ) // Explicit cast\n\t\t\t\n\t\t\t// len = 20 // Compile time error\n\t\t\t// len = Weight( 20 ) // Compile time error\n\t\t\t// len = Length( 20.1 ) // Run time error\n\t\t\t\n\t\t} ,\n\n\t})\n}\n","namespace $.$$ {\n\t$mol_test({\n\t\t\n\t\t\"Ref validation\"( $ ) {\n\t\t\t\n\t\t\t$mol_assert_fail(\n\t\t\t\t()=> $hyoo_crus_ref( 'qwertyui_asdfghjk123' ),\n\t\t\t\t'Wrong ref (qwertyui_asdfghjk123)',\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\t\"Pick ref lord only\"( $ ) {\n\t\t\t\n\t\t\t$mol_assert_equal(\n\t\t\t\t$hyoo_crus_ref_lord( $hyoo_crus_ref( 'qwertyui_asdfghjk_qazwsxed_zxcvbnm0' ) ),\n\t\t\t\t$hyoo_crus_ref_lord( $hyoo_crus_ref( 'qwertyui_asdfghjk_qazwsxed' ) ),\n\t\t\t\t$hyoo_crus_ref_lord( $hyoo_crus_ref( 'qwertyui_asdfghjk' ) ),\n\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk' ),\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\t\"Pick ref land only\"( $ ) {\n\t\t\t\n\t\t\t$mol_assert_equal(\n\t\t\t\t$hyoo_crus_ref_land( $hyoo_crus_ref( 'qwertyui_asdfghjk__zxcvbnm0' ) ),\n\t\t\t\t$hyoo_crus_ref_land( $hyoo_crus_ref( 'qwertyui_asdfghjk' ) ),\n\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk' ),\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_equal(\n\t\t\t\t$hyoo_crus_ref_land( $hyoo_crus_ref( 'qwertyui_asdfghjk_qazwsxed_zxcvbnm0' ) ),\n\t\t\t\t$hyoo_crus_ref_land( $hyoo_crus_ref( 'qwertyui_asdfghjk_qazwsxed' ) ),\n\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk_qazwsxed' ),\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\t\"Pick ref head only\"( $ ) {\n\t\t\t\n\t\t\t$mol_assert_equal(\n\t\t\t\t$hyoo_crus_ref_head( $hyoo_crus_ref( 'qwertyui_asdfghjk_qazwsxed_zxcvbnm0' ) ),\n\t\t\t\t$hyoo_crus_ref_head( $hyoo_crus_ref( 'qwertyui_asdfghjk__zxcvbnm0' ) ),\n\t\t\t\t'zxcvbnm0',\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_equal(\n\t\t\t\t$hyoo_crus_ref_head( $hyoo_crus_ref( 'qwertyui_asdfghjk_qazwsxed' ) ),\n\t\t\t\t$hyoo_crus_ref_head( $hyoo_crus_ref( 'qwertyui_asdfghjk' ) ),\n\t\t\t\t'',\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\t\"Ref encoding\"( $ ) {\n\t\t\t\n\t\t\tconst node = $hyoo_crus_ref_encode( $hyoo_crus_ref( 'qwertyui_asdfghjk_qazwsxed_zxcvbnm0' ) )\n\t\t\tconst land = $hyoo_crus_ref_encode( $hyoo_crus_ref( 'qwertyui_asdfghjk_qazwsxed' ) )\n\t\t\tconst lord = $hyoo_crus_ref_encode( $hyoo_crus_ref( 'qwertyui_asdfghjk' ) )\n\t\t\t\n\t\t\tconst rel_node = $hyoo_crus_ref_encode( $hyoo_crus_ref( '___zxcvbnm0' ) )\n\t\t\tconst rel_root = $hyoo_crus_ref_encode( $hyoo_crus_ref( '' ) )\n\t\t\t\n\t\t\t$mol_assert_equal( node.length, 24 )\n\t\t\t$mol_assert_equal( land.length, 18 )\n\t\t\t$mol_assert_equal( lord.length, 12 )\n\t\t\t\n\t\t\t$mol_assert_equal( rel_node.length, 24 )\n\t\t\t$mol_assert_equal( rel_root.length, 12 )\n\t\t\t\n\t\t\t$mol_assert_equal( $hyoo_crus_ref_decode( node ), $hyoo_crus_ref( 'qwertyui_asdfghjk_qazwsxed_zxcvbnm0' ) )\n\t\t\t$mol_assert_equal( $hyoo_crus_ref_decode( land ), $hyoo_crus_ref( 'qwertyui_asdfghjk_qazwsxed' ) )\n\t\t\t$mol_assert_equal( $hyoo_crus_ref_decode( lord ), $hyoo_crus_ref( 'qwertyui_asdfghjk' ) )\n\t\t\t\n\t\t\t$mol_assert_equal( $hyoo_crus_ref_decode( rel_node ), $hyoo_crus_ref( '___zxcvbnm0' ) )\n\t\t\t$mol_assert_equal( $hyoo_crus_ref_decode( rel_root ), $hyoo_crus_ref( '' ) )\n\t\t\t\n\t\t},\n\t\t\n\t\t\"Relate ref to base\"( $ ) {\n\t\t\t\n\t\t\t$mol_assert_equal(\n\t\t\t\t$hyoo_crus_ref_relate(\n\t\t\t\t\t$hyoo_crus_ref( 'QWERTYUI_ASDFGHJK' ),\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk__zxcvbnm0' ),\n\t\t\t\t),\n\t\t\t\t$hyoo_crus_ref_relate(\n\t\t\t\t\t$hyoo_crus_ref( 'QWERTYUI_ASDFGHJK__ZXCVBNM0' ),\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk__zxcvbnm0' ),\n\t\t\t\t),\n\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk__zxcvbnm0' ),\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_equal(\n\t\t\t\t$hyoo_crus_ref_relate(\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk_qazwsxed' ),\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk_qazwsxed_zxcvbnm0' ),\n\t\t\t\t),\n\t\t\t\t$hyoo_crus_ref_relate(\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk_qazwsxed_12345678' ),\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk_qazwsxed_zxcvbnm0' ),\n\t\t\t\t),\n\t\t\t\t$hyoo_crus_ref_relate(\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk' ),\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk__zxcvbnm0' ),\n\t\t\t\t),\n\t\t\t\t$hyoo_crus_ref_relate(\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk__12345678' ),\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk__zxcvbnm0' ),\n\t\t\t\t),\n\t\t\t\t$hyoo_crus_ref( '___zxcvbnm0' ),\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_equal(\n\t\t\t\t$hyoo_crus_ref_relate(\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk_qazwsxed_zxcvbnm0' ),\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk_qazwsxed' ),\n\t\t\t\t),\n\t\t\t\t$hyoo_crus_ref_relate(\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk_qazwsxed' ),\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk_qazwsxed' ),\n\t\t\t\t),\n\t\t\t\t$hyoo_crus_ref_relate(\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk__zxcvbnm0' ),\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk' ),\n\t\t\t\t),\n\t\t\t\t$hyoo_crus_ref_relate(\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk' ),\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk' ),\n\t\t\t\t),\n\t\t\t\t$hyoo_crus_ref( '' ),\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\t\"Resolve ref from base\"( $ ) {\n\t\t\t\n\t\t\t$mol_assert_equal(\n\t\t\t\t$hyoo_crus_ref_resolve(\n\t\t\t\t\t$hyoo_crus_ref( 'QWERTYUI_ASDFGHJK__ZXCVBNM0' ),\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk__zxcvbnm0' ),\n\t\t\t\t),\n\t\t\t\t$hyoo_crus_ref_resolve(\n\t\t\t\t\t$hyoo_crus_ref( 'QWERTYUI_ASDFGHJK' ),\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk__zxcvbnm0' ),\n\t\t\t\t),\n\t\t\t\t$hyoo_crus_ref_resolve(\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk' ),\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk__zxcvbnm0' ),\n\t\t\t\t),\n\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk__zxcvbnm0' ),\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_equal(\n\t\t\t\t$hyoo_crus_ref_resolve(\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk' ),\n\t\t\t\t\t$hyoo_crus_ref( '___12345678' ),\n\t\t\t\t),\n\t\t\t\t$hyoo_crus_ref_resolve(\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk__zxcvbnm0' ),\n\t\t\t\t\t$hyoo_crus_ref( '___12345678' ),\n\t\t\t\t),\n\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk__12345678' ),\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_equal(\n\t\t\t\t$hyoo_crus_ref_resolve(\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk_qazwsxed' ),\n\t\t\t\t\t$hyoo_crus_ref( '___12345678' ),\n\t\t\t\t),\n\t\t\t\t$hyoo_crus_ref_resolve(\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk_qazwsxed_zxcvbnm0' ),\n\t\t\t\t\t$hyoo_crus_ref( '___12345678' ),\n\t\t\t\t),\n\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk_qazwsxed_12345678' ),\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_equal(\n\t\t\t\t$hyoo_crus_ref_resolve(\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk' ),\n\t\t\t\t\t$hyoo_crus_ref( '' ),\n\t\t\t\t),\n\t\t\t\t$hyoo_crus_ref_resolve(\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk__zxcvbnm0' ),\n\t\t\t\t\t$hyoo_crus_ref( '' ),\n\t\t\t\t),\n\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk' ),\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_equal(\n\t\t\t\t$hyoo_crus_ref_resolve(\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk_qazwsxed' ),\n\t\t\t\t\t$hyoo_crus_ref( '' ),\n\t\t\t\t),\n\t\t\t\t$hyoo_crus_ref_resolve(\n\t\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk_qazwsxed_zxcvbnm0' ),\n\t\t\t\t\t$hyoo_crus_ref( '' ),\n\t\t\t\t),\n\t\t\t\t$hyoo_crus_ref( 'qwertyui_asdfghjk_qazwsxed' ),\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t})\n}\n\n","namespace $ {\n\t$mol_test( {\n\t\t\n\t\t'parse and serial'() {\n\t\t\t$mol_assert_equal( new $mol_time_duration( 'P42.1Y' ).toString() , 'P42.1YT' )\n\t\t\t$mol_assert_equal( new $mol_time_duration( 'P42.1M' ).toString() , 'P42.1MT' )\n\t\t\t$mol_assert_equal( new $mol_time_duration( 'P42.1D' ).toString() , 'P42.1DT' )\n\t\t\t$mol_assert_equal( new $mol_time_duration( 'PT42.1h' ).toString() , 'PT42.1H' )\n\t\t\t$mol_assert_equal( new $mol_time_duration( 'PT42.1m' ).toString() , 'PT42.1M' )\n\t\t\t$mol_assert_equal( new $mol_time_duration( 'PT42.1s' ).toString() , 'PT42.1S' )\n\t\t\t$mol_assert_equal( new $mol_time_duration( 'P1Y2M3DT4h5m6.7s' ).toString() , 'P1Y2M3DT4H5M6.7S' )\n\t\t} ,\n\t\t\n\t\t'negatives'() {\n\t\t\t$mol_assert_equal(\n\t\t\t\tnew $mol_time_duration( 'P-1Y-2M-3DT-4h-5m-6.7s' ).toString() ,\n\t\t\t\tnew $mol_time_duration( '-P1Y2M3DT4h5m6.7s' ).toString() ,\n\t\t\t\t'P-1Y-2M-3DT-4H-5M-6.7S',\n\t\t\t)\n\t\t\t$mol_assert_equal(\n\t\t\t\tnew $mol_time_duration( '-P-1Y-2M-3DT-4h-5m-6.7s' ).toString() ,\n\t\t\t\t'P1Y2M3DT4H5M6.7S',\n\t\t\t)\n\t\t},\n\t\t\n\t\t'format typed'() {\n\t\t\t$mol_assert_equal(\n\t\t\t\tnew $mol_time_duration( 'P1Y2M3DT4h5m6s' ).toString( 'P#Y#M#DT#h#m#s' ) ,\n\t\t\t\t'P1Y2M3DT4H5M6S'\n\t\t\t)\n\t\t} ,\n\t\n\t\t'format readable'() {\n\t\t\t$mol_assert_equal(\n\t\t\t\tnew $mol_time_duration( 'P1Y2M3DT4h5m6s' ).toString( 'hh:mm:ss.sss' ) ,\n\t\t\t\t'04:05:06.000'\n\t\t\t)\n\t\t} ,\n\t\n\t\t'normalization'() {\n\t\t\t$mol_assert_equal(\n\t\t\t\tnew $mol_time_duration( 'P1Y2M3DT44h55m66s' ).normal.toString() ,\n\t\t\t\t'P1Y2M4DT20H56M6S'\n\t\t\t)\n\t\t} ,\n\t\n\t\t'comparison'() {\n\t\t\tconst iso = 'P1Y1M1DT1h1m1s'\n\t\t\t$mol_assert_equal( new $mol_time_duration( iso ), new $mol_time_duration( iso ) )\n\t\t},\n\t\t\n\t} )\n}\n","namespace $ {\n\t$mol_test( {\n\t\t\n\t\t'parse and serial'() {\n\t\t\t$mol_assert_equal( new $mol_time_moment( '2014' ).toString() , '2014' )\n\t\t\t$mol_assert_equal( new $mol_time_moment( '2014-01' ).toString() , '2014-01' )\n\t\t\t$mol_assert_equal( new $mol_time_moment( '2014-01-02' ).toString() , '2014-01-02' )\n\t\t\t$mol_assert_equal( new $mol_time_moment( '2014-01-02T03' ).toString() , '2014-01-02T03' )\n\t\t\t$mol_assert_equal( new $mol_time_moment( '2014-01-02T03:04' ).toString() , '2014-01-02T03:04' )\n\t\t\t$mol_assert_equal( new $mol_time_moment( '2014-01-02T03:04:05' ).toString() , '2014-01-02T03:04:05' )\n\t\t\t$mol_assert_equal( new $mol_time_moment( '2014-01-02T03:04:05.006' ).toString() , '2014-01-02T03:04:05.006' )\n\t\t\t$mol_assert_equal( new $mol_time_moment( '2014-01-02T03:04:05.006Z' ).toString() , '2014-01-02T03:04:05.006+00:00' )\n\t\t\t$mol_assert_equal( new $mol_time_moment( '2014-01-02T03:04:05.006+07:00' ).toString() , '2014-01-02T03:04:05.006+07:00' )\n\t\t\t$mol_assert_equal( new $mol_time_moment( '2014-01-02T03:04:05+07:08' ).toString() , '2014-01-02T03:04:05+07:08' )\n\t\t\t$mol_assert_equal( new $mol_time_moment( '2014-01-02T03:04+07:08' ).toString() , '2014-01-02T03:04+07:08' )\n\t\t\t$mol_assert_equal( new $mol_time_moment( 'T03:04+07:08' ).toString() , 'T03:04+07:08' )\n\t\t\t$mol_assert_equal( new $mol_time_moment( 'T03:04:05' ).toString() , 'T03:04:05' )\n\t\t\t$mol_assert_equal( new $mol_time_moment( 'T03:04' ).toString() , 'T03:04' )\n\t\t\t$mol_assert_equal( new $mol_time_moment( 'T03' ).toString() , 'T03' )\n\t\t} ,\n\t\t\n\t\t'format simple'() {\n\t\t\t$mol_assert_equal(\n\t\t\t\tnew $mol_time_moment( '2014-01-02T01:02:03.000000' ).toString( 'AD YY-M-D h:m:s' ) ,\n\t\t\t\t'21 14-1-2 1:2:3'\n\t\t\t)\n\t\t} ,\n\t\t\n\t\t'format padded'() {\n\t\t\t$mol_assert_equal(\n\t\t\t\tnew $mol_time_moment( '2014-01-02T01:02:03.000' ).toString( 'YYYY-MM-DD hh:mm:ss' ) ,\n\t\t\t\t'2014-01-02 01:02:03'\n\t\t\t)\n\t\t} ,\n\t\t\n\t\t'format time zone'() {\n\t\t\t$mol_assert_equal(\n\t\t\t\tnew $mol_time_moment( '2014-01-02T01:02:03+05:00' ).toString( 'Z' ) ,\n\t\t\t\t'+05:00'\n\t\t\t)\n\t\t} ,\n\t\t\n\t\t'format names'() {\n\t\t\tnew $mol_time_moment( '2014-01-02T01:02:03.000' ).toString( 'Month Mon | WeekDay WD' )\n\t\t} ,\n\t\t\n\t\t'shifting'() {\n\t\t\t$mol_assert_equal( new $mol_time_moment( 'T15:54:58.243+03:00' ).shift( {} ).toString() , 'T15:54:58.243+03:00' )\n\t\t\t$mol_assert_equal( new $mol_time_moment( '2014-01-02' ).shift( 'P1Y' ).toString() , '2015-01-02' )\n\t\t\t$mol_assert_equal( new $mol_time_moment( '2014-01-02' ).shift( 'P12M' ).toString() , '2015-01-02' )\n\t\t\t$mol_assert_equal( new $mol_time_moment( '2014-01-02' ).shift( 'P365D' ).toString() , '2015-01-02' )\n\t\t\t$mol_assert_equal( new $mol_time_moment( '2014-01-02' ).shift( 'PT8760h' ).toString() , '2015-01-02' )\n\t\t\t$mol_assert_equal( new $mol_time_moment( '2014-01' ).shift( 'PT8760h' ).toString() , '2015-01' )\n\t\t\t$mol_assert_equal( new $mol_time_moment( '2014-01' ).shift( 'PT-8760h' ).toString() , '2013-01' )\n\t\t} ,\n\t\t\n\t\t'native from reduced'() {\n\t\t\t$mol_assert_equal(\n\t\t\t\tnew $mol_time_moment( 'T15:00' ).native.toISOString().slice( 0, -5 ),\n\t\t\t\tnew $mol_time_moment().merge( 'T15:00:00' ).toOffset('Z').toString().slice( 0, -6 )\n\t\t\t)\n\t\t},\n\t\t\n\t\t'normalization'() {\n\t\t\t$mol_assert_equal(\n\t\t\t\tnew $mol_time_moment({ year: 2015, month: 6, day: 34 }).normal.toString() ,\n\t\t\t\t'2015-08-04'\n\t\t\t)\n\t\t\t$mol_assert_equal(\n\t\t\t\tnew $mol_time_moment('2024-09-30 19:00+03:00').normal.month ,\n\t\t\t\t8\n\t\t\t)\n\t\t} , \n\t\n\t\t'renormalization'() {\n\t\t\t$mol_assert_equal( new $mol_time_moment( '2024-08' ).normal.toString(), '2024-08' )\n\t\t\t$mol_assert_equal( new $mol_time_moment( '2024-11' ).normal.toString(), '2024-11' )\n\t\t} , \n\t\n\t\t'iso week day'() {\n\t\t\t$mol_assert_equal( new $mol_time_moment( '2017-09-17' ).weekday , $mol_time_moment_weekdays.sunday )\n\t\t\t$mol_assert_equal( new $mol_time_moment( '2017-09-18' ).weekday , $mol_time_moment_weekdays.monday )\n\t\t} ,\n\t\t\n\t\t'change offset'() {\n\t\t\t$mol_assert_equal( new $mol_time_moment( '2021-04-10 +03:00' ).toOffset( 'Z' ).toString(), '2021-04-09T21:00:00+00:00' )\n\t\t} ,\n\t\t\n\t\t'comparison'() {\n\t\t\tconst iso = '2021-01-02T03:04:05.678+09:10'\n\t\t\t$mol_assert_equal( new $mol_time_moment( iso ), new $mol_time_moment( iso ) )\n\t\t},\n\n\t} )\n}\n","namespace $ {\n\n\t$mol_test({\n\n\t\t'config by value'() {\n\n\t\t\tconst N = $mol_data_setup( ( a : number )=> a , 5 )\n\t\t\t\n\t\t\t$mol_assert_equal( N.config , 5 )\n\t\t\t\n\t\t\ttype record_value = $mol_type_assert<\n\t\t\t\ttypeof N.Value ,\n\t\t\t\tnumber\n\t\t\t>\n\t\t\t\n\t\t} ,\n\n\t})\n\n}\n","namespace $ {\n\t$mol_test({\n\n\t\t'function'() {\n\t\t\t$mol_assert_not( $mol_func_is_class( function() {} ) )\n\t\t},\n\t\t\n\t\t'generator'() {\n\t\t\t$mol_assert_not( $mol_func_is_class( function*(){} ) )\n\t\t},\n\n\t\t'async'() {\n\t\t\t$mol_assert_not( $mol_func_is_class( async function(){} ) )\n\t\t},\n\n\t\t'arrow'() {\n\t\t\t$mol_assert_not( $mol_func_is_class( ()=> null ) )\n\t\t},\n\n\t\t'named class'() {\n\t\t\t$mol_assert_ok( $mol_func_is_class( class Foo {} ) )\n\t\t},\n\n\t\t'unnamed class'() {\n\t\t\t$mol_assert_ok( $mol_func_is_class( class {} ) )\n\t\t},\n\n\t})\n}\n","namespace $ {\n\n\t$mol_test({\n\n\t\t// @todo enable on strict\n\t\t// 'no functions'() {\n\t\t\t\n\t\t// \tconst stringify = $mol_data_pipe()\n\t\t\t\n\t\t// \ttype Type = $mol_type_assert<\n\t\t// \t\ttypeof stringify,\n\t\t// \t\t( input : never )=> never\n\t\t// \t>\n\t\n\t\t// },\n\n\t\t'single function'() {\n\t\t\t\n\t\t\tconst stringify = $mol_data_pipe(\n\t\t\t\t( input : number )=> input.toString() ,\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_equal( stringify( 5 ) , '5' )\n\t\t\t\n\t\t},\n\n\t\t'two functions'() {\n\n\t\t\tconst isLong = $mol_data_pipe(\n\t\t\t\t( input : number )=> input.toString() ,\n\t\t\t\t( input : string )=> input.length > 2  ,\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_equal( isLong( 5.0 ) , false )\n\t\t\t$mol_assert_equal( isLong( 5.1 ) , true )\n\t\t\t\n\t\t},\n\n\t\t'three functions'() {\n\n\t\t\tconst pattern = $mol_data_pipe(\n\t\t\t\t( input : number )=> input.toString() ,\n\t\t\t\t( input : string )=> new RegExp( input )  ,\n\t\t\t\t( input : RegExp )=> input.toString()  ,\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_equal( pattern( 5 ) , '/5/' )\n\t\t\t\n\t\t},\n\n\t\t'classes'() {\n\n\t\t\tclass Box {\n\t\t\t\tconstructor( public value : string ) {}\n\t\t\t}\n\n\t\t\tconst boxify = $mol_data_pipe(\n\t\t\t\t( input : number )=> input.toString() ,\n\t\t\t\tBox\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_ok( boxify( 5 ) instanceof Box )\n\t\t\t$mol_assert_like( boxify( 5 ).value, '5' )\n\t\t\t\n\t\t},\n\n\t})\n\n}\n","namespace $ {\n\t$mol_test( {\n\t\t\n\t\t'local get set delete'() {\n\t\t\t\t\t\n\t\t\tvar key = '$mol_state_local_test:' + Math.random()\n\t\t\t$mol_assert_equal( $mol_state_local.value( key ) , null )\n\t\t\t\n\t\t\t$mol_state_local.value( key , 123 )\n\t\t\t$mol_assert_equal( $mol_state_local.value( key ) , 123 )\n\t\t\t\n\t\t\t$mol_state_local.value( key , null )\n\t\t\t$mol_assert_equal( $mol_state_local.value( key ) , null )\n\t\t} ,\n\t\t\n\t} )\n}\n","namespace $ {\n\n\t$mol_test_mocks.push( context => {\n\t\tclass $mol_state_local_mock< Value > extends $mol_state_local< Value > {\n\n\t\t\tstatic state = {} as Record< string , any >\n\t\t\t\t\t\t\n\t\t\t@ $mol_mem_key\n\t\t\tstatic value< Value >(\n\t\t\t\tkey : string ,\n\t\t\t\tnext = this.state[ key ] as Value ,\n\t\t\t) {\n\t\t\t\treturn this.state[ key ] = ( next || null )\n\t\t\t}\n\n\t\t}\n\t\tcontext.$mol_state_local = $mol_state_local_mock\n\t} )\n\t\n}\n","namespace $ {\n\t$mol_test({\n\t\t\n\t\tasync 'Sizes'() {\n\t\t\t\n\t\t\tconst secret = $mol_crypto_sacred.make()\n\t\t\t\n\t\t\tconst key = secret.asArray()\n\t\t\t$mol_assert_equal( key.byteLength, $mol_crypto_sacred.size )\n\t\t\t\n\t\t\tconst data = new Uint8Array([1,2,3])\n\t\t\tconst salt = $mol_crypto_salt()\n\t\t\t\n\t\t\tconst closed = await secret.encrypt( data, salt )\n\t\t\t$mol_assert_equal( closed.byteLength, $mol_crypto_sacred.size )\n\t\t\t\n\t\t\tconst self_closed = await secret.close( secret, salt )\n\t\t\t$mol_assert_equal( self_closed.byteLength, $mol_crypto_sacred.size )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Decrypt self encrypted'() {\n\t\t\t\n\t\t\tconst secret = $mol_crypto_sacred.make()\n\t\t\t\n\t\t\tconst data = new Uint8Array([1,2,3])\n\t\t\tconst salt = $mol_crypto_salt()\n\t\t\t\n\t\t\tconst closed = await secret.encrypt( data, salt )\n\t\t\tconst opened = await secret.decrypt( closed, salt )\n\t\t\t\n\t\t\t$mol_assert_equal( data, opened )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Decrypt encrypted with exported key'() {\n\t\t\t\n\t\t\tconst data = new Uint8Array([1,2,3])\n\t\t\tconst salt = $mol_crypto_salt()\n\t\t\t\n\t\t\tconst Alice = $mol_crypto_sacred.make()\n\t\t\tconst closed = await Alice.encrypt( data, salt )\n\t\t\t\n\t\t\tconst Bob = $mol_crypto_sacred.from( Alice.asArray() )\n\t\t\tconst opened = await Bob.decrypt( closed, salt )\n\t\t\t\n\t\t\t$mol_assert_equal( data, opened )\n\t\t\t\n\t\t},\n\t\t\n\t})\n}\n","namespace $ {\n\t$mol_test({\n\t\t\n\t\tasync 'sizes'() {\n\t\t\t\n\t\t\tconst secret = await $mol_crypto_secret.generate()\n\t\t\t\n\t\t\tconst key = await secret.serial()\n\t\t\t$mol_assert_equal( key.byteLength, $mol_crypto_secret.size )\n\t\t\t\n\t\t\tconst data = new Uint8Array([1,2,3])\n\t\t\tconst salt = $mol_crypto_salt()\n\t\t\t\n\t\t\tconst closed = await secret.encrypt( data, salt )\n\t\t\t$mol_assert_equal( closed.byteLength, 16 )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'decrypt self encrypted with auto generated key'() {\n\t\t\t\n\t\t\tconst secret = await $mol_crypto_secret.generate()\n\t\t\t\n\t\t\tconst data = new Uint8Array([1,2,3])\n\t\t\tconst salt = $mol_crypto_salt()\n\t\t\t\n\t\t\tconst closed = await secret.encrypt( data, salt )\n\t\t\tconst opened = await secret.decrypt( closed, salt )\n\t\t\t\n\t\t\t$mol_assert_equal( data, opened )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'decrypt encrypted with exported auto generated key'() {\n\t\t\t\n\t\t\tconst data = new Uint8Array([1,2,3])\n\t\t\tconst salt = $mol_crypto_salt()\n\t\t\t\n\t\t\tconst Alice = await $mol_crypto_secret.generate()\n\t\t\tconst closed = await Alice.encrypt( data, salt )\n\t\t\t\n\t\t\tconst Bob = await $mol_crypto_secret.from( await Alice.serial() )\n\t\t\tconst opened = await Bob.decrypt( closed, salt )\n\t\t\t\n\t\t\t$mol_assert_equal( data, opened )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'derivation from public & private keys'() {\n\t\t\t\n\t\t\tconst A = await $mol_crypto_key_private.generate()\n\t\t\tconst B = await $mol_crypto_key_private.generate()\n\t\t\t\n\t\t\tconst AK = await $mol_crypto_secret.derive( A.toString(), B.public().toString() )\n\t\t\tconst BK = await $mol_crypto_secret.derive( B.toString(), A.public().toString() )\n\t\t\t\n\t\t\t$mol_assert_equal(\n\t\t\t\tawait AK.serial(),\n\t\t\t\tawait BK.serial(),\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'derivation from passwod'() {\n\t\t\t\n\t\t\tconst data = new Uint8Array([1,2,3])\n\t\t\t\n\t\t\tconst salt1 = $mol_crypto_salt()\n\t\t\tconst secret = await $mol_crypto_secret.pass( 'hello', salt1 )\n\t\t\t\n\t\t\tconst salt2 = $mol_crypto_salt()\n\t\t\tconst closed = await secret.encrypt( data, salt2 )\n\t\t\tconst opened = await secret.decrypt( closed, salt2 )\n\t\t\t\n\t\t\t$mol_assert_equal( data, opened )\n\t\t\t\n\t\t},\n\t\t\n\t})\n}\n","namespace $ {\n\t$mol_test_mocks.push( $=> {\n\t\tclass $hyoo_crus_auth extends $.$hyoo_crus_auth {\n\n\t\t\t@ $mol_mem\n\t\t\tstatic override current() {\n\t\t\t\treturn this.from( '_9nV1NuqbUeu1sUiLaq_KI_g1ViEjhM3-PNwxwl4t6AumN_FTqZzWpZ0T1ec64n418nazPbKmzimFyjEJST1cAMPU48vm3r966UVMmfXwrUCGXPHIcvsxSsP1x4Tf7R9c' )\n\t\t\t}\n\t\t\t\n\t\t\tstatic override embryos = [\n\t\t\t\t'_8sVK0YEb5PoN899wl1_J_4RVtlKCBF3zx7qrNjtttgobBewLTIVZTZY_00kAXGopu7sxBMwtsSFPwLGWfCsHcWULiSWqUauxKa4WgH6NPFjerHWrvbICSuKyF97oIX-A',\n\t\t\t\t'_-x55YK_NNRv27E3awWeWs9PmzKbqLhWGBFADEfgRmonOuHUmoyg0tgUdStHtDM9XyNF1zK1Q7r3wOfnDuRaYwtPD-Ke87FjnTjjGBIkYtsok-JsvM4E4Xx3GqSC9aNBU',\n\t\t\t\t'_x0qgvnkiuJWWxOg2rJMdnqKdwWJ8S9HqP87-evKJmIgFyP9Yx44jYoGXlbVM-i-boXzALM90jsFB74doBQkDEqeSe1Fbwvvuy1mbdir8FPecODVqHo8Ex8-Ms85zafgs',\n\t\t\t\t'_y2R-iKYhGNLnGzZAtF6ivtMp8SqS72i81eAoqe3BXsLYyQp4baGlcMkj3qiQf6uhjRZXrb9UuoxpYBraMvLzob-1h1xq0Dyk-_gFdM_osD9GFl6hcaVQ6UaE5jMJL-YE',\n\t\t\t\t'__cZfKZc2YH8Gvl8mLkwcoiht7Z31S1Uw8yeC23kO9ctqA4QmvqSLJOxdup4XmQOj7tyrO9RRMluLWIMXhnv38jlQRziNkOBijgw0cNCthUkdctdwAgxJh-c8L8UV2M4E',\n\t\t\t\t'__nWu6ndldmMALXiLD-nt0y1KsbDmmU7ER-zEBm8rcAtY_BfF4-VpTfVYvTBuPVFE18EgJYFRY4dbqpAnUbw-UcdzzLWB31gRF_TDqyvumtxClfEjz_OssaG8sALRnmHo',\n\t\t\t\t'_72Hwx_sDNRiEgdMIlaixh55UWvWdSgknJD-EImNjHA475U4xYwplEYEbKMQZ7QD88SDXzwwAK5zolb--e-EmgNMJVkqWF3yGTjKxAy-o9esRRsICF-LZM4Hgs_F7vkxc',\n\t\t\t]\n\t\t\t\n\t\t}\n\t\t$.$hyoo_crus_auth = $hyoo_crus_auth\n\t} )\n}\n\n","namespace $ {\n\t$mol_test({\n\t\t\n\t\t'Watch one value' ($) {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\tstatic dict = new $mol_wire_dict< number, number >()\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic lucky() {\n\t\t\t\t\treturn this.dict.get( 777 )\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.lucky(), undefined )\n\n\t\t\tApp.dict.set( 666, 6666 )\n\t\t\t$mol_assert_equal( App.lucky(), undefined )\n\n\t\t\tApp.dict.set( 777, 7777 )\n\t\t\t$mol_assert_equal( App.lucky(), 7777 )\n\n\t\t\tApp.dict.delete( 777 )\n\t\t\t$mol_assert_equal( App.lucky(), undefined )\n\n\t\t},\n\n\t\t'Watch item channel' ($) {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\tstatic dict = new $mol_wire_dict< number, number >()\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic lucky() {\n\t\t\t\t\treturn this.dict.item( 777 )\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.lucky(), null )\n\n\t\t\tApp.dict.item( 666, 6666 )\n\t\t\t$mol_assert_equal( App.lucky(), null )\n\n\t\t\tApp.dict.item( 777, 7777 )\n\t\t\t$mol_assert_equal( App.lucky(), 7777 )\n\n\t\t\tApp.dict.item( 777, null )\n\t\t\t$mol_assert_equal( App.lucky(), null )\n\n\t\t},\n\n\t\t'Watch size' ($) {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\tstatic dict = new $mol_wire_dict< number, number >()\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic size() {\n\t\t\t\t\treturn this.dict.size\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t$mol_assert_equal( App.size(), 0 )\n\n\t\t\tApp.dict.set( 666, 6666 )\n\t\t\t$mol_assert_equal( App.size(), 1 )\n\n\t\t\tApp.dict.set( 777, 7777 )\n\t\t\t$mol_assert_equal( App.size(), 2 )\n\n\t\t\tApp.dict.delete( 777 )\n\t\t\t$mol_assert_equal( App.size(), 1 )\n\n\t\t},\n\n\t\t'Watch for-of' ($) {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\tstatic dict = new $mol_wire_dict< number, number >()\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic sum() {\n\t\t\t\t\tlet keys = 0\n\t\t\t\t\tlet vals = 0\n\t\t\t\t\tfor( const [ key, val ] of this.dict ) {\n\t\t\t\t\t\tkeys += key\n\t\t\t\t\t\tvals += val\n\t\t\t\t\t}\n\t\t\t\t\treturn [ keys, vals ]\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t$mol_assert_like( App.sum(), [ 0, 0 ] )\n\n\t\t\tApp.dict.set( 111, 1111 )\n\t\t\t$mol_assert_like( App.sum(), [ 111, 1111 ] )\n\n\t\t\tApp.dict.set( 222, 2222 )\n\t\t\t$mol_assert_like( App.sum(), [ 333, 3333 ] )\n\n\t\t\tApp.dict.delete( 111 )\n\t\t\t$mol_assert_like( App.sum(), [ 222, 2222 ] )\n\n\t\t},\n\n\t\t'Watch forEach' ($) {\n\n\t\t\tclass App extends $mol_object2 {\n\n\t\t\t\tstatic $ = $\n\t\t\t\tstatic dict = new $mol_wire_dict< number, number >()\n\t\t\t\t\n\t\t\t\t@ $mol_wire_solo\n\t\t\t\tstatic sum() {\n\t\t\t\t\tlet keys = 0\n\t\t\t\t\tlet vals = 0\n\t\t\t\t\tthis.dict.forEach( ( val, key )=> {\n\t\t\t\t\t\tkeys += key\n\t\t\t\t\t\tvals += val\n\t\t\t\t\t} )\n\t\t\t\t\treturn [ keys, vals ]\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t$mol_assert_like( App.sum(), [ 0, 0 ] )\n\n\t\t\tApp.dict.set( 111, 1111 )\n\t\t\t$mol_assert_like( App.sum(), [ 111, 1111 ] )\n\n\t\t\tApp.dict.set( 222, 2222 )\n\t\t\t$mol_assert_like( App.sum(), [ 333, 3333 ] )\n\n\t\t\tApp.dict.delete( 111 )\n\t\t\t$mol_assert_like( App.sum(), [ 222, 2222 ] )\n\t\t\t\n\t\t},\n\n\t})\n}\n","namespace $ {\n\t$mol_test( {\n\n\t\t'ordered links'() {\n\n\t\t\tvar graph = new $mol_graph< string , 'E' >()\n\t\t\t\n\t\t\tgraph.link( 'A' , 'B' , 'E' )\n\t\t\t\n\t\t\t$mol_assert_equal( graph.edge_out( 'A' , 'B' ) , 'E' )\n\t\t\t$mol_assert_equal( graph.edge_in( 'B' , 'A' ) , 'E' )\n\t\t\t\n\t\t\t$mol_assert_equal( graph.edge_out( 'B' , 'A' ) , null )\n\t\t\t$mol_assert_equal( graph.edge_in( 'A' , 'B' ) , null )\n\n\t\t},\n\t\t\n\t\t'nodes without edges'() {\n\n\t\t\tvar graph = new $mol_graph< string , {} >()\n\t\t\t\n\t\t\tgraph.nodes.add( 'A' )\n\t\t\tgraph.nodes.add( 'B' )\n\t\t\tgraph.nodes.add( 'C' )\n\t\t\tgraph.nodes.add( 'D' )\n\t\t\tgraph.acyclic( edge => 0 )\n\t\t\t\n\t\t\t$mol_assert_equal( [ ... graph.sorted ].join( '' ) , 'ABCD' )\n\t\t} ,\n\t\n\t\t'partial ordering'() {\n\n\t\t\tvar graph = new $mol_graph< string , { priority : number } >()\n\t\t\t\n\t\t\tgraph.nodes.add( 'A' )\n\t\t\tgraph.nodes.add( 'B' )\n\t\t\tgraph.nodes.add( 'C' )\n\t\t\tgraph.nodes.add( 'D' )\n\t\t\t\n\t\t\tgraph.link( 'B' , 'C' , { priority : 0 } )\n\t\t\tgraph.acyclic( edge => edge.priority )\n\t\t\t\n\t\t\t$mol_assert_equal( [ ... graph.sorted ].join( '' ) , 'ACBD' )\n\t\t} ,\n\t\n\t\t'sorting must cut cycles at low priority edges A'() {\n\n\t\t\tvar graph = new $mol_graph< string , { priority : number } >()\n\t\t\t\n\t\t\tgraph.link( 'A' , 'B' , { priority : 0 } )\n\t\t\tgraph.link( 'B' , 'C' , { priority : -2 } )\n\t\t\tgraph.link( 'C' , 'D' , { priority : 0 } )\n\t\t\tgraph.link( 'D' , 'A' , { priority : -1 } )\n\t\t\tgraph.acyclic( edge => edge.priority )\n\t\t\t\n\t\t\t$mol_assert_equal( [ ... graph.sorted ].join( '' ) , 'BADC' )\n\t\t} ,\n\t\n\t\t'sorting must cut cycles at low priority edges B'() {\n\t\t\t\n\t\t\tvar graph = new $mol_graph< string , { priority : number } >()\n\t\t\t\n\t\t\tgraph.link( 'B' , 'C' , { priority : -2 } )\n\t\t\tgraph.link( 'C' , 'D' , { priority : 0 } )\n\t\t\tgraph.link( 'D' , 'A' , { priority : -1 } )\n\t\t\tgraph.link( 'A' , 'B' , { priority : 0 } )\n\t\t\tgraph.acyclic( edge => edge.priority )\n\t\t\t\n\t\t\t$mol_assert_equal( [ ... graph.sorted ].join( '' ) , 'BADC' )\n\t\t} ,\n\t\n\t\t'sorting must cut cycles at low priority edges C'() {\n\t\t\t\n\t\t\tvar graph = new $mol_graph< string , { priority : number } >()\n\t\t\t\n\t\t\tgraph.link( 'C' , 'D' , { priority : 0 } )\n\t\t\tgraph.link( 'D' , 'A' , { priority : -1 } )\n\t\t\tgraph.link( 'A' , 'B' , { priority : 0 } )\n\t\t\tgraph.link( 'B' , 'C' , { priority : -2 } )\n\t\t\tgraph.acyclic( edge => edge.priority )\n\t\t\t\n\t\t\t$mol_assert_equal( [ ... graph.sorted ].join( '' ) , 'BADC' )\n\t\t} ,\n\t\n\t\t'sorting must cut cycles at low priority edges D'() {\n\t\t\t\n\t\t\tvar graph = new $mol_graph< string , { priority : number } >()\n\t\t\t\n\t\t\tgraph.link( 'D' , 'A' , { priority : -1 } )\n\t\t\tgraph.link( 'A' , 'B' , { priority : 0 } )\n\t\t\tgraph.link( 'B' , 'C' , { priority : -2 } )\n\t\t\tgraph.link( 'C' , 'D' , { priority : 0 } )\n\t\t\tgraph.acyclic( edge => edge.priority )\n\t\t\t\n\t\t\t$mol_assert_equal( [ ... graph.sorted ].join( '' ) , 'BADC' )\n\t\t} ,\n\t\n\t\t'sorting must group cutted cycles'() {\n\t\t\t\n\t\t\tvar graph = new $mol_graph< string , number >()\n\t\t\t\n\t\t\tgraph.link( 'A' , 'B' , 0 )\n\t\t\tgraph.link( 'B' , 'C' , 0 )\n\t\t\tgraph.link( 'C' , 'D' , -2 )\n\t\t\tgraph.link( 'D' , 'E' , 0 )\n\t\t\tgraph.link( 'E' , 'C' , 0 )\n\t\t\tgraph.acyclic( edge => edge )\n\t\t\t\n\t\t\t$mol_assert_equal( [ ... graph.sorted ].join( '' ) , 'CEDBA' )\n\t\t} ,\n\t\n\t} )\n}\n","namespace $ {\n\t$mol_test({\n\t\t\n\t\t'triplets'() {\n\t\t\t$mol_assert_equal(\n\t\t\t\tnew $mol_time_interval( '2015-01-01/P1M' ).end.toString() ,\n\t\t\t\t'2015-02-01'\n\t\t\t)\n\t\t\t$mol_assert_equal(\n\t\t\t\tnew $mol_time_interval( 'P1M/2015-02-01' ).start.toString() ,\n\t\t\t\t'2015-01-01'\n\t\t\t)\n\t\t\t$mol_assert_equal(\n\t\t\t\tnew $mol_time_interval( '2015-01-01/2015-02-01' ).duration.toString() ,\n\t\t\t\t'PT2678400S'\n\t\t\t)\n\t\t},\n\t\t\n\t\t'comparison'() {\n\t\t\tconst iso = '2021-01-02/2022-03-04'\n\t\t\t$mol_assert_like( new $mol_time_interval( iso ), new $mol_time_interval( iso ) )\n\t\t},\n\t\t\n\t})\n}\n","/** @jsx $mol_jsx */\nnamespace $.$$ {\n\t\n\tfunction check( vary: $hyoo_crus_vary_type ) {\n\t\t$mol_assert_like(\n\t\t\tvary,\n\t\t\t$hyoo_crus_vary_decode( $hyoo_crus_vary_encode( vary ) ),\n\t\t)\n\t}\t\n\t\n\t$mol_test({\n\t\t\n\t\t\"Bin\"( $ ) {\n\t\t\tcheck( null )\n\t\t\tcheck( new Uint8Array([ 1, 2, 3 ]) )\n\t\t},\n\t\t\n\t\t\"Bool\"( $ ) {\n\t\t\tcheck( false )\n\t\t\tcheck( true )\n\t\t},\n\t\t\n\t\t\"Int\"( $ ) {\n\t\t\tcheck( 0n )\n\t\t\tcheck( 4611686018427387904n )\n\t\t},\n\t\t\n\t\t\"Real\"( $ ) {\n\t\t\tcheck( 0 )\n\t\t\tcheck( Math.PI )\n\t\t\tcheck( Number.NaN )\n\t\t\tcheck( Number.POSITIVE_INFINITY )\n\t\t\tcheck( Number.NEGATIVE_INFINITY )\n\t\t\tcheck( Number.MAX_SAFE_INTEGER )\n\t\t\tcheck( Number.MIN_SAFE_INTEGER )\n\t\t\tcheck( Number.MAX_VALUE )\n\t\t\tcheck( Number.MIN_VALUE )\n\t\t},\n\t\t\n\t\t// \"Ref\"( $ ) {\n\t\t// \tcheck( $hyoo_crus_ref.make() )\n\t\t// \tcheck( $hyoo_crus_ref.make( 4611686018427387904n, 2, 3 ) )\n\t\t// },\n\t\t\n\t\t\"Str\"( $ ) {\n\t\t\tcheck( '' )\n\t\t\tcheck( '123' )\n\t\t\tcheck( '🐱‍👤' )\n\t\t},\n\t\t\n\t\t\"Time\"( $ ) {\n\t\t\tcheck( new $mol_time_moment( '1984-08-04T09:05:13.666+03:00' ) )\n\t\t\tcheck( new $mol_time_moment )\n\t\t},\n\t\t\n\t\t\"JSON\"( $ ) {\n\t\t\tcheck({ foo: [ 'bar' ] })\n\t\t\tcheck([ { foo: 'bar' } ])\n\t\t},\n\t\t\n\t\t\"DOM\"( $ ) {\n\t\t\t\n\t\t\tconst xml = (\n\t\t\t\t<div>\n\t\t\t\t\t<span class=\"bar\">xxx</span>\n\t\t\t\t</div>\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_like(\n\t\t\t\t$mol_dom_serialize( $hyoo_crus_vary_decode( $hyoo_crus_vary_encode( xml ) ) as Node ),\n\t\t\t\t$mol_dom_serialize( xml ),\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\t\"Tree\"( $ ) {\n\t\t\t\n\t\t\tconst tree = $.$mol_tree2_from_string(`\n\t\t\t\tfoo \\\\bar\n\t\t\t\t\tfoo \\\\bar\n\t\t\t`)\n\t\t\t\n\t\t\t$mol_assert_like(\n\t\t\t\t$.$mol_tree2_to_string( $hyoo_crus_vary_decode( $hyoo_crus_vary_encode( tree ) ) as $mol_tree2 ),\n\t\t\t\t$.$mol_tree2_to_string( tree ),\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t})\n\t\n\t\n}\n","namespace $.$$ {\n\t\n\t$mol_test({\n\t\t\n\t\t\"Cast from bin\"( $ ) {\n\t\t\t\n\t\t\tconst vary = new Uint8Array([ 1, 2, 3 ])\n\t\t\t\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_bin( vary ), vary )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_bool( vary ), true )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_int( vary ), 3n )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_real( vary ), 3 )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_ref( vary ), null )\n\t\t\t\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_str( vary ), '010203' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_time( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_dur( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_range( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_json( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_jsan( vary ), [ 1, 2, 3 ] )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_dom( vary )?.outerHTML, '<body>AQID</body>' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_tree( vary )?.toString(), '\\\\01\\n\\\\02\\n\\\\03\\n' )\n\t\t\t\n\t\t},\n\t\t\n\t\t\n\t\t\"Cast from false\"( $ ) {\n\t\t\t\n\t\t\tconst vary = false\n\t\t\t\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_bin( vary ), new Uint8Array([ 0 ]) )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_bool( vary ), false )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_int( vary ), 0n )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_real( vary ), 0 )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_ref( vary ), null )\n\t\t\t\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_str( vary ), 'false' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_time( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_dur( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_range( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_json( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_jsan( vary ), [ false ] )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_dom( vary )?.outerHTML, '<body>false</body>' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_tree( vary )?.toString(), 'false\\n' )\n\t\t\t\n\t\t},\n\t\t\n\t\t\"Cast from true\"( $ ) {\n\t\t\t\n\t\t\tconst vary = true\n\t\t\t\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_bin( vary ), new Uint8Array([ 1 ]) )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_bool( vary ), true )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_int( vary ), 1n )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_real( vary ), 1 )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_ref( vary ), null )\n\t\t\t\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_str( vary ), 'true' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_time( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_dur( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_range( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_json( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_jsan( vary ), [ true ] )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_dom( vary )?.outerHTML, '<body>true</body>' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_tree( vary )?.toString(), 'true\\n' )\n\t\t\t\n\t\t},\n\t\t\n\t\t\"Cast from 0n\"( $ ) {\n\t\t\t\n\t\t\tconst vary = 0n\n\t\t\t\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_bin( vary ), new Uint8Array([ 0, 0, 0, 0, 0, 0, 0, 0 ]) )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_bool( vary ), false )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_int( vary ), 0n )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_real( vary ), 0 )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_ref( vary ), null )\n\t\t\t\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_str( vary ), '0' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_time( vary )?.toOffset(0).toString(), '1970-01-01T00:00:00+00:00' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_dur( vary )?.toString(), 'PT' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_range( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_json( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_jsan( vary ), [ '0' ] )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_dom( vary )?.outerHTML, '<body>0</body>' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_tree( vary )?.toString(), '0\\n' )\n\t\t\t\n\t\t},\n\t\t\n\t\t\"Cast from big int\"( $ ) {\n\t\t\t\n\t\t\tconst vary = 4611686018427387903n\n\t\t\t\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_bin( vary ), new Uint8Array([ 255, 255, 255, 255, 255, 255, 255, 0x3F ]) )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_bool( vary ), true )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_int( vary ), 4611686018427387903n )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_real( vary ), 4611686018427388000 )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_ref( vary ), null )\n\t\t\t\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_str( vary ), '4611686018427387903' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_time( vary )?.toOffset(0).toString(), '10889-08-02T05:31:50.655+00:00' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_dur( vary )?.toString(), 'PT281474976710.655S' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_range( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_json( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_jsan( vary ), ['4611686018427387903'] )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_dom( vary )?.outerHTML, '<body>4611686018427387903</body>' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_tree( vary )?.toString(), '4611686018427387903\\n' )\n\t\t\t\n\t\t},\n\t\t\n\t\t\"Cast from 0\"( $ ) {\n\t\t\t\n\t\t\tconst vary = 0\n\t\t\t\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_bin( vary ), new Uint8Array([ 0, 0, 0, 0, 0, 0, 0, 0 ]) )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_bool( vary ), false )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_int( vary ), 0n )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_real( vary ), 0 )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_ref( vary ), null )\n\t\t\t\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_str( vary ), '0' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_time( vary )?.toOffset(0).toString(), '1970-01-01T00:00:00+00:00' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_dur( vary )?.toString(), 'PT' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_range( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_json( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_jsan( vary ), [0] )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_dom( vary )?.outerHTML, '<body>0</body>' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_tree( vary )?.toString(), '0\\n' )\n\t\t\t\n\t\t},\n\t\t\n\t\t\"Cast from PI\"( $ ) {\n\t\t\t\n\t\t\tconst vary = Math.PI\n\t\t\t\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_bin( vary ), new Uint8Array([ 24, 45, 68, 84, 251, 33, 9, 64 ]) )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_bool( vary ), true )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_int( vary ), 3n )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_real( vary ), Math.PI  )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_ref( vary ), null )\n\t\t\t\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_str( vary ), '3.141592653589793' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_time( vary )?.toOffset(0).toString(), '1970-01-01T00:00:00.003+00:00' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_dur( vary )?.toString(), \"PT0.0031415926535897933S\" )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_range( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_json( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_jsan( vary ), [Math.PI] )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_dom( vary )?.outerHTML, '<body>3.141592653589793</body>' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_tree( vary )?.toString(), '3.141592653589793\\n' )\n\t\t\t\n\t\t},\n\t\t\n\t\t\"Cast from NaN\"( $ ) {\n\t\t\t\n\t\t\tconst vary = Number.NaN\n\t\t\t\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_bin( vary ), new Uint8Array([ 0, 0, 0, 0, 0, 0, 248, 127 ]) )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_bool( vary ), false )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_int( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_real( vary ), Number.NaN )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_ref( vary ), null )\n\t\t\t\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_str( vary ), 'NaN' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_time( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_dur( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_range( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_json( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_jsan( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_dom( vary )?.outerHTML, '<body>NaN</body>' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_tree( vary )?.toString(), 'NaN\\n' )\n\t\t\t\n\t\t},\n\t\t\n\t\t\"Cast from Infinity\"( $ ) {\n\t\t\t\n\t\t\tconst vary = Number.POSITIVE_INFINITY\n\t\t\t\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_bin( vary ), new Uint8Array([ 0, 0, 0, 0, 0, 0, 240, 127 ]) )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_bool( vary ), true )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_int( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_real( vary ), Number.POSITIVE_INFINITY )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_ref( vary ), null )\n\t\t\t\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_str( vary ), 'Infinity' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_time( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_dur( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_range( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_json( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_jsan( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_dom( vary )?.outerHTML, '<body>Infinity</body>' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_tree( vary )?.toString(), 'Infinity\\n' )\n\t\t\t\n\t\t},\n\t\t\n\t\t\"Cast from empty string\"( $ ) {\n\t\t\t\n\t\t\tconst vary = ''\n\t\t\t\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_bin( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_bool( vary ), false )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_int( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_real( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_ref( vary ), $hyoo_crus_ref('') )\n\t\t\t\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_str( vary ), '' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_time( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_dur( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_range( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_json( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_jsan( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_dom( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_tree( vary ), null )\n\t\t\t\n\t\t},\n\t\t\n\t\t\"Cast from number string\"( $ ) {\n\t\t\t\n\t\t\tconst vary = '123456789012345678901234567890123456789'\n\t\t\t\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_bin( vary ), new Uint8Array([\n\t\t\t\t49, 50, 51, 52, 53, 54, 55, 56, 57, 48,\n\t\t\t\t49, 50, 51, 52, 53, 54, 55, 56, 57, 48,\n\t\t\t\t49, 50, 51, 52, 53, 54, 55, 56, 57, 48,\n\t\t\t\t49, 50, 51, 52, 53, 54, 55, 56, 57,\n\t\t\t]) )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_bool( vary ), true )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_int( vary ), 123456789012345678901234567890123456789n )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_real( vary ), 1.2345678901234568e+38 )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_ref( vary ), null )\n\t\t\t\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_str( vary ), '123456789012345678901234567890123456789' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_time( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_dur( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_range( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_json( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_jsan( vary ), [ 1.2345678901234568e+38 ] )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_dom( vary )?.outerHTML, '<body>123456789012345678901234567890123456789</body>' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_tree( vary )?.toString(), '\\\\123456789012345678901234567890123456789\\n' )\n\t\t\t\n\t\t},\n\t\t\n\t\t\"Cast from wild string\"( $ ) {\n\t\t\t\n\t\t\tconst vary = 'foo'\n\t\t\t\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_bin( vary ), new Uint8Array([ 102, 111, 111 ]) )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_bool( vary ), true )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_int( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_real( vary ), Number.NaN )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_ref( vary ), null )\n\t\t\t\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_str( vary ), 'foo' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_time( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_dur( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_range( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_json( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_jsan( vary ), [ 'foo' ] )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_dom( vary )?.outerHTML, '<body>foo</body>' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_tree( vary )?.toString(), '\\\\foo\\n' )\n\t\t\t\n\t\t},\n\t\t\n\t\t\"Cast from ref\"( $ ) {\n\t\t\t\n\t\t\tconst vary = $hyoo_crus_ref( 'qwertyui_asdfghjk_zxcvbnm0' )\n\t\t\t\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_bin( vary ), new Uint8Array([\n\t\t\t\t171, 7, 171, 183, 43, 162,\n\t\t\t\t106, 199, 95, 130, 24, 228,\n\t\t\t\t207, 23, 47, 110, 121, 180,\n\t\t\t]) )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_bool( vary ), true )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_int( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_real( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_ref( vary ), vary )\n\t\t\t\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_str( vary ), vary.description! )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_time( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_dur( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_range( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_json( vary ), null )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_jsan( vary ), ['qwertyui_asdfghjk_zxcvbnm0'] )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_dom( vary )?.outerHTML, '<body>qwertyui_asdfghjk_zxcvbnm0</body>' )\n\t\t\t$mol_assert_equal( $hyoo_crus_vary_cast_tree( vary )?.toString(), 'qwertyui_asdfghjk_zxcvbnm0\\n' )\n\t\t\t\n\t\t},\n\t\t\n\t})\n\t\n}\n","namespace $ {\n\t$mol_test_mocks.push( $=> {\n\t\tclass $mol_bus< Data > extends $.$mol_bus< Data > {\n\t\t\tsend() {}\n\t\t}\n\t\t$.$mol_bus = $mol_bus\n\t} )\n}\n","namespace $ {\n\t\n\tconst auth1 = $hyoo_crus_auth.from( '_4eLnQsSr5wj6XOzgS5bZa254pkEOf_hg1nReCSR4Zkd-E07aLSwj-II-rZt4ZubInw_f1rZiA0Qa92qR0Gq3I6xYWCkW9Aagc7-97L2P-gI84NaLwdabp_DrZEX3RJTY' )\n\tconst auth2 = $hyoo_crus_auth.from( '_5THYp_Njx6-cAU53dRwdv3z8RBAVK7Z2L3OeZmTp8sCsMNXmdssFljy2fxIMDX_oxTFRrRCvAH7s92kUOVn5YYTPGuZ5fQFOAEeRNGGQ47JVCK3Cy_XDSUDvklZ-3Ix4' )\n\t\n\t$mol_test({\n\t\t\n\t\t'Join'( $ ) {\n\t\t\t\n\t\t\tconst land = $hyoo_crus_land.make({ $ })\n\t\t\t$mol_assert_equal( land.joined_list(), [] )\n\t\t\t$mol_assert_equal( land.lord_rank( land.ref() ), $hyoo_crus_rank_rule )\n\t\t\t\n\t\t\tland.join()\n\t\t\t$mol_assert_equal( land.joined_list(), [ land.ref() ] )\n\t\t\t\n\t\t},\n\t\t\n\t\t'Give rights'( $ ) {\n\t\t\t\n\t\t\tconst land1 = $hyoo_crus_land.make({ $ })\n\t\t\tconst land2 = $hyoo_crus_land.make({ $, ref: ()=> land1.ref(), auth: ()=> auth1 })\n\t\t\t\n\t\t\t$mol_assert_equal( land1.lord_rank( land1.ref() ), $hyoo_crus_rank_rule )\n\t\t\t$mol_assert_equal( land1.lord_rank( auth1.lord() ), $hyoo_crus_rank_read )\n\t\t\t\n\t\t\t$mol_assert_fail( ()=> land2.give( auth2, $hyoo_crus_rank_join( 'just' ) ), 'Need reg rank to join' )\n\t\t\t$mol_assert_equal( land1.lord_rank( auth1.lord() ), $hyoo_crus_rank_read )\n\t\t\t\n\t\t\tland1.give( auth1, $hyoo_crus_rank_read )\n\t\t\t$mol_assert_equal( land1.lord_rank( auth1.lord() ), $hyoo_crus_rank_read )\n\t\t\t\n\t\t\tland1.give( auth1, $hyoo_crus_rank_join( 'just' ) )\n\t\t\t$mol_assert_equal( land1.lord_rank( auth1.lord() ), $hyoo_crus_rank_join( 'just' ) )\n\t\t\t\n\t\t\tland1.give( auth1, $hyoo_crus_rank_read )\n\t\t\t$mol_assert_equal( land1.lord_rank( auth1.lord() ), $hyoo_crus_rank_read )\n\t\t\t\n\t\t\tland1.give( auth1, $hyoo_crus_rank_post( 'just' ) )\n\t\t\t$mol_assert_equal( land1.lord_rank( auth1.lord() ), $hyoo_crus_rank_post( 'just' ) )\n\t\t\t\n\t\t\tland1.give( auth1, $hyoo_crus_rank_join( 'just' ) )\n\t\t\t$mol_assert_equal( land1.lord_rank( auth1.lord() ), $hyoo_crus_rank_join( 'just' ) )\n\t\t\t\n\t\t\tland1.give( auth1, $hyoo_crus_rank_rule )\n\t\t\t$mol_assert_equal( land1.lord_rank( auth1.lord() ), $hyoo_crus_rank_rule )\n\t\t\t\n\t\t\tland1.give( auth1, $hyoo_crus_rank_post( 'just' ) )\n\t\t\t$mol_assert_equal( land1.lord_rank( auth1.lord() ), $hyoo_crus_rank_post( 'just' ) )\n\t\t\t\n\t\t\tland2.apply_unit( land1.delta_unit() )\n\t\t\t$mol_assert_equal( land2.lord_rank( auth1.lord() ), $hyoo_crus_rank_post( 'just' ) )\n\t\t\t$mol_assert_fail( ()=> land2.give( auth2, $hyoo_crus_rank_join( 'just' ) ), 'Need law rank to change rank' )\n\t\t\t\n\t\t},\n\t\t\n\t\t'Post Data and pick Delta'( $ ) {\n\t\t\t\n\t\t\tconst land1 = $hyoo_crus_land.make({ $ })\n\t\t\tconst land2 = $hyoo_crus_land.make({ $, ref: ()=> land1.ref(), auth: ()=> auth2 })\n\t\t\t\n\t\t\t$mol_assert_equal( land1.delta_unit(), [] )\n\t\t\t\n\t\t\tland1.post( '', '', 'AA111111', new Uint8Array([ 1 ]) )\n\t\t\t$mol_assert_equal( land1.delta_unit().length, 2 )\n\t\t\t\n\t\t\tconst face = new $hyoo_crus_face_map( land1.faces )\n\t\t\t\n\t\t\tland1.post( 'AA111111', '', 'AA222222', new Uint8Array([ 2 ]) )\n\t\t\t$mol_assert_equal( land1.delta_unit().length, 3 )\n\t\t\t$mol_assert_equal( land1.delta_unit( face ).length, 1 )\n\t\t\t\n\t\t\tland2.apply_unit( land1.delta_unit() )\n\t\t\t\n\t\t\t$mol_assert_fail( ()=> land2.join(), 'Need reg rank to join' )\n\t\t\t$mol_assert_equal( land2.delta_unit().length, 3 )\n\t\t\t$mol_assert_equal( land2.delta_unit( face ).length, 1 )\n\t\t\t\n\t\t\tland1.give( auth2, $hyoo_crus_rank_join( 'just' ) )\n\t\t\tland2.apply_unit( land1.delta_unit() )\n\t\t\tland2.join()\n\t\t\t$mol_assert_equal( land2.delta_unit().length, 5 )\n\t\t\t$mol_assert_equal( land2.delta_unit( face ).length, 3 )\n\t\t\t\n\t\t\t$mol_assert_fail( ()=> land2.post( 'AA222222', '', 'AA333333', new Uint8Array([ 3 ]) ), 'Need mod rank to post data' )\n\t\t\t$mol_assert_equal( land2.delta_unit().length, 5 )\n\t\t\t$mol_assert_equal( land2.delta_unit( face ).length, 3 )\n\t\t\t\n\t\t\tland1.give( auth2, $hyoo_crus_rank_post( 'just' ) )\n\t\t\tland2.apply_unit( land1.delta_unit() )\n\t\t\tland2.post( 'AA222222', '', 'AA333333', new Uint8Array([ 4 ]) )\n\t\t\t$mol_assert_equal( land2.delta_unit().length, 6 )\n\t\t\t$mol_assert_equal( land2.delta_unit( face ).length, 4 )\n\t\t\t\n\t\t\tland1.give( auth2, $hyoo_crus_rank_join( 'just' ) )\n\t\t\tland2.apply_unit( land1.delta_unit() )\n\t\t\t$mol_assert_equal( land2.delta_unit().length, 5 )\n\t\t\t\n\t\t\tland1.give( auth2, $hyoo_crus_rank_read )\n\t\t\tland2.apply_unit( land1.delta_unit() )\n\t\t\t$mol_assert_equal( land2.delta_unit().length, 4 )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'Land encryption'( $ ) {\n\t\t\t\n\t\t\tconst land = $mol_wire_async( $hyoo_crus_land.make({ $ }) )\n\t\t\t$mol_assert_equal( await land.encrypted(), false )\n\t\t\t\n\t\t\tawait land.encrypted( true )\n\t\t\t$mol_assert_equal( await land.encrypted(), true )\n\t\t\t\n\t\t\tconst sand = await land.post( '', '', '', new Uint8Array([ 1, 2, 3 ]) )\n\t\t\t\n\t\t\t$mol_assert_equal( ( await land.sand_encode( sand ) ).data().length, 16 )\n\t\t\t$mol_assert_equal(\n\t\t\t\tawait land.sand_decode( sand ),\n\t\t\t\tnew Uint8Array([ 1, 2, 3 ]),\n\t\t\t)\n\t\t\t$mol_assert_equal( ( await land.sand_ordered({ head: '', peer: '' }) ).length, 1 )\n\t\t\t\n\t\t\tawait land.post( '', '', sand.self(), null )\n\t\t\t$mol_assert_equal( ( await land.sand_ordered({ head: '', peer: '' }) ).length, 1 )\n\t\t},\n\t\t\n\t\t'Land fork & merge'( $ ) {\n\t\t\t\n\t\t\tconst home = $.$hyoo_crus_glob.home().land()\n\t\t\tconst left = home.fork()\n\t\t\t\n\t\t\thome.Data( $hyoo_crus_list_vary ).items_vary([ 'foo', 'xxx' ])\n\t\t\t$mol_assert_equal( home.Data( $hyoo_crus_list_vary ).items_vary(), [ 'foo', 'xxx' ] )\n\t\t\t$mol_assert_equal( left.Data( $hyoo_crus_list_vary ).items_vary(), [ 'foo', 'xxx' ] )\n\t\t\t\n\t\t\tleft.faces.sync( home.faces )\n\t\t\tleft.Data( $hyoo_crus_list_vary ).items_vary([ 'foo', 'yyy' ])\n\t\t\t$mol_assert_equal( left.Data( $hyoo_crus_list_vary ).items_vary(), [ 'foo', 'yyy' ] )\n\t\t\t\n\t\t\tconst right = home.fork()\n\t\t\tright.faces.sync( left.faces )\n\t\t\tright.Data( $hyoo_crus_list_vary ).items_vary([ 'foo', 'zzz' ])\n\t\t\t$mol_assert_equal( right.Data( $hyoo_crus_list_vary ).items_vary(), [ 'foo', 'zzz' ] )\n\t\t\t\n\t\t\tconst both = home.fork()\n\t\t\t$mol_assert_equal( both.Data( $hyoo_crus_list_vary ).items_vary(), [ 'foo', 'xxx' ] )\n\t\t\t\n\t\t\tboth.Tine().items_vary([ right.ref() ])\n\t\t\t$mol_assert_equal( both.Data( $hyoo_crus_list_vary ).items_vary(), [ 'foo', 'zzz' ] )\n\t\t\t\n\t\t\tboth.Tine().items_vary([ left.ref() ])\n\t\t\t$mol_assert_equal( both.Data( $hyoo_crus_list_vary ).items_vary(), [ 'foo', 'yyy' ] )\n\t\t\t\n\t\t\tboth.Tine().items_vary([ right.ref(), left.ref() ])\n\t\t\t$mol_assert_equal( both.Data( $hyoo_crus_list_vary ).items_vary(), [ 'foo', 'yyy' ] )\n\t\t\t\n\t\t\tboth.Tine().items_vary([ left.ref(), right.ref() ])\n\t\t\t$mol_assert_equal( both.Data( $hyoo_crus_list_vary ).items_vary(), [ 'foo', 'zzz' ] )\n\t\t\t\n\t\t},\n\t\t\n\t\t'Inner refs is relative to land'( $ ) {\n\t\t\t\n\t\t\tconst Alice = $.$hyoo_crus_glob.home().land()\n\t\t\tconst Bella = Alice.fork()\n\t\t\t\n\t\t\tconst alice_val = Alice.Node( $hyoo_crus_atom_str ).Item( 'qwertyui' )\n\t\t\tconst bella_val = Bella.Node( $hyoo_crus_atom_str ).Item( 'qwertyui' )\n\t\t\t\n\t\t\talice_val.val( 'Alice' )\n\t\t\tbella_val.val( 'Bella' )\n\t\t\t\n\t\t\tconst alice_ref = Alice.Node( $hyoo_crus_atom_ref ).Item( 'asdfghjk' )\n\t\t\tconst bella_ref = Bella.Node( $hyoo_crus_atom_ref ).Item( 'asdfghjk' )\n\t\t\t\n\t\t\talice_ref.val( alice_val.ref() )\n\t\t\t$mol_assert_equal( alice_ref.val(), alice_val.ref() )\n\t\t\t$mol_assert_unique( alice_ref.val(), bella_ref.val() )\n\t\t\t$mol_assert_equal( bella_ref.val(), bella_val.ref() )\n\t\t\t\n\t\t},\n\t\t\n\t\t'Land Area inherits rights'( $ ) {\n\t\t\t\n\t\t\tconst base = $.$hyoo_crus_glob.land_grab({ '': $hyoo_crus_rank_post( 'just' ) })\n\t\t\tconst area = base.area_make()\n\t\t\t\n\t\t\t$mol_assert_equal( area.lord_rank( area.auth().lord() ), $hyoo_crus_rank_rule )\n\t\t\t$mol_assert_equal( area.lord_rank( $hyoo_crus_ref( '' ) ), $hyoo_crus_rank_post( 'just' ) )\n\t\t\t\n\t\t},\n\t\t\n\t\t// async 'Merge text changes'() {\n\t\t\t\n\t\t// \tconst base = new $hyoo_crus_land( 1n, 1 )\n\t\t// \tbase.chief.as( $hyoo_crowd_text ).str( 'Hello World and fun!' )\n\t\t\t\n\t\t// \tconst left = base.fork( await $hyoo_crowd_peer.generate() )\n\t\t// \tconst right = base.fork( await $hyoo_crowd_peer.generate() )\n\t\t// \tright.clock_data.tick( right.peer().id )\n\t\t\t\n\t\t// \tleft.chief.as( $hyoo_crowd_text ).str( 'Hello Alice and fun!' )\n\t\t// \tright.chief.as( $hyoo_crowd_text ).str( 'Bye World and fun!' )\n\t\t\t\n\t\t// \tconst left_delta = left.delta()\n\t\t// \tconst right_delta = right.delta()\n\t\t\t\n\t\t// \tleft.apply( right_delta )\n\t\t// \tright.apply( left_delta )\n\n\t\t// \t$mol_assert_equal(\n\t\t// \t\tleft.chief.as( $hyoo_crowd_text ).str(),\n\t\t// \t\tright.chief.as( $hyoo_crowd_text ).str(),\n\t\t// \t\t'Bye Alice and fun!',\n\t\t// \t)\n\n\t\t// },\n\t\t\n\t\t// async 'Write into token'() {\n\t\t\t\n\t\t// \tconst store = new $hyoo_crus_land( 1n, 1 )\n\t\t// \tstore.chief.as( $hyoo_crowd_text ).str( 'foobar' )\n\t\t// \tstore.chief.as( $hyoo_crowd_text ).write( 'xyz', 3 )\n\t\t\t\n\t\t// \t$mol_assert_equal( store.chief.as( $hyoo_crowd_list ).list(), [ 'fooxyzbar' ] )\n\t\t\t\n\t\t// },\n\t\t\n\t\t// async 'Write into token with split'() {\n\t\t\t\n\t\t// \tconst store = new $hyoo_crus_land( 1n, 1 )\n\t\t// \tstore.chief.as( $hyoo_crowd_text ).str( 'foobar' )\n\t\t// \tstore.chief.as( $hyoo_crowd_text ).write( 'XYZ', 2, 4 )\n\t\t\t\n\t\t// \t$mol_assert_equal( store.chief.as( $hyoo_crowd_list ).list(), [ 'fo', 'XYZar' ] )\n\t\t\t\n\t\t// },\n\t\t\n\t\t// async 'Write over few tokens'() {\n\t\t\t\n\t\t// \tconst store = new $hyoo_crus_land( 1n, 1 )\n\t\t// \tstore.chief.as( $hyoo_crowd_text ).str( 'xxx foo bar yyy' )\n\t\t// \tstore.chief.as( $hyoo_crowd_text ).write( 'X Y Z', 6, 9 )\n\t\t\t\n\t\t// \t$mol_assert_equal( store.chief.as( $hyoo_crowd_list ).list(), [ 'xxx', ' fo', 'X', ' Y', ' Zar', ' yyy' ] )\n\t\t\t\n\t\t// },\n\t\t\n\t\t// async 'Write whole token'() {\n\t\t\t\n\t\t// \tconst store = new $hyoo_crus_land( 1n, 1 )\n\t\t// \tstore.chief.as( $hyoo_crowd_text ).str( 'xxxFoo yyy' )\n\t\t// \tstore.chief.as( $hyoo_crowd_text ).write( 'bar', 3, 7 )\n\t\t\t\n\t\t// \t$mol_assert_equal( store.chief.as( $hyoo_crowd_list ).list(), [ 'xxxbaryyy' ] )\n\t\t\t\n\t\t// },\n\t\t\n\t\t// async 'Write whole text'() {\n\t\t\t\n\t\t// \tconst store = new $hyoo_crus_land( 1n, 1 )\n\t\t// \tstore.chief.as( $hyoo_crowd_text ).str( 'foo bar' )\n\t\t// \tstore.chief.as( $hyoo_crowd_text ).write( 'xxx', 0, 7 )\n\t\t\t\n\t\t// \t$mol_assert_equal( store.chief.as( $hyoo_crowd_list ).list(), [ 'xxx' ] )\n\t\t\t\n\t\t// },\n\t\t\n\t\t// async 'Write at the end'() {\n\t\t\t\n\t\t// \tconst store = new $hyoo_crus_land( 1n, 1 )\n\t\t// \tstore.chief.as( $hyoo_crowd_text ).str( 'foo' )\n\t\t// \tstore.chief.as( $hyoo_crowd_text ).write( 'bar' )\n\t\t\t\n\t\t// \t$mol_assert_equal( store.chief.as( $hyoo_crowd_list ).list(), [ 'foobar' ] )\n\t\t\t\n\t\t// },\n\t\t\n\t\t// async 'Write between tokens'() {\n\t\t\t\n\t\t// \tconst store = new $hyoo_crus_land( 1n, 1 )\n\t\t// \tstore.chief.as( $hyoo_crowd_text ).str( 'foo bar' )\n\t\t// \tstore.chief.as( $hyoo_crowd_text ).write( 'xxx', 4 )\n\t\t\t\n\t\t// \t$mol_assert_equal( store.chief.as( $hyoo_crowd_list ).list(), [ 'foo', ' xxxbar' ] )\n\t\t\t\n\t\t// },\n\n\t})\n}\n","namespace $ {\n\n\t/** @FIXME Need polyfill for Safari and Node (https://github.com/microsoft/MSR-JavaScript-Crypto/) */\n\tconst algorithm = {\n\t\tname: 'ECDSA',\n\t\thash: 'SHA-256',\n\t\tnamedCurve: \"P-256\",\n\t}\n\t\n\t/** Asymmetric signing pair with shortest payload */\n\texport async function $mol_crypto_auditor_pair( this: $ ) {\n\t\t\n\t\tconst pair = await $mol_crypto_native.subtle.generateKey(\n\t\t\talgorithm,\n\t\t\ttrue,\n\t\t\t[ 'sign', 'verify' ]\n\t\t)\n\t\t\n\t\treturn {\n\t\t\t\n\t\t\tpublic: new $mol_crypto_auditor_public(\n\t\t\t\tpair.publicKey as CryptoKey & { type: 'public' }\n\t\t\t),\n\t\t\t\n\t\t\tprivate: new $mol_crypto_auditor_private(\n\t\t\t\tpair.privateKey as CryptoKey & { type: 'private' }\n\t\t\t),\n\t\t\t\n\t\t}\n\t\t\n\t}\n\t\n\t/** Asymmetric signing public key wrapper with shortest payload */\n\texport class $mol_crypto_auditor_public extends Object {\n\t\t\n\t\t/** Key size in bytes. */\n\t\tstatic size_str = 86\n\t\tstatic size_bin = 64\n\t\t\n\t\tconstructor(\n\t\t\treadonly native: CryptoKey & { type: 'public' }\n\t\t) {\n\t\t\tsuper()\n\t\t}\n\t\t\n\t\tstatic async from( serial: string | Uint8Array ) {\n\t\t\tif( typeof serial !== 'string' ) {\n\t\t\t\tserial = $mol_base64_url_encode( serial.subarray( 0, 32 ) )\n\t\t\t\t\t+ $mol_base64_url_encode( serial.subarray( 32, 64 ) )\n\t\t\t}\n\t\t\treturn new this(\n\t\t\t\tawait $mol_crypto_native.subtle.importKey(\n\t\t\t\t\t'jwk',\n\t\t\t\t\t{\n\t\t\t\t\t\tcrv: \"P-256\",\n\t\t\t\t\t\text: true,\n\t\t\t\t\t\tkey_ops: ['verify'],\n\t\t\t\t\t\tkty: \"EC\",\n\t\t\t\t\t\tx: serial.slice( 0, 43 ),\n\t\t\t\t\t\ty: serial.slice( 43, 86 ),\n\t\t\t\t\t},\n\t\t\t\t\talgorithm,\n\t\t\t\t\ttrue,\n\t\t\t\t\t[ 'verify' ],\n\t\t\t\t) as CryptoKey & { type: 'public' }\n\t\t\t)\n\t\t}\n\t\t\n\t\t/** 86 bytes */\n\t\tasync serial(): Promise< string > {\n\t\t\tconst { x, y } = await $mol_crypto_native.subtle.exportKey(\n\t\t\t\t'jwk',\n\t\t\t\tthis.native,\n\t\t\t)\n\t\t\treturn x! + y!\n\t\t}\n\t\t\n\t\t/** 64 bytes */\n\t\tasync toArray(): Promise< Uint8Array > {\n\t\t\tconst { x, y, d } = await $mol_crypto_native.subtle.exportKey( 'jwk', this.native )\n\t\t\treturn new Uint8Array([\n\t\t\t\t... $mol_base64_url_decode( x! ),\n\t\t\t\t... $mol_base64_url_decode( y! ),\n\t\t\t])\n\t\t}\n\t\t\n\t\tasync verify( data: BufferSource, sign: BufferSource ) {\n\t\t\treturn await $mol_crypto_native.subtle.verify(\n\t\t\t\talgorithm,\n\t\t\t\tthis.native,\n\t\t\t\tsign,\n\t\t\t\tdata,\n\t\t\t)\n\t\t}\n\t\t\n\t}\n\t\n\t/** Asymmetric signing private key wrapper with shortest payload */\n\texport class $mol_crypto_auditor_private extends Object {\n\t\t\n\t\t/** Key size in bytes. */\n\t\tstatic size_str = 129\n\t\tstatic size_bin = 96\n\t\t\n\t\tconstructor(\n\t\t\treadonly native: CryptoKey & { type: 'private' }\n\t\t) {\n\t\t\tsuper()\n\t\t}\n\t\n\t\tstatic async from( serial: string | Uint8Array ) {\n\t\t\tif( typeof serial !== 'string' ) {\n\t\t\t\tserial = $mol_base64_url_encode( serial.subarray( 0, 32 ) )\n\t\t\t\t\t+ $mol_base64_url_encode( serial.subarray( 32, 64 ) )\n\t\t\t\t\t+ $mol_base64_url_encode( serial.subarray( 64 ) )\n\t\t\t}\n\t\t\treturn new this(\n\t\t\t\tawait $mol_crypto_native.subtle.importKey(\n\t\t\t\t\t'jwk',\n\t\t\t\t\t{\n\t\t\t\t\t\tcrv: \"P-256\",\n\t\t\t\t\t\text: true,\n\t\t\t\t\t\tkey_ops: ['sign'],\n\t\t\t\t\t\tkty: \"EC\",\n\t\t\t\t\t\tx: serial.slice( 0, 43 ),\n\t\t\t\t\t\ty: serial.slice( 43, 86 ),\n\t\t\t\t\t\td: serial.slice( 86, 129 ),\n\t\t\t\t\t},\n\t\t\t\t\talgorithm,\n\t\t\t\t\ttrue,\n\t\t\t\t\t[ 'sign' ],\n\t\t\t\t) as CryptoKey & { type: 'private' }\n\t\t\t)\n\t\t}\n\t\t\n\t\t/** 129 bytes */\n\t\tasync serial(): Promise< string > {\n\t\t\tconst { x, y, d } = await $mol_crypto_native.subtle.exportKey( 'jwk', this.native )\n\t\t\treturn x! + y! + d!\n\t\t}\n\t\t\n\t\t/** 96 bytes */\n\t\tasync toArray(): Promise< Uint8Array > {\n\t\t\tconst { x, y, d } = await $mol_crypto_native.subtle.exportKey( 'jwk', this.native )\n\t\t\treturn new Uint8Array([\n\t\t\t\t... $mol_base64_url_decode( x! ),\n\t\t\t\t... $mol_base64_url_decode( y! ),\n\t\t\t\t... $mol_base64_url_decode( d! ),\n\t\t\t])\n\t\t}\n\t\t\n\t\t/** 64 bytes */\n\t\tasync sign( data: BufferSource ) {\n\t\t\t\n\t\t\treturn await $mol_crypto_native.subtle.sign(\n\t\t\t\talgorithm,\n\t\t\t\tthis.native,\n\t\t\t\tdata\n\t\t\t)\n\t\t\t\n\t\t}\n\t\t\n\t\t/** Makes public key from private */\n\t\tasync public() {\n\t\t\treturn await $mol_crypto_auditor_public.from(\n\t\t\t\t$mol_crypto_auditor_private_to_public( await this.serial() )\n\t\t\t)\n\t\t}\n\t\t\n\t}\n\t\n\t/** Sign size in bytes. */\n\texport const $mol_crypto_auditor_sign_size = 64\n\t\n\texport function $mol_crypto_auditor_private_to_public( serial: string ) {\n\t\treturn serial.slice( 0, 86 )\n\t}\n\t\n}\n","namespace $ {\n\t$mol_test({\n\t\t\n\t\t'unit type'() {\n\t\t\tconst unit = new $hyoo_crus_unit\n\t\t\t$mol_assert_fail( ()=> unit.kind(), 'Empty unit' )\n\t\t},\n\t\t\n\t\t'auth unit type'() {\n\t\t\t\n\t\t\tconst auth = new $hyoo_crus_pass\n\t\t\tauth.auth([ 0xFF, 0, 0xFC, 0xFB, 0xFA, 0xF9, 0xF8, 0xF7, 0xF6, 0xF5, 0xF4, 0xF3, 0xF2, 0xF1 ])\n\t\t\t\n\t\t\t$mol_assert_equal( auth.kind(), 'pass' )\n\t\t\t$mol_assert_equal( auth.lord(), $hyoo_crus_ref( 'ÆPv6æfj3_9vX08ÆLx' ) )\n\t\t\t$mol_assert_equal( auth.peer(), 'ÆPv6æfj3' )\n\t\t\t\n\t\t},\n\t\t\n\t\t'gift unit type'() {\n\t\t\t\n\t\t\tconst gift = new $hyoo_crus_gift\n\t\t\tgift.rank( $hyoo_crus_rank_rule )\n\t\t\t\n\t\t\t$mol_assert_equal( gift.kind(), 'gift' )\n\t\t\t$mol_assert_equal( gift.rank(), $hyoo_crus_rank_rule )\n\t\t\t\n\t\t},\n\t\t\n\t\t'data unit type'() {\n\t\t\t\n\t\t\tconst unit = new $hyoo_crus_sand\n\t\t\tunit.hint( 'nil', 'term' )\n\t\t\tunit.data( new Uint8Array([ 0xFF, 0xFF ]) )\n\t\t\t\n\t\t\t$mol_assert_equal( unit.kind(), 'sand' )\n\t\t\t$mol_assert_equal( unit.size(), 2 )\n\t\t\t$mol_assert_equal( unit.data(), new Uint8Array([ 0xFF, 0xFF ]) )\n\t\t\t\n\t\t},\n\t\t\n\t\t// 'big data unit type'() {\n\t\t\t\n\t\t// \tconst unit = new $hyoo_crus_sand\n\t\t// \tunit.hash( 0xa1a2a3a4a5a6a7a8b1b2b3b4b5b6b7b8n )\n\t\t\t\n\t\t// \t// $mol_assert_equal( unit.size(), 255 )\n\t\t// \t$mol_assert_equal( unit.hash(), 0xa1a2a3a4a5a6a7a8b1b2b3b4b5b6b7b8n )\n\t\t\t\n\t\t// },\n\t\t\n\t\t'unit peer'() {\n\t\t\t\n\t\t\tconst unit = new $hyoo_crus_unit\n\t\t\t$mol_assert_equal( unit.peer(), '' )\n\t\t\t\n\t\t\tunit.peer( 'ÆPv6æfj3' )\n\t\t\t$mol_assert_equal( unit.peer(), 'ÆPv6æfj3' )\n\t\t\t\n\t\t},\n\t\t\n\t\t'gift unit fields'() {\n\t\t\t\n\t\t\tconst unit = new $hyoo_crus_gift\n\t\t\t\n\t\t\t$mol_assert_equal( unit.time(), 0 )\n\t\t\t$mol_assert_equal( unit.dest(), $hyoo_crus_ref( '' ) )\n\t\t\t\n\t\t\tunit.time( 0xd1d2d3d4d5d6 )\n\t\t\tunit.dest( $hyoo_crus_ref( 'ÆPv6æfj3_9vX08ÆLx' ) )\n\t\t\t\n\t\t\t$mol_assert_equal( unit.time(), 0xd1d2d3d4d5d6 )\n\t\t\t$mol_assert_equal( unit.dest(), $hyoo_crus_ref( 'ÆPv6æfj3_9vX08ÆLx' ) )\n\t\t\t\n\t\t},\n\t\t\n\t\t'data unit fields'() {\n\t\t\t\n\t\t\tconst unit = new $hyoo_crus_sand\n\t\t\t\n\t\t\t$mol_assert_equal( unit.time(), 0 )\n\t\t\t$mol_assert_equal( unit.head(), '' )\n\t\t\t$mol_assert_equal( unit.self(), '' )\n\t\t\t$mol_assert_equal( unit.lead(), '' )\n\t\t\t\n\t\t\tunit.time( 0xd1d2d3d4d5d6 )\n\t\t\tunit.head( 'ÆPv6æfj3' )\n\t\t\tunit.self( 'Pv6æfj39' )\n\t\t\tunit.lead( 'v6æfj39v' )\n\t\t\t\n\t\t\t$mol_assert_equal( unit.time(), 0xd1d2d3d4d5d6 )\n\t\t\t$mol_assert_equal( unit.head(), 'ÆPv6æfj3' )\n\t\t\t$mol_assert_equal( unit.self(), 'Pv6æfj39' )\n\t\t\t$mol_assert_equal( unit.lead(), 'v6æfj39v' )\n\t\t\t\n\t\t},\n\t\t\n\t\tasync 'sign / verify'( $ ) {\n\t\t\t\n\t\t\tconst source = new $hyoo_crus_sand\n\t\t\tsource.data( new Uint8Array([ 0xF1, 0xF2 ]) )\n\t\t\t\n\t\t\tconst key = await $.$mol_crypto_auditor_pair()\n\t\t\tsource.sign( new Uint8Array( await key.private.sign( source.sens() ) ) )\n\t\t\t\n\t\t\t$mol_assert_ok( await key.public.verify( source.sens(), source.sign() ) )\n\t\t\t\n\t\t},\n\t\t\n\t})\n}\n","/** @jsx $mol_jsx */\n/** @jsxFrag $mol_jsx_frag */\nnamespace $ {\n\n\t$mol_test({\n\t\t\n\t\t'same list'() {\n\t\t\t\n\t\t\tconst list = <body>\n\t\t\t\t<p data-rev=\"old\">a</p>\n\t\t\t\t<p data-rev=\"old\">b</p>\n\t\t\t\t<p data-rev=\"old\">c</p>\n\t\t\t</body>\n\t\t\t\n\t\t\t$mol_reconcile({\n\t\t\t\tprev: [ ... list.children ],\n\t\t\t\tfrom: 0,\n\t\t\t\tto: 3,\n\t\t\t\tnext: 'abc',\n\t\t\t\tequal: ( next, prev )=> prev.textContent === next,\n\t\t\t\tdrop: ( prev, lead )=> list.removeChild( prev ),\n\t\t\t\tinsert: ( next, lead )=> list.insertBefore( <p data-rev=\"new\">{ next }</p>, lead ? lead.nextSibling : list.firstChild ),\n\t\t\t\treplace: ( next, prev, lead )=> {\n\t\t\t\t\tprev.textContent = next\n\t\t\t\t\tprev.setAttribute( 'data-rev', 'up' )\n\t\t\t\t\treturn prev\n\t\t\t\t},\n\t\t\t})\n\t\t\t\n\t\t\t$mol_assert_equal( list, <body>\n\t\t\t\t<p data-rev=\"old\">a</p>\n\t\t\t\t<p data-rev=\"old\">b</p>\n\t\t\t\t<p data-rev=\"old\">c</p>\n\t\t\t</body> )\n\t\t\t\n\t\t},\n\t\t\n\t\t'insert items'() {\n\t\t\t\n\t\t\tconst list = <body>\n\t\t\t\t<p data-rev=\"old\">a</p>\n\t\t\t\t<p data-rev=\"old\">b</p>\n\t\t\t\t<p data-rev=\"old\">c</p>\n\t\t\t\t<p data-rev=\"old\">d</p>\n\t\t\t</body>\n\t\t\t\n\t\t\t$mol_reconcile({\n\t\t\t\tprev: [ ... list.children ],\n\t\t\t\tfrom: 1,\n\t\t\t\tto: 3,\n\t\t\t\tnext: 'bXYc',\n\t\t\t\tequal: ( next, prev )=> prev.textContent === next,\n\t\t\t\tdrop: ( prev, lead )=> list.removeChild( prev ),\n\t\t\t\tinsert: ( next, lead )=> list.insertBefore( <p data-rev=\"new\">{ next }</p>, lead ? lead.nextSibling : list.firstChild ),\n\t\t\t\treplace: ( next, prev, lead )=> {\n\t\t\t\t\tprev.textContent = next\n\t\t\t\t\tprev.setAttribute( 'data-rev', 'up' )\n\t\t\t\t\treturn prev\n\t\t\t\t},\n\t\t\t})\n\t\t\t\n\t\t\t$mol_assert_equal( list, <body>\n\t\t\t\t<p data-rev=\"old\">a</p>\n\t\t\t\t<p data-rev=\"old\">b</p>\n\t\t\t\t<p data-rev=\"new\">X</p>\n\t\t\t\t<p data-rev=\"new\">Y</p>\n\t\t\t\t<p data-rev=\"old\">c</p>\n\t\t\t\t<p data-rev=\"old\">d</p>\n\t\t\t</body> )\n\t\t\t\n\t\t},\n\t\t\n\t\t'append items'() {\n\t\t\t\n\t\t\tconst list = <body>\n\t\t\t\t<p data-rev=\"old\">a</p>\n\t\t\t</body>\n\t\t\t\n\t\t\t$mol_reconcile({\n\t\t\t\tprev: [ ... list.children ],\n\t\t\t\tfrom: 2,\n\t\t\t\tto: 3,\n\t\t\t\tnext: 'bc',\n\t\t\t\tequal: ( next, prev )=> prev.textContent === next,\n\t\t\t\tdrop: ( prev, lead )=> list.removeChild( prev ),\n\t\t\t\tinsert: ( next, lead )=> list.insertBefore( <p data-rev=\"new\">{ next }</p>, lead ? lead.nextSibling : list.firstChild ),\n\t\t\t\treplace: ( next, prev, lead )=> {\n\t\t\t\t\tprev.textContent = next\n\t\t\t\t\tprev.setAttribute( 'data-rev', 'up' )\n\t\t\t\t\treturn prev\n\t\t\t\t},\n\t\t\t})\n\t\t\t\n\t\t\t$mol_assert_equal( list, <body>\n\t\t\t\t<p data-rev=\"old\">a</p>\n\t\t\t\t<p data-rev=\"new\">b</p>\n\t\t\t\t<p data-rev=\"new\">c</p>\n\t\t\t</body> )\n\t\t\t\n\t\t},\n\t\t\n\t\t'split item'() {\n\t\t\t\n\t\t\tconst list = <body>\n\t\t\t\t<p data-rev=\"old\">a</p>\n\t\t\t\t<p data-rev=\"old\">bc</p>\n\t\t\t\t<p data-rev=\"old\">d</p>\n\t\t\t</body>\n\t\t\t\n\t\t\t$mol_reconcile({\n\t\t\t\tprev: [ ... list.children ],\n\t\t\t\tfrom: 0,\n\t\t\t\tto: 3,\n\t\t\t\tnext: 'abcd',\n\t\t\t\tequal: ( next, prev )=> prev.textContent === next,\n\t\t\t\tdrop: ( prev, lead )=> list.removeChild( prev ),\n\t\t\t\tinsert: ( next, lead )=> list.insertBefore( <p data-rev=\"new\">{ next }</p>, lead ? lead.nextSibling : list.firstChild ),\n\t\t\t\treplace: ( next, prev, lead )=> {\n\t\t\t\t\tprev.textContent = next\n\t\t\t\t\tprev.setAttribute( 'data-rev', 'up' )\n\t\t\t\t\treturn prev\n\t\t\t\t},\n\t\t\t})\n\t\t\t\n\t\t\t$mol_assert_equal( list, <body>\n\t\t\t\t<p data-rev=\"old\">a</p>\n\t\t\t\t<p data-rev=\"new\">b</p>\n\t\t\t\t<p data-rev=\"up\">c</p>\n\t\t\t\t<p data-rev=\"old\">d</p>\n\t\t\t</body> )\n\t\t\t\n\t\t},\n\t\t\n\t\t'drop items'() {\n\t\t\t\n\t\t\tconst list = <body>\n\t\t\t\t<p data-rev=\"old\">A</p>\n\t\t\t\t<p data-rev=\"old\">B</p>\n\t\t\t\t<p data-rev=\"old\">x</p>\n\t\t\t\t<p data-rev=\"old\">y</p>\n\t\t\t\t<p data-rev=\"old\">C</p>\n\t\t\t\t<p data-rev=\"old\">D</p>\n\t\t\t</body>\n\t\t\t\n\t\t\t$mol_reconcile({\n\t\t\t\tprev: [ ... list.children ],\n\t\t\t\tfrom: 1,\n\t\t\t\tto: 5,\n\t\t\t\tnext: 'BC',\n\t\t\t\tequal: ( next, prev )=> prev.textContent === next,\n\t\t\t\tdrop: ( prev, lead )=> list.removeChild( prev ),\n\t\t\t\tinsert: ( next, lead )=> list.insertBefore( <p data-rev=\"new\">{ next }</p>, lead ? lead.nextSibling : list.firstChild ),\n\t\t\t\treplace: ( next, prev, lead )=> {\n\t\t\t\t\tprev.textContent = next\n\t\t\t\t\tprev.setAttribute( 'data-rev', 'up' )\n\t\t\t\t\treturn prev\n\t\t\t\t},\n\t\t\t})\n\t\t\t\n\t\t\t$mol_assert_equal( list, <body>\n\t\t\t\t<p data-rev=\"old\">A</p>\n\t\t\t\t<p data-rev=\"old\">B</p>\n\t\t\t\t<p data-rev=\"old\">C</p>\n\t\t\t\t<p data-rev=\"old\">D</p>\n\t\t\t</body> )\n\t\t\t\n\t\t},\n\t\t\n\t\t'update items'() {\n\t\t\t\n\t\t\tconst list = <body>\n\t\t\t\t<p data-rev=\"old\">a</p>\n\t\t\t\t<p data-rev=\"old\">B</p>\n\t\t\t\t<p data-rev=\"old\">C</p>\n\t\t\t\t<p data-rev=\"old\">d</p>\n\t\t\t</body>\n\t\t\t\n\t\t\t$mol_reconcile({\n\t\t\t\tprev: [ ... list.children ],\n\t\t\t\tfrom: 1,\n\t\t\t\tto: 3,\n\t\t\t\tnext: 'XY',\n\t\t\t\tequal: ( next, prev )=> prev.textContent === next,\n\t\t\t\tdrop: ( prev, lead )=> list.removeChild( prev ),\n\t\t\t\tinsert: ( next, lead )=> list.insertBefore( <p data-rev=\"new\">{ next }</p>, lead ? lead.nextSibling : list.firstChild ),\n\t\t\t\treplace: ( next, prev, lead )=> {\n\t\t\t\t\tprev.textContent = next\n\t\t\t\t\tprev.setAttribute( 'data-rev', 'up' )\n\t\t\t\t\treturn prev\n\t\t\t\t},\n\t\t\t})\n\t\t\t\n\t\t\t$mol_assert_equal( list, <body>\n\t\t\t\t<p data-rev=\"old\">a</p>\n\t\t\t\t<p data-rev=\"up\">X</p>\n\t\t\t\t<p data-rev=\"up\">Y</p>\n\t\t\t\t<p data-rev=\"old\">d</p>\n\t\t\t</body> )\n\t\t\t\n\t\t},\n\t\t\n\t})\n}\n","namespace $ {\n\t\n\tfunction fork( base: $hyoo_crus_land ) {\n\t\tconst land = $hyoo_crus_land.make({ $: base.$ })\n\t\tland.apply_land( base )\n\t\treturn land\n\t}\n\t\n\tfunction sync( left: $hyoo_crus_land, right: $hyoo_crus_land ) {\n\t\tleft.apply_land( right )\n\t\tright.apply_land( left )\n\t}\n\t\n\t$mol_test({\n\t\t\n\t\t'Basic list ops'( $ ) {\n\t\t\t\n\t\t\tconst land = $hyoo_crus_land.make({ $ })\n\t\t\tconst list = land.Node( $hyoo_crus_list_vary ).Item('')\n\t\t\t$mol_assert_equal( list.items_vary(), [] )\n\t\t\t\n\t\t\tlist.items_vary([ 2, 3 ])\n\t\t\t$mol_assert_equal( list.items_vary(), [ 2, 3 ] )\n\t\t\t$mol_assert_equal( list.has( 1 ), false )\n\t\t\t\n\t\t\tlist.add( 1 )\n\t\t\t$mol_assert_equal( list.items_vary(), [ 1, 2, 3 ] )\n\t\t\t$mol_assert_equal( list.has( 1 ), true )\n\t\t\t\n\t\t\tlist.add( 3 )\n\t\t\t$mol_assert_equal( list.items_vary(), [ 1, 2, 3 ] )\n\t\t\t\n\t\t\tlist.splice([ 2 ])\n\t\t\t$mol_assert_equal( list.items_vary(), [ 1, 2, 3, 2 ] )\n\t\t\t\n\t\t\tlist.splice( [ 2 ], 0 )\n\t\t\t$mol_assert_equal( list.items_vary(), [ 2, 1, 2, 3, 2 ] )\n\t\t\t\n\t\t\tlist.wipe( 2 )\n\t\t\t$mol_assert_equal( list.items_vary(), [ 2, 1, 3, 2 ] )\n\t\t\t\n\t\t\tlist.move( 2, 1 )\n\t\t\t$mol_assert_equal( list.items_vary(), [ 2, 3, 1, 2 ] )\n\t\t\t\n\t\t\tlist.move( 1, 3 )\n\t\t\t$mol_assert_equal( list.items_vary(), [ 2, 1, 3, 2 ] )\n\t\t\t\n\t\t\tlist.cut( 2 )\n\t\t\t$mol_assert_equal( list.items_vary(), [ 1, 3 ] )\n\t\t\t$mol_assert_equal( list.has( 2 ), false )\n\t\t\t\n\t\t\tlist.cut( 2 )\n\t\t\t$mol_assert_equal( list.items_vary(), [ 1, 3 ] )\n\t\t\t\n\t\t},\n\t\t\n\t\t'Different types'( $ ) {\n\t\t\t\n\t\t\tconst land = $hyoo_crus_land.make({ $ })\n\t\t\tconst list = land.Node( $hyoo_crus_list_vary ).Item('')\n\t\t\t\n\t\t\tlist.items_vary([\n\t\t\t\tnull,\n\t\t\t\tfalse,\n\t\t\t\ttrue,\n\t\t\t\t0n,\n\t\t\t\t4611686018427387904n,\n\t\t\t\t0,\n\t\t\t\tMath.PI,\n\t\t\t\tNumber.NaN,\n\t\t\t\tNumber.NEGATIVE_INFINITY,\n\t\t\t\t'',\n\t\t\t\t'1234567890123456789012345678901234567890',\n\t\t\t\tnew Uint8Array([]),\n\t\t\t\tnew Uint8Array([ 1, 2, 3 ]),\n\t\t\t\tnew Uint8Array([ 1,2,3,4,5,6,7,8,9,0, 1,2,3,4,5,6,7,8,9,0, 1,2,3,4,5,6,7,8,9,0, 1,2,3,4,5,6,7,8,9,0 ]),\n\t\t\t\tlist.ref(),\n\t\t\t])\n\t\t\t\n\t\t\t$mol_assert_equal( list.items_vary(), [\n\t\t\t\tfalse,\n\t\t\t\ttrue,\n\t\t\t\t0n,\n\t\t\t\t4611686018427387904n,\n\t\t\t\t0,\n\t\t\t\tMath.PI,\n\t\t\t\tNumber.NaN,\n\t\t\t\tNumber.NEGATIVE_INFINITY,\n\t\t\t\t'',\n\t\t\t\t'1234567890123456789012345678901234567890',\n\t\t\t\tnew Uint8Array([]),\n\t\t\t\tnew Uint8Array([ 1, 2, 3 ]),\n\t\t\t\tnew Uint8Array([ 1,2,3,4,5,6,7,8,9,0, 1,2,3,4,5,6,7,8,9,0, 1,2,3,4,5,6,7,8,9,0, 1,2,3,4,5,6,7,8,9,0 ]),\n\t\t\t\tlist.ref(),\n\t\t\t] )\n\t\t\t\n\t\t},\n\t\t\n\t\t'List merge'( $ ) {\n\t\t\t\n\t\t\tconst land1 = $hyoo_crus_land.make({ $ })\n\t\t\tconst land2 = $hyoo_crus_land.make({ $ })\n\t\t\t\n\t\t\tconst list1 = land1.Node( $hyoo_crus_list_vary ).Item('')\n\t\t\tconst list2 = land2.Node( $hyoo_crus_list_vary ).Item('')\n\n\t\t\tlist1.items_vary([ 'foo', 'xxx' ])\n\t\t\tland2.faces.tick()\n\t\t\tlist2.items_vary([ 'foo', 'yyy' ])\n\t\t\tland1.apply_unit( land2.delta_unit() )\n\t\t\t$mol_assert_equal( list1.items_vary(), [ 'foo', 'yyy', 'foo', 'xxx' ] )\n\n\t\t},\n\t\t\n\t\t'Insert before removed before changed'( $ ) {\n\t\t\t\n\t\t\tconst land = $hyoo_crus_land.make({ $ })\n\t\t\tconst list = land.Node( $hyoo_crus_list_vary ).Item('')\n\t\t\t\n\t\t\tlist.items_vary([ 'foo', 'bar' ])\n\t\t\tlist.items_vary([ 'xxx', 'foo', 'bar' ])\n\t\t\tlist.items_vary([ 'xxx', 'bars' ])\n\t\t\t\n\t\t\t$mol_assert_equal( list.items_vary(), [ 'xxx', 'bars' ] )\n\t\t\t\n\t\t},\n\t\t\n\t\t'Many moves'( $ ) {\n\t\t\t\n\t\t\tconst land = $hyoo_crus_land.make({ $ })\n\t\t\tconst list = land.Node( $hyoo_crus_list_vary ).Item('')\n\t\t\t\n\t\t\tlist.items_vary([ 'foo', 'bar', 'lol' ])\n\t\t\tlist.move( 2, 1 )\n\t\t\tlist.move( 2, 1 )\n\t\t\tlist.move( 0, 3 )\n\t\t\tlist.move( 2, 1 )\n\t\t\t\n\t\t\t$mol_assert_equal( list.items_vary(), [ 'bar', 'foo', 'lol' ] )\n\t\t\t\n\t\t},\n\t\t\n\t\t'Reorder separated sublists'( $ ) {\n\t\t\t\n\t\t\tconst land = $hyoo_crus_land.make({ $ })\n\t\t\tconst list = land.Node( $hyoo_crus_list_vary ).Item('')\n\t\t\t\n\t\t\tlist.items_vary([ 1, 2, 3, 4, 5, 6 ])\n\t\t\t\n\t\t\tlist.move( 3, 5 )\n\t\t\tlist.move( 3, 5 )\n\t\t\tlist.move( 5, 4 )\n\t\t\t\n\t\t\tlist.move( 0, 2 )\n\t\t\tlist.move( 0, 2 )\n\t\t\tlist.move( 2, 1 )\n\t\t\t\n\t\t\t$mol_assert_equal( list.items_vary(), [ 1, 3, 2, 4, 6, 5 ] )\n\t\t\t\n\t\t},\n\t\t\n\t\t'Insert after moved right'( $ ) {\n\t\t\t\n\t\t\tconst base = $hyoo_crus_land.make({ $ })\n\t\t\tbase.Data( $hyoo_crus_list_vary ).items_vary([ 1, 2, 3, 4 ])\n\t\t\t\n\t\t\tconst left = fork( base )\n\t\t\tleft.Data( $hyoo_crus_list_vary ).items_vary([ 1, 7, 2, 3, 4 ])\n\t\t\t\n\t\t\tconst right = fork( base )\n\t\t\tright.Data( $hyoo_crus_list_vary ).move( 0, 2 )\n\t\t\t\n\t\t\tsync( left, right )\n\t\t\t$mol_assert_equal(\n\t\t\t\tleft.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\tright.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\t[ 2, 1, 7, 3, 4 ],\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\t'Insert before moved left'( $ ) {\n\t\t\t\n\t\t\tconst base = $hyoo_crus_land.make({ $ })\n\t\t\tbase.Data( $hyoo_crus_list_vary ).items_vary([ 1, 2, 3, 4 ])\n\t\t\t\n\t\t\tconst left = fork( base )\n\t\t\tleft.Data( $hyoo_crus_list_vary ).move( 1, 0 )\n\t\t\t\n\t\t\tconst right = fork( base )\n\t\t\tright.faces.sync( left.faces )\n\t\t\tright.Data( $hyoo_crus_list_vary ).items_vary([ 1, 7, 2, 3, 4 ])\n\t\t\t\n\t\t\tsync( left, right )\n\t\t\t$mol_assert_equal(\n\t\t\t\tleft.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\tright.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\t[ 2, 1, 7, 3, 4 ],\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\t'Move left after inserted'( $ ) {\n\t\t\t\n\t\t\tconst base = $hyoo_crus_land.make({ $ })\n\t\t\tbase.Data( $hyoo_crus_list_vary ).items_vary([ 1, 2, 3, 4 ])\n\t\t\t\n\t\t\tconst left = fork( base )\n\t\t\tleft.Data( $hyoo_crus_list_vary ).items_vary([ 1, 7, 2, 3, 4 ])\n\t\t\t\n\t\t\tconst right = fork( base )\n\t\t\tright.faces.sync( left.faces )\n\t\t\tright.Data( $hyoo_crus_list_vary ).move( 1, 0 )\n\t\t\t\n\t\t\tsync( left, right )\n\t\t\t$mol_assert_equal(\n\t\t\t\tleft.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\tright.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\t[ 2, 1, 3, 7, 4 ], // extra change (3) => unexpected result (7 after 3)\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\t'Insert before moved right'( $ ) {\n\t\t\t\n\t\t\tconst base = $hyoo_crus_land.make({ $ })\n\t\t\tbase.Data( $hyoo_crus_list_vary ).items_vary([ 1, 2, 3, 4 ])\n\t\t\t\n\t\t\tconst left = fork( base )\n\t\t\tleft.Data( $hyoo_crus_list_vary ).move( 1, 4 )\n\t\t\t\n\t\t\tconst right = fork( base )\n\t\t\tright.faces.sync( left.faces )\n\t\t\tright.Data( $hyoo_crus_list_vary ).items_vary([ 1, 7, 2, 3, 4 ])\n\t\t\t\n\t\t\tsync( left, right )\n\t\t\t$mol_assert_equal(\n\t\t\t\tleft.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\tright.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\t[ 1, 7, 3, 4, 2 ],\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\t'Move right after inserted'( $ ) {\n\t\t\t\n\t\t\tconst base = $hyoo_crus_land.make({ $ })\n\t\t\tbase.Data( $hyoo_crus_list_vary ).items_vary([ 1, 2, 3, 4 ])\n\t\t\t\n\t\t\tconst left = fork( base )\n\t\t\tleft.Data( $hyoo_crus_list_vary ).items_vary([ 1, 7, 2, 3, 4 ])\n\t\t\t\n\t\t\tconst right = fork( base )\n\t\t\tright.faces.sync( left.faces )\n\t\t\tright.Data( $hyoo_crus_list_vary ).move( 1, 4 )\n\t\t\t\n\t\t\tsync( left, right )\n\t\t\t$mol_assert_equal(\n\t\t\t\tleft.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\tright.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\t[ 1, 3, 7, 4, 2 ], // extra change (3) => unexpected result (7 after 3)\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\t'Insert after wiped'( $ ) {\n\t\t\t\n\t\t\tconst base = $hyoo_crus_land.make({ $ })\n\t\t\tbase.Data( $hyoo_crus_list_vary ).items_vary([ 1, 2, 3, 4 ])\n\t\t\t\n\t\t\tconst left = fork( base )\n\t\t\tleft.Data( $hyoo_crus_list_vary ).items_vary([ 1, 3, 4 ])\n\t\t\t\n\t\t\tconst right = fork( base )\n\t\t\tright.faces.sync( left.faces )\n\t\t\tright.Data( $hyoo_crus_list_vary ).items_vary([ 1, 2, 7, 3, 4 ])\n\t\t\t\n\t\t\tsync( left, right )\n\t\t\t$mol_assert_equal(\n\t\t\t\tleft.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\tright.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\t[ 1, 7, 3, 4 ],\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\t'Wiped before inserted'( $ ) {\n\t\t\t\n\t\t\tconst base = $hyoo_crus_land.make({ $ })\n\t\t\tbase.Data( $hyoo_crus_list_vary ).items_vary([ 1, 2, 3, 4 ])\n\t\t\t\n\t\t\tconst left = fork( base )\n\t\t\tleft.Data( $hyoo_crus_list_vary ).items_vary([ 1, 2, 7, 3, 4 ])\n\t\t\t\n\t\t\tconst right = fork( base )\n\t\t\tright.faces.sync( left.faces )\n\t\t\tright.Data( $hyoo_crus_list_vary ).items_vary([ 1, 3, 4 ])\n\t\t\t\n\t\t\tsync( left, right )\n\t\t\t$mol_assert_equal(\n\t\t\t\tleft.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\tright.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\t[ 1, 7, 3, 4 ],\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\t'Insert before wiped'( $ ) {\n\t\t\t\n\t\t\tconst base = $hyoo_crus_land.make({ $ })\n\t\t\tbase.Data( $hyoo_crus_list_vary ).items_vary([ 1, 2, 3, 4 ])\n\t\t\t\n\t\t\tconst left = fork( base )\n\t\t\tleft.Data( $hyoo_crus_list_vary ).wipe( 2 )\n\t\t\t\n\t\t\tconst right = fork( base )\n\t\t\tright.faces.sync( left.faces )\n\t\t\tright.Data( $hyoo_crus_list_vary ).items_vary([ 1, 2, 7, 3, 4 ])\n\t\t\t\n\t\t\tsync( left, right )\n\t\t\t$mol_assert_equal(\n\t\t\t\tleft.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\tright.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\t[ 1, 2, 7, 4 ],\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\t'Wiped after inserted'( $ ) {\n\t\t\t\n\t\t\tconst base = $hyoo_crus_land.make({ $ })\n\t\t\tbase.Data( $hyoo_crus_list_vary ).items_vary([ 1, 2, 3, 4 ])\n\t\t\t\n\t\t\tconst left = fork( base )\n\t\t\tleft.Data( $hyoo_crus_list_vary ).items_vary([ 1, 2, 7, 3, 4 ])\n\t\t\t\n\t\t\tconst right = fork( base )\n\t\t\tright.faces.sync( left.faces )\n\t\t\tright.Data( $hyoo_crus_list_vary ).wipe( 2 )\n\t\t\t\n\t\t\tsync( left, right )\n\t\t\t$mol_assert_equal(\n\t\t\t\tleft.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\tright.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\t[ 1, 2, 7, 4 ],\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\t'Insert after moved out'( $ ) {\n\t\t\t\n\t\t\tconst base = $hyoo_crus_land.make({ $ })\n\t\t\tbase.Data( $hyoo_crus_list_vary ).items_vary([ 1, 2, 3, 4 ])\n\t\t\t\n\t\t\tconst left = fork( base )\n\t\t\tleft.sand_move( left.Data( $hyoo_crus_list_vary ).units()[1], '11111111', 0 )\n\t\t\t\n\t\t\tconst right = fork( base )\n\t\t\tright.faces.sync( left.faces )\n\t\t\tright.Data( $hyoo_crus_list_vary ).items_vary([ 1, 2, 7, 3, 4 ])\n\t\t\t\n\t\t\tsync( left, right )\n\t\t\t$mol_assert_equal(\n\t\t\t\tleft.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\tright.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\t[ 1, 7, 3, 4 ],\n\t\t\t)\n\t\t\t$mol_assert_equal(\n\t\t\t\tleft.Node( $hyoo_crus_list_vary ).Item('11111111').items_vary(),\n\t\t\t\tright.Node( $hyoo_crus_list_vary ).Item('11111111').items_vary(),\n\t\t\t\t[ 2 ],\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\t'Move out before inserted'( $ ) {\n\t\t\t\n\t\t\tconst base = $hyoo_crus_land.make({ $ })\n\t\t\tbase.Data( $hyoo_crus_list_vary ).items_vary([ 1, 2, 3, 4 ])\n\t\t\t\n\t\t\tconst left = fork( base )\n\t\t\tleft.Data( $hyoo_crus_list_vary ).items_vary([ 1, 2, 7, 3, 4 ])\n\t\t\t\n\t\t\tconst right = fork( base )\n\t\t\tright.faces.sync( left.faces )\n\t\t\tright.sand_move( right.Data( $hyoo_crus_list_vary ).units()[1], '11111111', 0 )\n\t\t\t\n\t\t\tsync( left, right )\n\t\t\t$mol_assert_equal(\n\t\t\t\tleft.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\tright.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\t[ 1, 7, 3, 4 ],\n\t\t\t)\n\t\t\t$mol_assert_equal(\n\t\t\t\tleft.Node( $hyoo_crus_list_vary ).Item('11111111').items_vary(),\n\t\t\t\tright.Node( $hyoo_crus_list_vary ).Item('11111111').items_vary(),\n\t\t\t\t[ 2 ],\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\t'Insert before changed'( $ ) {\n\t\t\t\n\t\t\tconst base = $hyoo_crus_land.make({ $ })\n\t\t\tbase.Data( $hyoo_crus_list_vary ).items_vary([ 1, 2, 3, 4 ])\n\t\t\t\n\t\t\tconst left = fork( base )\n\t\t\tleft.Data( $hyoo_crus_list_vary ).items_vary([ 1, 2, 7, 4 ])\n\t\t\t\n\t\t\tconst right = fork( base )\n\t\t\tright.faces.sync( left.faces )\n\t\t\tright.Data( $hyoo_crus_list_vary ).items_vary([ 1, 2, 13, 3, 4 ])\n\t\t\t\n\t\t\tsync( left, right )\n\t\t\t$mol_assert_equal(\n\t\t\t\tleft.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\tright.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\t[ 1, 2, 13, 7, 4 ],\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\t'Change after inserted'( $ ) {\n\t\t\t\n\t\t\tconst base = $hyoo_crus_land.make({ $ })\n\t\t\tbase.Data( $hyoo_crus_list_vary ).items_vary([ 1, 2, 3, 4 ])\n\t\t\t\n\t\t\tconst left = fork( base )\n\t\t\tleft.Data( $hyoo_crus_list_vary ).items_vary([ 1, 2, 13, 3, 4 ])\n\t\t\t\n\t\t\tconst right = fork( base )\n\t\t\tright.faces.sync( left.faces )\n\t\t\tright.Data( $hyoo_crus_list_vary ).items_vary([ 1, 2, 7, 4 ])\n\t\t\t\n\t\t\tsync( left, right )\n\t\t\t$mol_assert_equal(\n\t\t\t\tleft.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\tright.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\t[ 1, 2, 7, 13, 4 ],\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\t'Insert between moved'( $ ) {\n\t\t\t\n\t\t\tconst base = $hyoo_crus_land.make({ $ })\n\t\t\tbase.Data( $hyoo_crus_list_vary ).items_vary([ 1, 2, 3, 4, 5, 6 ])\n\t\t\t\n\t\t\tconst left = fork( base )\n\t\t\tleft.Data( $hyoo_crus_list_vary ).move( 1, 5 )\n\t\t\tleft.Data( $hyoo_crus_list_vary ).move( 1, 5 )\n\t\t\t\n\t\t\tconst right = fork( base )\n\t\t\tright.faces.sync( left.faces )\n\t\t\tright.Data( $hyoo_crus_list_vary ).items_vary([ 1, 2, 7, 3, 4, 5, 6 ])\n\t\t\t\n\t\t\tsync( left, right )\n\t\t\t$mol_assert_equal(\n\t\t\t\tleft.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\tright.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\t[ 1, 4, 5, 2, 7, 3, 6 ],\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t\t'Move near inserted'( $ ) {\n\t\t\t\n\t\t\tconst base = $hyoo_crus_land.make({ $ })\n\t\t\tbase.Data( $hyoo_crus_list_vary ).items_vary([ 1, 2, 3, 4, 5, 6 ])\n\t\t\t\n\t\t\tconst left = fork( base )\n\t\t\tleft.Data( $hyoo_crus_list_vary ).items_vary([ 1, 2, 7, 3, 4, 5, 6 ])\n\t\t\t\n\t\t\tconst right = fork( base )\n\t\t\tright.faces.sync( left.faces )\n\t\t\tright.Data( $hyoo_crus_list_vary ).move( 1, 5 )\n\t\t\tright.Data( $hyoo_crus_list_vary ).move( 1, 5 )\n\t\t\t\n\t\t\tsync( left, right )\n\t\t\t$mol_assert_equal(\n\t\t\t\tleft.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\tright.Data( $hyoo_crus_list_vary ).items_vary(),\n\t\t\t\t[ 1, 4, 5, 2, 3, 7, 6 ],\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t})\n\t\n}\n","namespace $.$$ {\n\t\n\tconst auth1 = $hyoo_crus_auth.from( '_4eLnQsSr5wj6XOzgS5bZa254pkEOf_hg1nReCSR4Zkd-E07aLSwj-II-rZt4ZubInw_f1rZiA0Qa92qR0Gq3I6xYWCkW9Aagc7-97L2P-gI84NaLwdabp_DrZEX3RJTY' )\n\t\n\t$mol_test({\n\t\t\n\t\tasync 'Dictionary invariants'( $ ) {\n\t\t\t\n\t\t\tconst land = $hyoo_crus_land.make({ $ })\n\t\t\tconst dict = land.Node( $hyoo_crus_dict ).Item('')\n\t\t\t$mol_assert_equal( dict.keys(), [] )\n\t\t\t\n\t\t\tdict.dive( 123, $hyoo_crus_atom_vary, null )\n\t\t\tdict.dive( 'xxx', $hyoo_crus_atom_vary, null )\n\t\t\t$mol_assert_equal( dict.keys(), [ 'xxx', 123 ] )\n\t\t\t$mol_assert_equal( dict.has( 123 ), true )\n\t\t\t$mol_assert_equal( dict.has( 'xxx' ), true )\n\t\t\t$mol_assert_equal( dict.has( 'yyy' ), false )\n\t\t\t$mol_assert_equal( dict.dive( 123, $hyoo_crus_atom_vary )!.vary(), null )\n\t\t\t$mol_assert_equal( dict.dive( 'xxx', $hyoo_crus_atom_vary )!.vary(), null )\n\t\t\t\n\t\t\tdict.dive( 123, $hyoo_crus_atom_vary )!.vary( 777 )\n\t\t\t$mol_assert_equal( dict.dive( 123, $hyoo_crus_atom_vary )!.vary(), 777 )\n\n\t\t\tdict.dive( 'xxx', $hyoo_crus_list_vary )!.items_vary([ 'foo', 'bar' ])\n\t\t\t$mol_assert_equal( dict.dive( 'xxx', $hyoo_crus_list_vary )!.items_vary(), [ 'foo', 'bar' ] )\n\t\t\t\n\t\t\tdict.has( 123, false )\n\t\t\t$mol_assert_equal( dict.keys(), [ 'xxx' ] )\n\n\t\t},\n\t\t\n\t\tasync 'Dictionary merge'( $ ) {\n\t\t\t\n\t\t\tconst land1 = $hyoo_crus_land.make({ $ })\n\t\t\tconst land2 = $hyoo_crus_land.make({ $ })\n\t\t\t\n\t\t\tconst dict1 = land1.Node( $hyoo_crus_dict ).Item('')\n\t\t\tconst dict2 = land2.Node( $hyoo_crus_dict ).Item('')\n\n\t\t\tdict1.dive( 123, $hyoo_crus_atom_vary, null )!.vary( 666 )\n\t\t\tland2.faces.tick()\n\t\t\tdict2.dive( 123, $hyoo_crus_atom_vary, null )!.vary( 777 )\n\t\t\tland1.apply_unit( land2.delta_unit() )\n\t\t\t$mol_assert_equal( dict1.dive( 123, $hyoo_crus_atom_vary )!.vary(), 777 )\n\t\t\t\n\t\t\tdict1.dive( 'xxx', $hyoo_crus_list_vary, null )!.items_vary([ 'foo' ])\n\t\t\tland2.faces.tick()\n\t\t\tdict2.dive( 'xxx', $hyoo_crus_list_vary, null )!.items_vary([ 'bar' ])\n\t\t\tland1.apply_unit( land2.delta_unit() )\n\t\t\t$mol_assert_equal( dict1.dive( 'xxx', $hyoo_crus_list_vary )!.items_vary(), [ 'bar', 'foo' ] )\n\n\t\t},\n\t\t\n\t\t\"Narrowed Dictionary with linked Dictionaries and others\"( $ ) {\n\t\t\t\n\t\t\tclass User extends $hyoo_crus_dict.with({\n\t\t\t\tTitle: $hyoo_crus_atom_str,\n\t\t\t\tAccount: $hyoo_crus_atom_ref_to( ()=> Account ),\n\t\t\t\tArticles: $hyoo_crus_list_ref_to( ()=> Article ),\n\t\t\t}) {}\n\t\t\t\n\t\t\tclass Account extends $hyoo_crus_dict.with({\n\t\t\t\tTitle: $hyoo_crus_atom_str,\n\t\t\t\tUser: $hyoo_crus_atom_ref_to( ()=> User ),\n\t\t\t}) {}\n\t\t\t\n\t\t\tclass Article extends $hyoo_crus_dict.with({\n\t\t\t\tTitle: $hyoo_crus_dict_to( $hyoo_crus_atom_str ),\n\t\t\t\tAuthor: $hyoo_crus_atom_ref_to( ()=> User ),\n\t\t\t}) {}\n\t\t\t\n\t\t\tconst land = $.$hyoo_crus_glob.home().land()\n\t\t\t\n\t\t\tconst user = land.Node( User ).Item('11111111')\n\t\t\t$mol_assert_equal( user.Title()?.val() ?? null, null )\n\t\t\t$mol_assert_equal( user.Account()?.remote() ?? null, null )\n\t\t\t$mol_assert_equal( user.Articles()?.remote_list() ?? [], [] )\n\t\t\t\n\t\t\tuser.Title(null)!.val( 'Jin' )\n\t\t\t$mol_assert_equal( user.Title()!.val() ?? '', 'Jin' )\n\t\t\t\n\t\t\tconst account = user.Account(null)!.ensure({ '': $hyoo_crus_rank_read })!\n\t\t\t$mol_assert_equal( user.Account()?.remote() ?? null, account )\n\t\t\t$mol_assert_equal( account.User()?.remote() ?? null, null )\n\t\t\t\n\t\t\taccount.User(null)!.remote( user )\n\t\t\t$mol_assert_equal( account.User()?.remote(), user )\n\t\t\t\n\t\t\tconst articles = [\n\t\t\t\tuser.Articles(null)!.remote_make({ '': $hyoo_crus_rank_read }),\n\t\t\t\tuser.Articles(null)!.remote_make({ '': $hyoo_crus_rank_read }),\n\t\t\t]\n\t\t\t$mol_assert_equal( user.Articles()?.remote_list(), articles )\n\t\t\t\n\t\t\tarticles[0].Title(null)!.key( 'en', 'auto' )!.val( 'Hello!' )\n\t\t\t$mol_assert_equal(\n\t\t\t\tarticles[0].Title()?.key( 'en' )!.val(),\n\t\t\t\t'Hello!',\n\t\t\t)\n\t\t\t$mol_assert_equal( articles[1].Title()?.key( 'ru' )?.val() ?? null, null )\n\t\t\t$mol_assert_equal(\n\t\t\t\tarticles[1].Title()?.key( 'ru' )?.val() ?? null,\n\t\t\t\tnull,\n\t\t\t)\n\t\t\t\n\t\t\t$mol_assert_unique( user.land(), account.land(), ... articles.map( article => article.land() ) )\n\t\t\t\n\t\t},\n\t\t\n\t})\n\t\n}\n","namespace $ {\n\n\t/**\n\t * Checks for string and returns string type.\n\t * @see https://mol.hyoo.ru/#!section=demos/demo=mol_data_string_demo\n\t */\n\texport let $mol_data_string = ( val : string )=> {\n\t\t\n\t\tif( typeof val === 'string' ) return val\n\t\t\n\t\treturn $mol_fail( new $mol_data_error( `${ val } is not a string` ) )\n\t}\n\t\n}\n","namespace $ {\n\t$mol_test({\n\n\t\t'Is string' () {\n\t\t\t$mol_data_string( '' )\n\t\t} ,\n\n\t\t'Is not string' () {\n\t\t\t$mol_assert_fail( ()=> {\n\t\t\t\t$mol_data_string( 0 as any )\n\t\t\t} , '0 is not a string' )\n\t\t} ,\n\n\t\t'Is object string' () {\n\t\t\t$mol_assert_fail( ()=> {\n\t\t\t\t$mol_data_string( new String( 'x' ) as any )\n\t\t\t} , 'x is not a string' )\n\t\t} ,\n\n\t})\n}\n","namespace $ {\n\n\t/**\n\t * Checks for matching to given regular expression.\n\t * @see https://mol.hyoo.ru/#!section=demos/demo=mol_data_pattern_demo\n\t */\n\texport function $mol_data_pattern( pattern : RegExp ) {\n\n\t\treturn $mol_data_setup( ( val : string ) => {\n\n\t\t\tconst val2 = $mol_data_string( val )\n\t\t\tif( pattern.test( val2 ) ) return val2\n\t\t\t\n\t\t\treturn $mol_fail( new $mol_data_error( `${ val } is not a ${ pattern }` ) )\n\n\t\t} , pattern )\n\n\t}\n\t\t\t\t\t\n}\n","namespace $ {\n\t$mol_test({\n\n\t\t'Is fit' () {\n\t\t\t$mol_data_pattern( /^-$/ )( '-' )\n\t\t} ,\n\n\t\t'Is not fit' () {\n\t\t\t$mol_assert_fail( ()=> {\n\t\t\t\t$mol_data_pattern( /^-$/ )( '+' )\n\t\t\t} , '+ is not a /^-$/' )\n\t\t} ,\n\n\t})\n}\n","namespace $ {\n\n\t/**\n\t * Checks for E-Mail and returns string type.\n\t * @see https://mol.hyoo.ru/#!section=demos/demo=mol_data_email_demo\n\t */\n\texport let $mol_data_email = $mol_data_pattern( /.+@.+/ )\n\t\n}\n","namespace $ {\n\t$mol_test({\n\n\t\t'Is email' () {\n\t\t\t$mol_data_email( 'foo@bar' )\n\t\t} ,\n\n\t\t'Has not host' () {\n\t\t\t$mol_assert_fail( ()=> {\n\t\t\t\t$mol_data_email( 'foo@' )\n\t\t\t} , 'foo@ is not a /.+@.+/' )\n\t\t} ,\n\n\t\t'Has not name' () {\n\t\t\t$mol_assert_fail( ()=> {\n\t\t\t\t$mol_data_email( '@bar' )\n\t\t\t} , '@bar is not a /.+@.+/' )\n\t\t} ,\n\n\t\t'Has not @' () {\n\t\t\t$mol_assert_fail( ()=> {\n\t\t\t\t$mol_data_email( 'foo.bar' )\n\t\t\t} , 'foo.bar is not a /.+@.+/' )\n\t\t} ,\n\n\t})\n}\n","namespace $.$$ {\n\t\n\t$mol_test({\n\t\t\n\t\t\"Empty representation\"( $ ) {\n\t\t\t\n\t\t\tconst land = $hyoo_crus_land.make({ $ })\n\t\t\tconst reg = land.Node( $hyoo_crus_atom_time ).Item('')\n\t\t\t\n\t\t\t$mol_assert_equal( reg.val(), null )\n\t\t\t\n\t\t\treg.vary( null )\n\t\t\t$mol_assert_equal( reg.val(), null )\n\t\t\t\n\t\t},\n\t\t\n\t\t\"Narrow registers\"( $ ) {\n\t\t\t\n\t\t\tconst land = $.$hyoo_crus_glob.home().land()\n\t\t\t\n\t\t\tconst bin = land.Node( $hyoo_crus_atom_bin ).Item('11111111')\n\t\t\t$mol_assert_equal( bin.val(), null )\n\t\t\tbin.val( new Uint8Array([ 1, 2, 3 ]) )\n\t\t\t$mol_assert_equal( bin.val(), new Uint8Array([ 1, 2, 3 ]) )\n\t\t\t\n\t\t\tconst str = land.Node( $hyoo_crus_atom_str ).Item('22222222')\n\t\t\t$mol_assert_equal( str.val(), null )\n\t\t\tstr.val( 'foo' )\n\t\t\t$mol_assert_equal( str.val(), 'foo' )\n\t\t\t\n\t\t},\n\t\t\n\t\t\"Store custom types\"( $ ) {\n\t\t\t\n\t\t\tclass Email extends $hyoo_crus_atom( $mol_data_email ) {}\n\t\t\t\n\t\t\tconst land = $hyoo_crus_land.make({ $ })\n\t\t\tconst reg = land.Node( Email ).Item('')\n\t\t\t\n\t\t\t$mol_assert_equal( reg.val(), null )\n\t\t\t\n\t\t\treg.val( 'foo@exaple.org' )\n\t\t\t$mol_assert_equal( reg.val(), 'foo@exaple.org' )\n\t\t\t\n\t\t\t$mol_assert_fail( ()=> reg.val( 'xxx' ), 'xxx is not a /.+@.+/' )\n\t\t\t$mol_assert_equal( reg.val(), 'foo@exaple.org' )\n\t\t\t\n\t\t\treg.vary( 'xxx' )\n\t\t\t$mol_assert_equal( reg.val(), null )\n\t\t\t\n\t\t},\n\t\t\n\t\t\"Hyper link to another land\"( $ ) {\n\t\t\t\n\t\t\tconst land = $.$hyoo_crus_glob.home().land()\n\t\t\t\n\t\t\tconst reg = land.Node( $hyoo_crus_atom_ref_to( ()=> $hyoo_crus_atom_vary ) ).Item( '11111111' )\n\t\t\tconst remote = reg.ensure({ '': $hyoo_crus_rank_read })!\n\t\t\t\n\t\t\t$mol_assert_unique( reg.land(), remote.land() )\n\t\t\t$mol_assert_equal( reg.vary()!, remote.ref() )\n\t\t\t$mol_assert_equal( reg.remote(), remote )\n\t\t\t\n\t\t},\n\t\t\n\t\t\"Register with linked nodes\"( $ ) {\n\t\t\t\n\t\t\tconst land = $.$hyoo_crus_glob.home().land()\n\t\t\t\n\t\t\tconst str = land.Node( $hyoo_crus_atom_str ).Item('11111111')\n\t\t\tconst ref = land.Node( $hyoo_crus_atom_ref_to( ()=> $hyoo_crus_atom_str ) ).Item('11111111')\n\t\t\t$mol_assert_equal( ref.remote(), null )\n\t\t\t\n\t\t\tref.remote( str )\n\t\t\t$mol_assert_equal( ref.vary(), ref.remote()!.ref(), str.ref() )\n\t\t\t\n\t\t},\n\t\t\n\t\t\"Enumerated reg type\"( $ ) {\n\t\t\t\n\t\t\tclass FileType extends $hyoo_crus_atom_enum( [ 'file', 'dir', 'link' ] as const ) {}\n\t\t\t\n\t\t\ttype Infered = $mol_type_assert<\n\t\t\t\tReturnType< FileType['val'] >,\n\t\t\t\t'file' | 'dir' | 'link' | null\n\t\t\t>\n\t\t\t\n\t\t\tconst land = $.$hyoo_crus_glob.home().land()\n\t\t\t\n\t\t\tconst type = land.Data( FileType )\n\t\t\t$mol_assert_equal( type.val(), null )\n\t\t\t\n\t\t\ttype.val( 'file' )\n\t\t\t$mol_assert_equal( type.val(), 'file' )\n\t\t\t\n\t\t\t$mol_assert_fail( ()=> type.val( 'drive' as any ), 'Wrong value (drive)' )\n\t\t\t$mol_assert_equal( type.val(), 'file' )\n\t\t\t\n\t\t\ttype.vary( 'drive' )\n\t\t\t$mol_assert_equal( type.val(), null )\n\t\t\t\n\t\t},\n\t\t\n\t})\n\t\n}\n","namespace $ {\n\t$mol_test({\n\t\t\n\t\t'Per app profiles'( $ ) {\n\t\t\t\n\t\t\tconst base = $.$hyoo_crus_glob.home()\n\t\t\tconst hall = base.hall_by( $hyoo_crus_dict, { '': $hyoo_crus_rank_read } )!\n\t\t\t\n\t\t\t$mol_assert_unique( base.land(), hall )\n\t\t\t\n\t\t},\n\n\t})\n}\n","namespace $ {\n\t$mol_test_mocks.push( $=> {\n\t\tclass $hyoo_crus_mine_mock extends $.$hyoo_crus_mine {\n\t\t\t\n\t\t\t@ $mol_mem_key\n\t\t\tstatic rock( hash: Uint8Array, next?: Uint8Array ) {\n\t\t\t\treturn next ?? null\n\t\t\t}\n\t\t\t\n\t\t\t@ $mol_mem_key\n\t\t\tstatic units( land: $hyoo_crus_ref, next?: readonly $hyoo_crus_unit[] ) { $hyoo_crus_land\n\t\t\t\treturn next ?? []\n\t\t\t}\n\t\t\t\t\n\t\t\tstatic async units_load( land: $hyoo_crus_ref ) {\n\t\t\t\treturn []\n\t\t\t}\n\t\t\t\n\t\t\tstatic async units_save( land: $hyoo_crus_ref, units: readonly $hyoo_crus_unit[] ) {}\n\t\t\t\n\t\t}\n\t\t$.$hyoo_crus_mine = $hyoo_crus_mine_mock\n\t} )\n}\n","namespace $.$$ {\n\t$mol_test({\n\t\t\n\t\t\"faces serial and parse\"( $ ) {\n\t\t\t\n\t\t\tconst land1 = $hyoo_crus_ref( '12345678_12345678' )\n\t\t\tconst land2 = $hyoo_crus_ref( '87654321_87654321' )\n\t\t\tconst land3 = $hyoo_crus_ref( '87654321_00000000' )\n\t\t\t\n\t\t\tconst faces1 = new $hyoo_crus_face_map\n\t\t\tfaces1.time_max( '12345678', Date.now() )\n\t\t\tfaces1.total = 16_000\n\t\t\t\n\t\t\tconst faces2 = new $hyoo_crus_face_map\n\t\t\tfaces2.time_max( '12345678', Date.now() )\n\t\t\tfaces2.time_max( '87654321', Date.now() + 1 )\n\t\t\tfaces2.total = 0\n\t\t\t\n\t\t\tconst faces3 = new $hyoo_crus_face_map\n\t\t\t\n\t\t\tconst rock1 = new Uint8Array([ 1, 2, 3 ])\n\t\t\tconst rock2 = new Uint8Array([ 3, 2, 1 ])\n\t\t\tconst hash1 = $mol_crypto_hash( rock1 )\n\t\t\tconst hash2 = $mol_crypto_hash( rock2 )\n\t\t\t\n\t\t\tconst parts = {\n\t\t\t\tlands: {\n\t\t\t\t\t[ land1 ]: { faces: faces1, units: [] },\n\t\t\t\t\t[ land2 ]: { faces: faces2, units: [] },\n\t\t\t\t\t[ land3 ]: { faces: faces3, units: [] },\n\t\t\t\t},\n\t\t\t\trocks: [\n\t\t\t\t\t[ hash1, rock1 ],\n\t\t\t\t\t[ hash2, rock2 ],\n\t\t\t\t] as $hyoo_crus_pack_parts[ 'rocks' ],\n\t\t\t}\n\t\t\t\n\t\t\t$mol_assert_equal(\n\t\t\t\tparts,\n\t\t\t\t$hyoo_crus_pack.make( parts ).parts(),\n\t\t\t)\n\t\t\t\n\t\t},\n\t\t\n\t})\n}\n","namespace $ {\n\t\n\t$mol_test_mocks.push( $=> {\n\t\tclass $hyoo_crus_yard_mock extends $.$hyoo_crus_yard {\n\t\t\t\n\t\t\tmaster() {\n\t\t\t\treturn null\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t$.$hyoo_crus_yard = $hyoo_crus_yard_mock\n\t} )\n\t\n\t$hyoo_crus_yard.masters = [\n\t\t`http://localhost:9090/`,\n\t\t$mol_dom_context.document.location.origin +'/',\n\t]\n\t\n}\n","namespace $ {\n\t\n\t$mol_test_mocks.push( $=> {\n\t\tclass $hyoo_crus_glob_mock extends $.$hyoo_crus_glob {\n\t\t\tstatic $ = $\n\t\t\tstatic lands_touched = new $mol_wire_set< $hyoo_crus_ref >()\n\t\t}\n\t\t$.$hyoo_crus_glob = $hyoo_crus_glob_mock\n\t} )\n\t\n}\n"]}